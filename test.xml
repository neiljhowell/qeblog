<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>QE Blog</title>
	<atom:link href="http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/feed/" rel="self" type="application/rss+xml" />
	<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io</link>
	<description>Where we share news, resources, and latest trends in testing</description>
	<lastBuildDate>Tue, 06 Oct 2020 05:11:47 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.5.1</generator>

<image>
	<url>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/wp-content/uploads/2020/03/cropped-Robot-icon-32x32.jpg</url>
	<title>QE Blog</title>
	<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>5 Common Mistakes in Test Automation</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/5-common-mistakes-in-test-automation/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Tue, 06 Oct 2020 05:11:47 +0000</pubDate>
				<category><![CDATA[Automation]]></category>
		<category><![CDATA[Common]]></category>
		<category><![CDATA[Mistakes]]></category>
		<category><![CDATA[Test]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/5-common-mistakes-in-test-automation/</guid>

					<description><![CDATA[Quite recently, I gave a talk at Selenium Conference 2020 Virtual on How to build an automation framework with Selenium:]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<p>Quite recently, I gave a talk at <a target="_blank" href="https://2020.seleniumconf.in/" rel="noopener noreferrer">Selenium Conference 2020</a> Virtual on <a target="_blank" href="https://confengine.com/selenium-conf-2020/proposal/13303/how-to-build-an-automation-framework-with-selenium-patterns-and-practices" rel="noopener noreferrer"><b>How to build an automation framework with Selenium: Patterns and practices</b></a>. In this session, I talked about what are some of the basic building blocks of a good test automation framework implementation and some good <a target="_blank" href="https://blog.testproject.io/2020/06/29/design-patterns-in-test-automation/" rel="noopener noreferrer">design patterns</a> to follow and anti-patterns to avoid.</p>
<p>If interested, You can see all the slides for this on <a target="_blank" href="http://automationhacks.io/slides/docs/ui_automation_framework/index.html" rel="noopener noreferrer">my blog site</a> and the video once ConfEngine releases it on their <a target="_blank" href="https://www.youtube.com/c/ConfEngine/videos" rel="noopener noreferrer">YouTube channel</a>.</p>
<p>After this talk, it led me to think more deeply in terms of what are the mistakes that we as testers/automation engineers make in our test automation, and could we rather avoid these in the first place and, well, not <b>do it</b> in the first place <img src="https://s.w.org/images/core/emoji/13.0.0/72x72/1f914.png" alt="🤔" class="wp-smiley" style="height: 1em; max-height: 1em;" />?</p>
<p>I’ve been personally burnt due to some of these mistakes in my career and so I wanted to take some time out and write this post, in order to shed some more light on these mistakes and how you can avoid making them in your test automation code.</p>
<p>We will discuss these in the UI automation context but some of these are general test automation anti-patterns to avoid.</p>
<p>Let’s get started, shall we?</p>
<h2><strong>Writing Assertions Inside The Page Objects</strong></h2>
<p>When we write <a target="_blank" href="https://testproject.io/" rel="noopener noreferrer">UI automation</a> using the page object pattern, initially it could be quite tempting to even put assertions inside the page object classes, I’ve personally been guilty of this. However, doing so leads to unnecessary complexity in the page objects wherein you might end up writing multiple methods to satisfy both positive and negative scenarios on a given page.</p>
<p>However, if your assertions are kept outside the page objects and mostly in your Test files or Test helpers, then you can treat the page object as just an abstraction for a given <b>Page or Component</b> and reuse the same method to verify different outcomes.</p>
<p>Writing assertions in tests is a very natural readable thing to do as your colleagues don’t have to dig into a long page object to figure out what the test is trying to assert. Angie Jones also alludes to this in her very insightful post on <a target="_blank" href="https://angiejones.tech/page-object-model/" rel="noopener noreferrer">Tips for healthy page objects</a>.</p>
<p>Naturally, you can adopt the same philosophy even when writing Functional API automation. Keeping assertions in test files instead of deeply nested layers of abstraction ensures you follow the <a target="_blank" href="https://en.wikipedia.org/wiki/KISS_principle" rel="noopener noreferrer">KISS (Keep it simple, stupid)</a> principle while resulting in <a target="_blank" href="https://en.wikipedia.org/wiki/Separation_of_concerns#:~:text=In%20computer%20science%2C%20separation%20of,code%20of%20a%20computer%20program." rel="noopener noreferrer">good separation of concerns</a>.</p>
<h2><strong>Writing WebDriver API Methods in Tests/Page Objects</strong></h2>
<p>While creating a UI automation framework, it is quite easy to fall in the trap of writing <a target="_blank" href="https://blog.testproject.io/2020/06/30/selenium-4-new-window-tab-screenshots/" rel="noopener noreferrer">Selenium WebDriver</a>/<a target="_blank" href="https://blog.testproject.io/category/appium/" rel="noopener noreferrer">Appium</a> Driver methods (driver.sendKeys(), driver.click()) directly in your page objects, or even in tests.</p>
<p>The main problem with such an approach is that you are mixing different responsibilities into page objects and test classes. Your test classes should be all about performing a single atomic action and verifying its outcome using meaningful well-written assertions.</p>
<p>Having WebDriver methods in tests is a really bad idea since if there are any changes in Selenium WebDrivers API or different versions of the library, then you would have to make these changes in all your test files/page objects.</p>
<p>It’s always a good idea to wrap third-party libraries into your own abstractions since this prevents these dependencies leaking throughout your framework and is a way to write clean code (You can read more about clean code <a target="_blank" href="https://automationhacks.io/2018/11/25/basics-of-writing-clean-code/" rel="noopener noreferrer">in my article</a> or in this great <a target="_blank" href="https://blog.testproject.io/2020/04/22/clean-code-in-tests-what-why-and-how/" rel="noopener noreferrer">Clean Code</a> article by Corina Pip).</p>
<p>Instead, It is much better to write wrapper functions over WebDriver methods in a <b>BasePage</b> class and either inherit or compose this in all your page objects. This way, if anything changes, you have to make these changes in a single place instead of fixing these in multiple places. This very nicely adheres to the <a target="_blank" href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself" rel="noopener noreferrer">DRY (Don’t repeat yourself)  principle</a> which is considered a very good programming practice:</p>
<blockquote>
<p>If you have WebDriver APIs in your test methods, You’re Doing It Wrong.</p>
<p>– Simon Stewart</p>
</blockquote>
<h2><strong>Writing Long E2E Tests with Multiple Actions and Assertions</strong></h2>
<p>When writing <a target="_blank" href="https://testproject.io/" rel="noopener noreferrer">test automation</a>, it is often quite convenient to model entire user journeys as long winding E2E tests with multiple intermediate assertions. You can even argue that it leads to writing less code. However, these tests in the long run turn out to be a nightmare because of multiple reasons:</p>
<ul>
<li>They execute very slowly since most of these are from the Web/Mobile level which inherently has multiple factors leading to slow speed.</li>
<li>If one earlier assertion fails, none of the succeeding assertions are executed, leading to a lack of coverage.</li>
<li>These tests are quite flaky and non-deterministic, when they fail it’s often due to multiple different reasons, leading to great difficulty in debugging and maintaining these.</li>
</ul>
<p>Above are some of the reasons why this is a bad idea. So what can we do?</p>
<p>Instead, prefer to write shorter, more targeted <a target="_blank" href="https://blog.testproject.io/2020/03/12/creating-ui-automation-that-is-focused-reliable-and-fast/" rel="noopener noreferrer">atomic tests</a> that verify a single aspect of your system under test functionality.</p>
<p>It’s quite useful to refer to the <a target="_blank" href="https://automationintesting.com/2019/08/trims-automation-in-testing-strategy.html" rel="noopener noreferrer">TRIMS</a> heuristic coined by Richard Bradshaw of <a target="_blank" href="https://www.ministryoftesting.com/" rel="noopener noreferrer">MOT (Ministry of testing</a>/<a target="_blank" href="https://automationintesting.com/" rel="noopener noreferrer">Automation In testing</a> fame).</p>
<p>The most obvious benefit that you get by writing atomic tests is that they are very easy to parallelize and deterministic in nature. When they fail, it usually is for a single reason and hence it’s quite easy to debug and maintain them.</p>
<h2><strong>Treating UI Automation as The One and Only Hammer for Every Nail</strong></h2>
<p>UI automation that works is quite wonderful to watch. Quite often one common mistake made by new budding automation engineers (after learning the WebDriver API) is obviously to try and use it for every use case that they can think of.</p>
<p>What could very well have been a medium-sized test suite to verify essential functionality (that could only be verified on the UI), turns into a gigantic suite of UI automation that tests every possible functionality from the UI <img src="https://s.w.org/images/core/emoji/13.0.0/72x72/1f92f.png" alt="🤯" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>Such a huge suite is a debugging and maintenance nightmare and very quickly turns into a <a target="_blank" href="https://en.wikipedia.org/wiki/Diminishing_returns" rel="noopener noreferrer">point of diminishing return</a> wherein you spend more time maintaining these flaky tests than spend time improving the quality of the product by the numerous other activities that you could have done.</p>
<p>I know, it’s not easy to let go of the temptation. But trust me, this is a hard choice that should be made sooner than later.</p>
<p>So what could we do?</p>
<p>Be more intentional and mindful of your automation. Treat UI automation as a part of your automation stack, but <b>not the only part</b>. You could instead test more functionality via the API or push some of these tests into Component Level tests instead of E2E tests.</p>
<h2><strong>Test Automation can Replace Exploratory Testing</strong></h2>
<p>One common mistake that a lot of organizations make is to think that <a target="_blank" href="https://blog.testproject.io/2020/03/26/automation-testing-for-beginners-ultimate-guide/" rel="noopener noreferrer">automated testing</a> is the only flavor of testing that’s needed to handle the scale of the organizations.</p>
<p>You would hear crazy claims/call to actions to automate 100% of the manual test cases as if that’s going to magically get translated into a high-quality product (valuable to the customer).</p>
<p>Test automation, while being a very powerful tool in the tool belt of a skilled tester, is not the only weapon and is quite inefficient in creatively exploring the product and thinking of its different flaws all the while exploring it. It is often inflexible in that it cannot change on the fly to different demands that your product might have, however, exploratory testing can.</p>
<p>Thus, instead of one being the replacement of others, think of them as two amigos and two sides of the same coin: with test automation as a way to get rid of the boring repeatable steps and to take care of giving the fast feedback that the team needs, whereas exploratory testing as a way to find the different areas of the system that are not yet explored and can feed into future automation projects or find really hard to detect bugs.</p>
<h2><strong>Conclusion</strong></h2>
<p>Are these the only mistakes that an automation engineer can make? Heck no, I’m sure you would have made some yourself. Why not share your experience around it with the community so that we can all learn from them and maybe not make them in the first place</p>
<p>If you found this post useful, do share it with a friend or colleague. Until next time, Happy Testing/Coding <img src="https://s.w.org/images/core/emoji/13.0.0/72x72/262e.png" alt="☮" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
</div>
<p><br />
<br /><a href="https://blog.testproject.io/2020/10/06/common-mistakes-in-test-automation/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Egregor Ransomware Threatens &#8216;Mass-Media&#8217; Release of Corporate Data</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/egregor-ransomware-threatens-mass-media-release-of-corporate-data/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 02 Oct 2020 21:31:53 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Corporate]]></category>
		<category><![CDATA[Data]]></category>
		<category><![CDATA[Egregor]]></category>
		<category><![CDATA[MassMedia]]></category>
		<category><![CDATA[Ransomware]]></category>
		<category><![CDATA[release]]></category>
		<category><![CDATA[Threatens]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/egregor-ransomware-threatens-mass-media-release-of-corporate-data/</guid>

					<description><![CDATA[The administrator of your personal data will be Threatpost, Inc., 500 Unicorn Park, Woburn, MA 01801. Detailed information on the]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<div class="c-note c-note--dash u-hidden u-block@md">
<p>The administrator of your personal data will be Threatpost, Inc., 500 Unicorn Park, Woburn, MA 01801. Detailed information on the processing of personal data can be found in the <a target="_blank" href="https://threatpost.com/web-privacy-policy/" rel="noopener noreferrer">privacy policy</a>. In addition, you will find them in the message confirming the subscription to the newsletter.</p>
</div>
</div>
<p><br />
<br /><a href="https://threatpost.com/egregor-ransomware-mass-media-corporate-data/159816/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Convenience vs. Online Security: Have Your Cake and Eat It Too</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/convenience-vs-online-security-have-your-cake-and-eat-it-too/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 02 Oct 2020 15:23:32 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Cake]]></category>
		<category><![CDATA[Convenience]]></category>
		<category><![CDATA[Eat]]></category>
		<category><![CDATA[Online]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/convenience-vs-online-security-have-your-cake-and-eat-it-too/</guid>

					<description><![CDATA[Convenience vs. Online Security: Have Your Cake and Eat It Too We live in a world where convenience is king.]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<div class="author-block padding-bottom-xs">
                
            </div>
<h2><strong>Convenience vs. Online Security: Have Your Cake and Eat It Too</strong></h2>
<p>We live in a world where convenience is king. Personally, I don’t know what I would do without my calendar alerts popping up on my smartphone, ensuring that I don’t miss any important meetings (or birthdays).  I can also use a variety of apps to make appointments with my family’s doctor and check up on my kids’ educational progress while they are at home distance learning. While this technology is great and convenient, it has led to increased connectivity which tends to cause security implications. At what point do we draw the line between convenience and online security, and is there a way to ultimately have both? Let’s take a look.</p>
<h3><strong>Are Consumers Confident in Their Online Safety</strong><strong>? </strong></h3>
<p>Consumers want to live their lives fast. They are constantly on the go, prioritizing speedy technology and convenience – sometimes more than safety. As a result, basic security hygiene, like updating passwords, has fallen by the wayside. In fact, a <a target="_blank" href="https://securitybrief.co.nz/story/consumers-putting-convenience-over-security-due-to-covid-19-restrictions" rel="noopener noreferrer">recent survey conducted by YouGov</a> in April of 2020 revealed that consumers are overconfident in the level of protection that their credentials provide. 77% believe that their <a target="_blank" href="https://www.mcafee.com/blogs/consumer/online-banking-simple-steps-to-protect-yourself-from-bank-fraud/" rel="noopener noreferrer">banking credentials</a> are the most secure, followed by <a target="_blank" href="https://www.mcafee.com/blogs/consumer/online-shopping-scams-7-ways-to-fight-them/" rel="noopener noreferrer">online shopping</a> (74%), and work network logins (71%). Due to consumers’ overconfidence in the strength of their credentials, over half of online shoppers admitted that they have no plans to update their login details – and even more admitted to not updating bank and work passwords. As someone who just recently wrote a blog on common <a target="_blank" href="https://www.mcafee.com/blogs/consumer/what-does-your-password-say-about-your-preferences/" rel="noopener noreferrer">password habits</a> and how they can affect our online safety,</p>
<h3><strong>Finding a Balance Between Convenience and Security </strong></h3>
<p>As today’s users are trying to grasp what the “new normal” means for them and how they live their lives, many are branching out from the typical ways they used to order food, take workout classes, and more. Consumers are using food delivery sites that they’ve never used before and signing up for online fitness classes on new platforms to  stay healthy while social distancing. But by using these unfamiliar websites to establish a sense of normalcy, users might forget to take basic security precautions like making sure these websites have the standard <a target="_blank" href="https://" rel="noopener noreferrer">https://</a> security clearance or using a VPN. Paying attention to these security measures while exploring new platforms will allow users to enjoy the convenience of these tools without putting their online safety at risk.</p>
<p>According to <a target="_blank" href="https://www.mcafee.com/enterprise/en-us/lp/covid-19-dashboard.html;" rel="noopener noreferrer">McAfee Labs</a>, more than 113,000 websites have been published that used COVID-19 to lure internet users into giving up their personal details. But despite the risks associated with poor security hygiene, consumers appear to be pretty indifferent. When asked if <a target="_blank" href="https://www.mcafee.com/enterprise/en-us/assets/reports/rp-quarterly-threats-july-2020.pdf" rel="noopener noreferrer">COVID-19 and increased fraud</a> influenced them to use alternative banking or shopping apps/websites with more secure options, <a target="_blank" href="https://securitybrief.co.nz/story/consumers-putting-convenience-over-security-due-to-covid-19-restrictions" rel="noopener noreferrer">over three-quarters of U.S. consumers</a> stated no, or that they didn’t know. At the onset of the pandemic when consumers were under pressure to buy scarce, staple items, <a target="_blank" href="https://securitybrief.co.nz/story/consumers-putting-convenience-over-security-due-to-covid-19-restrictions" rel="noopener noreferrer">26% of consumers</a> in the U.S. admitted to overlooking online security concerns by using third-party merchants to buy things like toilet paper and disinfecting products.</p>
<p>Today’s users already have so much to worry about – I can’t blame them if their online security is falling by the wayside to allow physical health and wellness to take precedent. It’s times like these when people need to prioritize their health and basic survival above all else that consumers benefit most from intrinsic security that is constantly working in the background, so they can have peace of mind.</p>
<h3><strong>Let Them Have Security (and Convenience!)</strong></h3>
<p>The good news: convenience and security don’t have to be mutually exclusive. I can still use my healthcare provider’s app to schedule appointments and check in on my kids as they distance learn without risking our family’s privacy. When it comes to balancing convenience and online security, you and your family should use trusted solutions that will allow you to enjoy <a target="_blank" href="https://www.mcafee.com/blogs/consumer/securing-digital-frontiers/" rel="noopener noreferrer">all that the internet has to offer</a>  by providing security that is easy, convenient, and empowers you to enjoy a safe and private digital live.</p>
<p>Users can enjoy a comprehensive, yet holistic approach to protection by employing the help of a security solution like <a target="_blank" href="https://www.mcafee.com/en-us/antivirus/mcafee-total-protection.html" rel="noopener noreferrer">McAfee® Total Protection</a>. Consumers are safeguarded from malware  so they can continue to use their devices and web browsing to stream live workout classes, catch up with family over video conference, and more. The software’s detection capabilities are constantly being updated and enhanced <a target="_blank" href="https://www.mcafee.com/blogs/consumer/security-software-and-device-performance/" rel="noopener noreferrer">without compromising users’ device performance</a>.</p>
<p>McAfee Total Protection also includes <a target="_blank" href="https://www.mcafee.com/en-us/safe-browser/mcafee-webadvisor.html" rel="noopener noreferrer">McAfee® WebAdvisor</a> – web protection that enables users to sidestep attacks before they happen with clear warnings of risky websites, links, and files. McAfee WebAdvisor allows consumers to online shop or order food from their favorite restaurant while giving them the peace of mind that they’re on a safe website.</p>
<p>McAfee Total Protection also includes our secure VPN to ensure your family is prepared for potential threats that could be lurking around the corner. By enabling a VPN on your device, you can feel confident that the next time you bank or pay bills online, your connection is secure. With solutions like McAfee Total Protection and McAfee WebAdvisor in place, consumers can strike a balance between convenience and security, without sacrificing either.</p>
<h3><strong>Stay Updated</strong></h3>
<p>To stay updated on all things <a target="_blank" href="https://www.mcafee.com/en-us/index.html" rel="noopener noreferrer">McAfee</a> and on top of the latest consumer and mobile security threats, follow <a target="_blank" href="https://twitter.com/McAfee_Home" rel="noopener noreferrer">@McAfee_Home</a> on Twitter, listen to our podcast <a target="_blank" href="https://geo.itunes.apple.com/podcast/us/id1257232208?mt=2&#038;at=1010lbVy&#038;ct=mcafeehackable_GaryBlog_EndBlurb" rel="noopener noreferrer">Hackable?</a>, and ‘Like’ us on <a target="_blank" href="https://www.facebook.com/McAfee" rel="noopener noreferrer">Facebook</a>.</p>
<p> </p>
</p></div>
<p><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script><script>
  !function(f,b,e,v,n,t,s)
  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  s.parentNode.insertBefore(t,s)}(window, document,'script',
  'https://connect.facebook.net/en_US/fbevents.js');
  fbq('init', '187610925152304');
  fbq('track', 'PageView');
</script><script>
// load Facebook
!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;
t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,
document,'script','https://connect.facebook.net/en_US/fbevents.js');
fbq('init', '766537420057144');
fbq('track', "PageView");</p>
<p>//document.write('x3Cnoscript>x3Cimg height="1" width="1" style="display:none" src="https://www.facebook.com/tr?id=766537420057144&ev=PageView&noscript=1" />x3C/noscript>');
</script><br />
<br /><br />
<br /><a href="https://www.mcafee.com/blogs/consumer/convenience-vs-online-security-have-your-cake-and-eat-it-too/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Learn from Google &#8211; Use Google Cloud Build</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/learn-from-google-use-google-cloud-build/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Thu, 01 Oct 2020 20:51:44 +0000</pubDate>
				<category><![CDATA[Automation]]></category>
		<category><![CDATA[build]]></category>
		<category><![CDATA[Cloud]]></category>
		<category><![CDATA[Google]]></category>
		<category><![CDATA[Learn]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/learn-from-google-use-google-cloud-build/</guid>

					<description><![CDATA[We all want to catch and fix problems as early as possible. In software development, this mindset helps development teams]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<p>We all want to catch and fix problems as early as possible. In software development, this mindset helps development teams create a culture of continuous improvement. To automate best practices, like Continuous Integration &#038; Continuous Delivery (CI/CD), teams are adopting tools that help automate continuous improvement. Google has created a great tool in Google Cloud Build.</p>
<p>By creating Google Cloud Build, Google has created a platform that helps every software developer from every walk of life, on teams of every size. Google Cloud Build is a fully managed cloud application development environment. It includes an associated set of build and test management tools that also encompasses automation and workflow controls, along with privacy and vulnerability analysis intelligence.</p>
<p>Regardless of the speed or scale that teams are able to build, test and deploy software. This is very much aligned with the vision of Applitools specially after the launch of the Ultrafast Visual Grid. Supporting an integration between Google Cloud Build and Applitools provides every software developer the ability to run their tests across all environments at the speed of light and get the feedback seamlessly in second as a part of the build process.</p>
<h2>Integrate Applitools with Google Cloud Build</h2>
<p>To get started, follow the following steps to integrate Applitools into your Google Cloud Build.<strong> </strong></p>
<ul>
<li>Step 1: Create an account on Google Cloud Platform.</li>
<li>Step 2: Navigate to the Cloud build.</li>
</ul>
<p>Create the trigger and select your source code management tool (in this example I have chosen GitHub ) and  connect your repository.</p>
<figure class="wp-block-image"></figure>
<p>Allow the required access to perform the trigger runs on every commit on each branch or each pull request.</p>
<p>Edit your trigger and select the Build Configuration as <strong>Cloudbuild.yaml</strong> or <strong>Dockerfile</strong>.</p>
<figure class="wp-block-image"><img loading="lazy" width="1600" height="881" src="https://applitools.com/wp-content/uploads/2020/10/image4.png" alt="image4" class="wp-image-23723" srcset="https://applitools.com/wp-content/uploads/2020/10/image4.png 1600w, https://applitools.com/wp-content/uploads/2020/10/image4-300x165.png 300w, https://applitools.com/wp-content/uploads/2020/10/image4-1024x564.png 1024w, https://applitools.com/wp-content/uploads/2020/10/image4-768x423.png 768w, https://applitools.com/wp-content/uploads/2020/10/image4-1536x846.png 1536w" sizes="(max-width: 1600px) 100vw, 1600px"/></figure>
<p>Once you make a small change in application and push it up to GitHub this will kick off the Cloud Build trigger you’ve just created.</p>
<h2 id="h.90kjt29rb4kb">Continue With Applitools Setup</h2>
<p>Now follow these steps to configure your Applitools setup.</p>
<ul>
<li>Step 1: Navigate to admin panel in the Applitools eyes dashboard</li>
</ul>
<figure class="wp-block-image"><img loading="lazy" width="1600" height="604" src="https://applitools.com/wp-content/uploads/2020/10/image5.png" alt="image5" class="wp-image-23721" srcset="https://applitools.com/wp-content/uploads/2020/10/image5.png 1600w, https://applitools.com/wp-content/uploads/2020/10/image5-300x113.png 300w, https://applitools.com/wp-content/uploads/2020/10/image5-1024x387.png 1024w, https://applitools.com/wp-content/uploads/2020/10/image5-768x290.png 768w, https://applitools.com/wp-content/uploads/2020/10/image5-1536x580.png 1536w" sizes="(max-width: 1600px) 100vw, 1600px"/></figure>
<ul>
<li>Step 2: Go to Teams and select your team</li>
</ul>
<p><img loading="lazy" width="1600" height="605" class="wp-image-23726" src="https://applitools.com/wp-content/uploads/2020/10/image2.png" alt="image2" srcset="https://applitools.com/wp-content/uploads/2020/10/image2.png 1600w, https://applitools.com/wp-content/uploads/2020/10/image2-300x113.png 300w, https://applitools.com/wp-content/uploads/2020/10/image2-1024x387.png 1024w, https://applitools.com/wp-content/uploads/2020/10/image2-768x290.png 768w, https://applitools.com/wp-content/uploads/2020/10/image2-1536x581.png 1536w" sizes="(max-width: 1600px) 100vw, 1600px"/></p>
<ul>
<li>Step 3: Select your team and Navigate to Integrations Section</li>
</ul>
<figure class="wp-block-image"><img loading="lazy" width="1600" height="605" src="https://applitools.com/wp-content/uploads/2020/10/image1.png" alt="image1" class="wp-image-23728" srcset="https://applitools.com/wp-content/uploads/2020/10/image1.png 1600w, https://applitools.com/wp-content/uploads/2020/10/image1-300x113.png 300w, https://applitools.com/wp-content/uploads/2020/10/image1-1024x387.png 1024w, https://applitools.com/wp-content/uploads/2020/10/image1-768x290.png 768w, https://applitools.com/wp-content/uploads/2020/10/image1-1536x581.png 1536w" sizes="(max-width: 1600px) 100vw, 1600px"/></figure>
<ul>
<li>Step 4: Integrate your GitHub repo with Applitools</li>
</ul>
<figure class="wp-block-image"><img loading="lazy" width="1600" height="769" src="https://applitools.com/wp-content/uploads/2020/10/image3.png" alt="image3" class="wp-image-23725" srcset="https://applitools.com/wp-content/uploads/2020/10/image3.png 1600w, https://applitools.com/wp-content/uploads/2020/10/image3-300x144.png 300w, https://applitools.com/wp-content/uploads/2020/10/image3-1024x492.png 1024w, https://applitools.com/wp-content/uploads/2020/10/image3-768x369.png 768w, https://applitools.com/wp-content/uploads/2020/10/image3-1536x738.png 1536w" sizes="(max-width: 1600px) 100vw, 1600px"/></figure>
<h2 id="h.6f1avrsl9qnm">Run Your Cypress Tests</h2>
<p>Now, run your Cypress tests on Google Cloud build.</p>
<ul>
<li>Step 1: Let us clone the demo Cypress project from Applitools Cypress </li>
</ul>
<p><a target="_blank" href="https://applitools.com/tutorials/cypress.html" rel="noopener noreferrer">https://applitools.com/tutorials/cypress.html</a> </p>
<ul>
<li>Step 2: Create a<strong> cloudbuild.yaml fi</strong>le to pass the build steps.</li>
</ul>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/rmadhiapplitools/1033521c2be4fe0b7dc89a968ff89f86.js</p>
</div>
<p>To run a Cypress end-to-end test let’s use a Docker.</p>
<p>In the Docker file we have defined the steps to copy the Docker images, files, Cypress folder, add configurations and execute the scripts.</p>
<p>Make sure to set the APPLITOOLS_API_KEY as ENV variable or access it from secrets in the Docker file.</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/rmadhiapplitools/6c343c4e25b86a91bea62dde956cfc7f.js</p>
</div>
<p>Applitools build status is reported based on COMMIT_SHA, hence we need to access the git commit_sha in the Docker and assign the COMMIT_SHA to Applitools BatchID as ENV variable.</p>
<p>Once the test is completed the curl command in Docker will perform a post call to update the build status.</p>
<p>Once you build your project. Applitools can visually validate each commit and reports the build status.</p>
<figure class="wp-block-image"><img loading="lazy" width="1600" height="788" src="https://applitools.com/wp-content/uploads/2020/10/image7.png" alt="image7" class="wp-image-23724" srcset="https://applitools.com/wp-content/uploads/2020/10/image7.png 1600w, https://applitools.com/wp-content/uploads/2020/10/image7-300x148.png 300w, https://applitools.com/wp-content/uploads/2020/10/image7-1024x504.png 1024w, https://applitools.com/wp-content/uploads/2020/10/image7-768x378.png 768w, https://applitools.com/wp-content/uploads/2020/10/image7-1536x756.png 1536w" sizes="(max-width: 1600px) 100vw, 1600px"/></figure>
<figure class="wp-block-image"><img loading="lazy" width="1600" height="819" src="https://applitools.com/wp-content/uploads/2020/10/image8.png" alt="image8" class="wp-image-23727" srcset="https://applitools.com/wp-content/uploads/2020/10/image8.png 1600w, https://applitools.com/wp-content/uploads/2020/10/image8-300x154.png 300w, https://applitools.com/wp-content/uploads/2020/10/image8-1024x524.png 1024w, https://applitools.com/wp-content/uploads/2020/10/image8-768x393.png 768w, https://applitools.com/wp-content/uploads/2020/10/image8-1536x786.png 1536w" sizes="(max-width: 1600px) 100vw, 1600px"/></figure>
<h2>Watch the video to try out the integrations &#038; Keep Testing!</h2>
<p><strong>Watch the video to try out the integrations &#038; Keep Testing!</strong></p>
<div class="video-embed" data-id="https://drive.google.com/file/d/1anSqF_1WBIGfvm1nOtpqsFwI4hjYKrGV/view" data-image="https://applitools.com/wp-content/uploads/2020/10/Google-Cloud-Build-and-Applitools.jpg" id="videoEmbed">
  <span class="visible-admin"><br />
    <img class="visible-admin" src="https://applitools.com/wp-content/uploads/2020/10/Google-Cloud-Build-and-Applitools.jpg"/><br />
  </span>
</div>
</p></div>
<p><br />
<br /><a href="https://applitools.com/blog/google-cloud-build/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Best Practices for Shifting Accessibility Testing Left</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/best-practices-for-shifting-accessibility-testing-left/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
				<category><![CDATA[Automation]]></category>
		<category><![CDATA[Accessibility]]></category>
		<category><![CDATA[Left]]></category>
		<category><![CDATA[Practices]]></category>
		<category><![CDATA[Shifting]]></category>
		<category><![CDATA[testing]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/best-practices-for-shifting-accessibility-testing-left/</guid>

					<description><![CDATA[QA professionals, testers, and developers are constantly learning new tools, tech stacks, and development practices. When they’re told they have]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<p>QA professionals, testers, and developers are constantly learning new tools, tech stacks, and development practices. When they’re told they have to learn accessibility, it can often feel like an unwelcome and overwhelming disruption, slowing them down and forcing them to test and rewrite what they thought was perfectly good code.</p>
<p>The good news is accessibility tools are more tester-friendly than ever. Automated accessibility tools fit seamlessly into modern development environments, and are a great way to shift accessibility left in the Software Development Lifecycle (SDLC), bringing accessibility testing closer and closer towards design. </p>
<p>In this blog, I’ll share four best practices for shifting accessibility testing left. I’ll also cover how to integrate <a target="_blank" href="http://deque.com/axe" rel="noopener noreferrer">axe</a>, Deque’s open source accessibility tool, in NodeJs Jest with the Selenium browser automation tool and Jest.</p>
<h2>First: Debunk the Myths About Accessibility </h2>
<p>Traditional accessibility testing is often thought of as slow and manual and done at the end of the SDLC in user testing, after production. While manual accessibility is still a necessary part of testing, 50% of accessibility defects can be caught with automation. </p>
<p>Nowadays, there are accessibility tools that are built to integrate into every part of the software development lifecycle, from development to testing to when your site or application is released. These tools are built by and for dev teams with modern development environments, so they won’t slow down your development velocity.</p>
<p></p>
<p><i>Illustration of where tools fit into each role of the software development lifecycle: accessible design for designers, axe DevTools for front-end developers, test automation engineers, senior developers and product owners, axe Auditor for QA testers and accessibility testers, and axe Monitor for central accessibility leaders.</i></p>
<p>Shifting accessibility left in the SDLC can be done easier and faster with automated accessibility tools, <b>and </b>it also saves development time and resources. <a target="_blank" href="https://saucelabs.com/ftp://ftp.software.ibm.com/software/rational/info/do-more/RAW14109USEN.pdf" rel="noopener noreferrer">IBM studies</a> have shown that defects caught post-production are 30x more expensive than in design, coding, and testing. Small investments of time and resources in development for accessibility will ultimately save your organization money and ensure less disruption to the SDLC.</p>
<p><img src="https://images.ctfassets.net/czwjnyf8a9ri/3t2lDivBA4pgllFMM5El1M/6c260e7e638892b22438a20e6d1d81f0/accessibility_blog_2.png?fm=webp" alt="accessibility blog 2" title="accessibility blog 2"/></p>
<p><i>Diagram showing small investments for accessibility during backlog, design, coding and testing (i.e. shifting accessibility left) vs. large investments for accessibility during release (traditional way accessibility is practiced).</i></p>
<h2>Start Simple with Free, Open Source Tools</h2>
<p>If developers and testers can automate something, they will. When accessibility can be automated, developers and testers are much more likely to start incorporating accessibility into their development process. </p>
<p>Until recently, “automated accessibility testing” meant cumbersome “scan and report” tools that could only be used once your application was practically ready to be deployed (if it hadn’t been deployed already). Dev and testing teams would get long lists of accessibility issues that could require a fundamental reworking of components, causing expensive and frustrating slow-downs in the development cycle.</p>
<p>Luckily, accessibility tools have come a long way, and developers and testers can now access automated accessibility testing tools that can run as part of their existing workflow. Issues are raised while they’re coding, making fixes much more efficient. With free tools like <a target="_blank" href="https://www.deque.com/axe/" rel="noopener noreferrer">axe</a>, you can start testing for accessibility in minutes.</p>
<p>Axe-core is Deque’s open source accessibility rules engine, which powers a number of accessibility tools from Deque. Perhaps most notably, axe-core powers the axe browser extension available for <a target="_blank" href="https://chrome.google.com/webstore/detail/axe-web-accessibility-tes/lhdoppojpmngadmnindnejefpokejbdd?hl=en-US" rel="noopener noreferrer">Chrome</a>, <a target="_blank" href="https://addons.mozilla.org/en-US/firefox/addon/axe-devtools/" rel="noopener noreferrer">FireFox</a>, and <a target="_blank" href="https://microsoftedge.microsoft.com/addons/detail/axe-web-accessibility-t/kcenlimkmjjkdfcaleembgmldmnnlfkn" rel="noopener noreferrer">Microsoft Edge</a>.</p>
<p>It’s important to note, however, that automated accessibility testing tools can only catch 50% of your accessibility defects. Your application will still <b>need to undergo manual testing</b> with assistive technology tools, especially if your organization has any concerns about compliance with accessibility regulations or legal risk. </p>
<p>It used to be that manual testing could only be done by an accessibility expert who is familiar with assistive technology. Now, the axe suite of tools offers Intelligent Guided Testing (IGT), to help guide developers, testers, and product owners through the testing for accessibility issues using a wizard based approach that removes the necessity to be an expert in accessibility. IGT will improve your coverage to <b>80%</b> without needing specialized knowledge or expertise.</p>
<p>To recap, using the automation in the axe browser extension is a great way to start testing for accessibility. However, it’s important to note that manual testing or IGT is needed to move towards full accessibility.</p>
<h2>Use Unit Tests in The Place of Manual Accessibility Regression-Testing</h2>
<p>Some manual accessibility testing can’t be done with automated tools. For example, using a screen reader or doing keyboard only testing using the tab key to simulate the experience for users with disabilities on your site or application.</p>
<p>Although some things around accessibility must be validated manually, such as alt text, you can still write simple unit or integration tests to validate the alt text so that future releases do not break the accessibility without being caught. Furthermore, if you have the design information, it’s easy for testers to proactively include accessibility requirements into automated tests.</p>
<p>For example, the code below is testing the Deque logo and the alt attribute associated with it:</p>
<p>1     <code><// Check the Deque Logo</code></p>
<p>2     <code>ok(img.src.indexOf('logo.png' !== -1, 'image is the Deque logo image'));</code></p>
<p>3    <code>equal(img.getAttribute('alt'), 'Deque Logo');></code></p>
<p>Testing is ultimately about risk mitigation, so you need to figure out how often you want to retest things manually to verify that compatibility has not changed. Usually, this is only necessary when there is a major update released for screen readers, operating systems, or browsers.</p>
<h2>Train Dev and QA Teams on Accessibility</h2>
<p>An important part of getting started with accessibility is having the right tool. The second important key to accessibility is training. The sad truth is that testers and developers don’t learn about accessibility in professional training. Additionally, most developers or testers have never witnessed a person with a disability using an assistive technology, and having a firm understanding of accessibility is key to long term success with accessibility. </p>
<p>Outside training creates the fundamental foundation that is critical for building a culture of accessibility. Furthermore, beyond automation and accessibility, there are nuances to accessibility that are easier to learn from experts in hands-on training. For example, there are many intricacies related to single-page applications, how to use screen readers for testing, building tests and scripts for accessibility, building a constructive and useful accessibility issue log, etc. </p>
<h2>Selenium WebdriverJS and axe-core Integration </h2>
<p>Now that we’ve discussed the best, easy steps to shift accessibility left in the SDLC from production to development and testing, we’ll review how to use axe-core to run web accessibility tests in NodeJS based projects with the Selenium browser automation tool and Jest. </p>
<p><i>This example below assumes you have Node Js and Npm installed.</i></p>
<p>The first step is to install the proper package into your project, by running </p>
<pre><code>npm i axe-webdriverjs</code></pre>
<p>Once installed you should see the following in your package.json:</p>
<pre><code> “dependencies”: {</code></pre>
<pre><code>    “axe-webdriverjs”: “^2.3.0”,</code></pre>
<pre><code>    "selenium-webdriver": "^4.0.0-alpha.7"</code></pre>
<pre><code>  }</code></pre>
<p>Now your dependencies are set up, and you need to pull in the right classes and set things up.</p>
<p>In any file that runs a UI test using Webdriver, import the classes required:</p>
<pre><code>var WebDriver = require('selenium-webdriver');</code></pre>
<pre><code>var chrome = require('selenium-webdriver/chrome');</code></pre>
<pre><code>var AxeBuilder = require('axe-webdriverjs');</code></pre>
<p>And set up your driver with specific options you want like so: </p>
<pre><code>Var driver;</code></pre>
<pre><code>beforeAll(async () => {</code></pre>
<pre><code>driver = new WebDriver.Builder().forBrowser('chrome').setChromeOptions(options).build();</code></pre>
<pre><code>});</code></pre>
<p>Note: we have told the library to use the standard <a target="_blank" href="https://www.w3.org/TR/WCAG20/" rel="noopener noreferrer">WCAG 2.0 A and AA</a> rule sets which will report on all violations excluding best practices, experimental rules, etc.</p>
<p>Now, wherever your tests set up the Webdriver instance and/or cause UI states to change, make calls to the library to analyze the page and generate reports:</p>
<pre><code>test('should test for what the overlay does (add specific test scenario)', async () => {</code></pre>
<pre><code>await driver.get('https://dequeuniversity.com/demo/mars/').then(function() {</code></pre>
<pre><code>    AxeBuilder(driver).analyze(function(err, results) {</code></pre>
<pre><code>      if (err) {</code></pre>
<pre><code>        // Handle error somehow</code></pre>
<pre><code>      }</code></pre>
<pre><code>      console.log(results);</code></pre>
<pre><code>      await expect(results.violations.length).toBe(0);</code></pre>
<pre><code>    });</code></pre>
<pre><code>  });</code></pre>
<pre><code> });</code></pre>
<p>There are many more features in the library that allow for customization of scans that includes turning on and off rules, excluding content to scan, and running specific rulesets only. Getting started with this integration will make accessibility a core part of your CI/CD pipeline.</p>
<h2>Beyond the Power of axe: axe DevTools</h2>
<p>The power of axe is a great place to get started if you’re completely new to accessibility. If your organizations need more coverage and features to help get your team up and running, <a target="_blank" href="https://www.deque.com/axe/devtools/" rel="noopener noreferrer">axe DevTools</a> is the right solution.</p>
<p>Beyond the free axe browser extension, axe DevTools is the enterprise solution that provides:</p>
<ul>
<li>
<p>Intelligent guided tests that increase accessibility coverage from 50 to 80%</p>
</li>
<li>
<p>Command-Line Interface (CLI) testing tools</p>
</li>
<li>
<p>A variety of axe integrations for languages such as: Ruby, CSharp, Java, NodeJs</p>
</li>
<li>
<p>Each of the axe DevTools integrations are built in a plug and play fashion that can be used seamlessly with popular industry-standards continuous integration (CI) tools such as Sauce Labs, Jenkins, CircleCI.</p>
</li>
</ul>
<h2>Additional Resources</h2>
<p>Starting with free automated tooling in the axe browser extension, in unit tests, or in your CI/CD pipeline is a great way to catch 50% of accessibility issues. Training is also key in building a culture of accessibility to properly build it into your SDLC. If you want to learn more about accessibility, and how to embed it throughout your organization, check out the resources below.</p>
<ol>
<li>
<p>My on-demand SauceCon Online presentation: <a target="_blank" href="http://saucecon.com/agenda-2020?agendaPath=session/251078" rel="noopener noreferrer">Automation and Accessibility: Debunking the Myths</a></p>
</li>
<li>
<p><a target="_blank" href="https://accessibility.deque.com/agile-accessibility-handbook" rel="noopener noreferrer">Free eBook: Agile Accessibility Handbook</a></p>
</li>
<li>
<p><a target="_blank" href="https://accessibility.deque.com/virtual-instructor-led-training" rel="noopener noreferrer">Request Deque’s Virtual, Instructor-led Role-based Training</a> or learn online at your own pace with <a target="_blank" href="https://dequeuniversity.com/" rel="noopener noreferrer">Deque University</a>.</p>
</li>
</ol>
<p>Sauce Labs is also hosting an upcoming webinar on <a target="_blank" href="https://info.saucelabs.com/accessibility-testing-selenium-webinar-100820.html" rel="noopener noreferrer">Using Axe to Add Accessibility Checks to Your Existing Selenium tests</a>. Join the session and learn how to put this into practice. </p>
<h2>In Summary</h2>
<p>There are many ways to get started with accessibility testing in the software development process, such as using the <a target="_blank" href="https://www.deque.com/axe/" rel="noopener noreferrer">axe</a> browser extension, building unit tests for manual accessibility reminders, and investing in training. To take it one step further, you can use the axe and Selenium integration outlined above in your CI/CD pipeline. </p>
<p>Using free, open source tools to practice automated accessibility testing early in your SDLC will help shift accessibility left — ultimately saving your development team time and resources while making the web a more inclusive place for all.</p>
<h3>About the Author</h3>
<p>Dylan Barrell is the Chief Product Officer at Deque. He has almost 20 years of experience in technology development, technical sales, product management, product marketing, and corporate development. Dylan founded a startup in 1989 that was acquired. He then went public with OpenText and helped grow revenues to over $400 million. He later led the effort to create a digital center within a Borders store and to begin the transition from purely physical products to digital and physical product mix delivered in a cross channel online and in-store way. In addition to his work experience, Dylan has an MBA from the University of Michigan and a BS from the University of the Witwatersrand. Dylan believes in leading through action to create value for shareholders and the community.</p>
</div>
<p><br />
<br /><a href="https://saucelabs.com/blog/best-practices-for-shifting-accessibility-testing-left">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Why Web Browser Padlocks Shouldn’t Be Trusted</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/why-web-browser-padlocks-shouldnt-be-trusted/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Tue, 29 Sep 2020 23:34:03 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[browser]]></category>
		<category><![CDATA[Padlocks]]></category>
		<category><![CDATA[Shouldnt]]></category>
		<category><![CDATA[Trusted]]></category>
		<category><![CDATA[web]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/why-web-browser-padlocks-shouldnt-be-trusted/</guid>

					<description><![CDATA[Popular ‘safe browsing’ padlocks are now passe as a majority of bad guys also use them. Source link]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />Popular ‘safe browsing’ padlocks are now passe as a majority of bad guys also use them.<br />
<br /><br />
<br /><a href="https://threatpost.com/why-web-browser-padlocks-shouldnt-be-trusted/159659/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>You built a talented QA team. Here&#8217;s how to keep them</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/you-built-a-talented-qa-team-heres-how-to-keep-them/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Tue, 29 Sep 2020 15:00:00 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[built]]></category>
		<category><![CDATA[Heres]]></category>
		<category><![CDATA[talented]]></category>
		<category><![CDATA[team]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/you-built-a-talented-qa-team-heres-how-to-keep-them/</guid>

					<description><![CDATA[As a New York City public school teacher, I taught general music classes to up to 50 students, each with varying]]></description>
										<content:encoded><![CDATA[<p> <br />
<br /></p>
<div>
<p>As a New York City public school teacher, I taught general music classes to up to 50 students, each with varying degrees of ability and readiness to learn. Fast forward 12 years: As a new people manager, I had to hire 25 QA engineers at Salesforce.org, all with <a target="_blank" href="https://content.microfocus.com/qa-testing-careers-tb/test-automation-qa-career?lx=rI_Ys9&#038;utm_source=techbeacon&#038;utm_medium=referral&#038;utm_campaign=00172440" rel="noopener noreferrer">varying degrees of technical and domain experience</a>. </p>
<p>I knew this would be a challenge. How would I address the unique needs of my team while building everyone&#8217;s competencies? </p>
<p>My answer: Go back to my educational roots. Reading articles about management reminded me that I had <a target="_blank" href="https://techbeacon.com/devops/10-ways-build-highly-effective-devops-teams" rel="noopener noreferrer">many effective strategies</a> in my toolbox to deal with just such a situation. Differentiated instruction is an educational method practiced for a century (formalized by <a target="_blank" href="https://www.linkedin.com/in/carol-tomlinson-19bb8716/" rel="nofollow noopener noreferrer">Carol Ann Tomlinson</a>), proposing that students do best when classroom instruction is adjusted based on their needs. </p>
<p>To meet the diverse needs of my new team and help them grow, I drew on this work, as well as communication strategies from <a target="_blank" href="https://psychcentral.com/lib/an-overview-of-dialectical-behavior-therapy/" rel="nofollow noopener noreferrer">Dialectical Behavioral Therapy</a> (DBT, developed by <a target="_blank" href="https://twitter.com/DrLinehan" rel="nofollow noopener noreferrer">Marsha Linehan</a>), and developed a strategy I call &#8220;differentiated management.&#8221;</p>
<p>This strategy will help you keep valued team members on board and help struggling members become better, all while continuing to manage your organization and meet deliverables. Here&#8217;s a crash course.</p>
<h3><strong>How to practice differentiated management </strong></h3>
<p>Differentiated management is based on the assumption that every team member comes to work with her or his own experiences, strengths, and weaknesses. The strategy works by helping managers learn how to differentiate content, process, and products by learning more about their employees. Of course, the workplace has a different dynamic than the classroom, so implementing these strategies requires a more nuanced approach. </p>
<p>On an engineering team, content is the information and materials we provide the team to do their jobs. Process is the means by which the team accomplishes the job, whether it&#8217;s a design, bug fix, built-in testability, or wholesale process changes to make working easier for all team members.</p>
<p>Product is the outcome of the work, and it&#8217;s the area where we as managers can be flexible. This may include more agile approaches around work planning to deliver smaller pieces more quickly; it may also include flexibility in reporting or documentation.</p>
<p>The difficult part of practicing differentiated management is not what to change; what you can change in the content, process, or product is somewhat limited in a software delivery context. However, the difficulty lies in knowing how best to make changes for your organization and the unique team environment in which you work.</p>
<p>Traditional people management strategies tend to focus on a one-size-fits-all approach, or tend toward stereotypes of employees: the difficult employee, the workaholic, etc.</p>
<p>The differentiated management strategy focuses instead on complex, multiple aspects of the individual within the context of the other people on the team, in the current working environment.</p>
<h3>Learning three elements about employees</h3>
<p>Knowing how to make changes that will strengthen your team while getting maximum effectiveness requires knowing about three elements—employee readiness, interests, and lived experiences—to help you make the right choices for each person and for your whole team, in nearly any situation.</p>
<p>Gauging employee readiness involves taking the time to assess your team members from the first moment you meet them, and ensuring that you know where they are with their personal and professional skills. Then, you can provide advice when they are struggling, and give appropriate stretch challenges for their growth and development.</p>
<p>Knowing about employee interests can help you to motivate employees when they are stuck, and to work with employees on stretch assignments that will help them to strengthen their skills while remaining motivated.</p>
<p>More now than ever, understanding and creating safe spaces for your team to share their lived experiences is critical to helping team members achieve their highest potential. Some aspects of the lived experience are very difficult to address in a work setting, and it isn&#8217;t necessary to do so in most cases.</p>
<p>However, understanding the physical, emotional, mental, or social challenges an employee may be facing can help to resolve interpersonal difficulties or other <a target="_blank" href="https://techbeacon.com/app-dev-testing/how-retain-diverse-software-engineering-teams" rel="noopener noreferrer">nuanced aspects of people management</a> that are frequently ignored because they are difficult. The differentiated management methodology provides strategies to address more personal aspects of the work environment with empathy and compassion.</p>
<h3><strong>Benefits and challenges of differentiated management</strong></h3>
<p>There are many benefits of differentiated management. With my teams, I have observed increased personal and professional growth, as well as increased resilience in the face of the health, social, and political pressures we have all faced over the past year. </p>
<p>However, this management technique is not plug-and-play. The hardest part of differentiated management is that it requires an investment of time involving effective and intentional communication strategies. Regular communication, empathetic listening, and strategic problem-solving are all skills reinforced in <a target="_blank" href="https://www.teachcode.org/manage.html" rel="nofollow noopener noreferrer">my workshop</a>, and you must practice them regularly and consistently if you want to succeed.</p>
<p><em>During my <a target="_blank" href="https://well.tc/5d5x" rel="nofollow noopener noreferrer">STAREAST Virtual+ conference</a> session, I&#8217;ll offer more details on how you can use differentiated management. The conference runs October 5-8, 2020. I hope to see you there.</em></p>
<h4>Keep learning</h4>
</div>
<p><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script><br />
<br /><br />
<br /><a href="https://techbeacon.com/app-dev-testing/you-built-talented-qa-team-heres-how-keep-them">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>The Rise of Shadow DOM &#8211; Core Technical Aspects</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/the-rise-of-shadow-dom-core-technical-aspects/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Tue, 29 Sep 2020 04:23:50 +0000</pubDate>
				<category><![CDATA[Automation]]></category>
		<category><![CDATA[Aspects]]></category>
		<category><![CDATA[Core]]></category>
		<category><![CDATA[DOM]]></category>
		<category><![CDATA[Rise]]></category>
		<category><![CDATA[Shadow]]></category>
		<category><![CDATA[technical]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/the-rise-of-shadow-dom-core-technical-aspects/</guid>

					<description><![CDATA[Before taking control over Shadow DOM, let me brief you about the session that I presented at the virtual Selenium]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<p><span style="font-weight: 400;">Before taking control over Shadow DOM, let me brief you about the session that I presented at the virtual </span><a target="_blank" href="https://confengine.com/selenium-conf-2020/proposal/13709/rise-of-shadow-dom-lets-solve-it-through-webdriver" rel="noopener noreferrer"><span style="font-weight: 400;">Selenium Conference 2020</span></a><span style="font-weight: 400;">. Due to the limited number of seats at the conference, most of the QA Automation engineers missed it, but NO NEED TO WORRY about it! Here’s a blog tutorial for you to explore and very soon the conference session recording will also be shared through YouTube. It’s time to fasten your seat belts and let’s crack together the Shadow DOM <img src="https://s.w.org/images/core/emoji/13.0.0/72x72/1f60a.png" alt="😊" class="wp-smiley" style="height: 1em; max-height: 1em;" /></span></p>
<p><span style="font-weight: 400;">Prior to learning about Shadow DOM, we first have to understand the inner functioning of a web ‘page’ or ‘document’. Let’s understand the DOM and its inner functioning, doing so will enable us to further understand the Shadow DOM.</span></p>
<h2><strong>What is DOM?</strong></h2>
<p><span style="font-weight: 400;">Whenever we open up any web application through any web browser {Chrome/ Firefox/ Safari/ Edge}, it always renders a bunch of web components within the DOM, that encapsulates three things – </span><i><span style="font-weight: 400;">Markup {HTML}, Styling {CSS} and JavaScript {JS}</span></i><span style="font-weight: 400;">. </span></p>
<p><b>DOM {Document Object Model}</b><span style="font-weight: 400;"> – </span><span style="font-weight: 400;">a structured representation of an HTML document. HTML provides us a way to add structure and content, but machines do need more than that. That is the reason we need DOM. The DOM then has an API that can be used by our applications to manipulate the document’s structure, content, and styling. You can think of the DOM as a JavaScript representation of our HTML structure</span><span style="font-weight: 400;">. </span><span style="font-weight: 400;">Let’s understand the </span><span style="font-weight: 400;">code snippet that demonstrates</span> <b>HTML to DOM structure</b><span style="font-weight: 400;">:</span><i/></p>
<p><span style="color: #000080;"><b>Browser rendered HTML Code ></b></span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="html" data-enlighter-theme="beyond"><html>
  <head>
    <title>Rise of Shadow DOM</title>
  </head>
  <body>
     <h1>Let's understand Shadow DOM</h1>
  </body>
</html></pre>
<p><b><span style="color: #000080;">DOM Tree structure ></span><br /></b></p>
<pre class="EnlighterJSRAW" data-enlighter-language="html">html
└─ head
│  └─ title
│     └─ Rise of Shadow DOM
└─ body
   └─ h1
      └─ Let's understand Shadow DOM</pre>
<p><span style="font-weight: 400;">DOM elements are visible to the </span><span style="color: #000080;"><i><span style="font-weight: 400;">document interface</span></i></span><span style="font-weight: 400;"> i.e. ‘it is the entry point to DOM’ and we can find DOM elements by using </span><span style="color: #000080;"><i><span style="font-weight: 400;">document.querySelector</span></i></span><span style="font-weight: 400;"> method. </span></p>
<h2><strong>DOM vs. Shadow Dom: How is Shadow DOM different from DOM?</strong></h2>
<p><span style="font-weight: 400;">Shadow DOM is a kind of web standard that developers use to encapsulate their custom HTML code and style components. <span style="color: #000080;">Shadow DOM elements are NOT visible to </span></span><span style="color: #000080;"><i><span style="font-weight: 400;">document.querySelector</span></i></span><span style="font-weight: 400;"> method because it renders separately from the DOM. </span></p>
<p><span style="font-weight: 400;">Like DOM, the Shadow DOM is also generated by the browser itself, but in a completely isolated DOM tree called the </span><span style="color: #000080;"><b>Shadow DOM Tree</b></span><span style="font-weight: 400;">. The Shadow DOM Tree encapsulates its own custom/standard elements and styling that is added to an element as a child. The element to which the tree is added is called the </span><span style="color: #000080;"><b>Shadow Host</b></span><span style="font-weight: 400;"> and the root is called </span><span style="color: #000080;"><b>Shadow Root</b></span><span style="font-weight: 400;">. And <span style="color: #000080;"><strong>Shadow DOM boundary</strong></span>: LoC is where the shadow DOM ends, and the main DOM begins. In the picture below, we can clearly understand the Shadow DOM structure in respect of <span style="color: #000080;">DOM {aka Light DOM or Main DOM}</span>:</span></p>
<p></p>
<p><noscript><img loading="lazy" class="aligncenter wp-image-13992 size-full" title="Shadow Dom vs Main DOM" src="https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.25.06-AM.png" alt="Shadow Dom vs Main DOM" width="1790" height="1146" srcset="https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.25.06-AM.png 1790w, https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.25.06-AM-512x328.png 512w, https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.25.06-AM-768x492.png 768w, https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.25.06-AM-1024x656.png 1024w" sizes="(max-width: 1790px) 100vw, 1790px"/></noscript></p>
<p style="text-align: center;"><b><i><span style="color: #000080;">DOM    = </span></i></b><span style="color: #000080;"> <b><i>  main DOM </i></b> <b><i>   =  </i></b> <b><i>Light DOM</i></b></span>      <span style="color: #ff0000;"><b><i>=</i></b><b><i>     <del>Shadow DOM</del></i></b></span></p>
<p> </p>
<p><span style="font-weight: 400;">If it renders separately then</span><span style="color: #000080;"><b><i> how can we reach out to Shadow DOM custom/standard elements?</i></b></span></p>
<p><span style="font-weight: 400;">We can reach out to Shadow DOM elements through</span><span style="color: #000080;"><i><span style="font-weight: 400;"> shadowRoot interface</span></i></span><span style="font-weight: 400;"> i.e. by using </span><span style="color: #000080;"><i><span style="font-weight: 400;">shadowRoot.querySelector</span></i></span><span style="font-weight: 400;"> method. The Shadow Root has two different modes – </span><b>Open mode </b><span style="font-weight: 400;">allows the shadow root to be accessible from JavaScript outside the shadow root but </span><b>Closed mode</b><span style="font-weight: 400;"> does not.<br /></span></p>
<h2><strong>Use Case: Why is Shadow DOM becoming more popular among developers?</strong></h2>
<p><span style="font-weight: 400;">With time, Web-Component-driven architecture is becoming more popular among developers, but there is still one glitch i.e. global CSS applied could create problems across the rest of our web application code. So </span><b><i>what to do now? </i></b><span style="color: #000080;"><b><i><span style="color: #000080;">I</span> think Encapsulation {quarantine} is the only solution</i></b></span><b><i>.</i></b><span style="font-weight: 400;"> Encapsulation will surely help us prevent any unwanted side effects whilst keeping our component code clean, minimal, and easy to extend.</span></p>
<p><span style="font-weight: 400;">Earlier days, <iFrame> was quite popular among developers for the sake of encapsulation. But there are few serious security glitches i.e. malicious plugins can be injected through <iFrame>. </span><span style="color: #000080;"><b>So</b> </span><b><span style="color: #000080;">the rise of Shadow DOM</span> <span style="font-weight: 400;"><img src="https://s.w.org/images/core/emoji/13.0.0/72x72/270c.png" alt="✌" class="wp-smiley" style="height: 1em; max-height: 1em;" /></span></b></p>
<p><span style="font-weight: 400;">Let’s see how Shadow DOM renders on the browser and also see its Shadow tree structure:</span></p>
<p><span style="color: #000080;"><b>Shadow DOM Code Snippet ></b></span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="js" data-enlighter-theme="beyond">const div = document.createElement("div"); // Shadow Host - a bridge between DOM and Shadow DOM
const header = document.createElement("h1"); // Shadow DOM content
header.innerHTML = 'Part of Shadow DOM content';
  
const shadowRoot = div.attachShadow({ mode: 'open' }); // attaching shadow root to Shadow host and setting mode as open

shadowRoot.appendChild(header); // attaching to shadow DOM</pre>
<p><span style="color: #000080;"><b>Browser rendered HTML Code {visible on dev tools} ></b></span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="html"><div>
   #shadow-root (open)
   <h1>Part of Shadow DOM content</h1>
</div>
</pre>
<p><span style="color: #000080;"><b>Shadow DOM Tree structure ></b></span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="html">document
└─ shadow host
   └─ shadow root
      └─ h1
         └─ Part of Shadow DOM content
</pre>
<p><span style="font-weight: 400;">Before moving ahead, we have to understand the concept of </span><span style="color: #000080;"><b>Web Components</b></span><span style="font-weight: 400;"> and </span><span style="color: #000080;"><b>Custom HTML elements</b></span><span style="font-weight: 400;">.</span></p>
<h2><strong>Let’s Understand Web Components</strong></h2>
<p><span style="font-weight: 400;"><b>Web component</b></span><span style="font-weight: 400;"> is a W3C standard feature that is being incorporated in HTML5, Google’s Polymer, and Google’s LitElement libraries. Web components are a set of APIs that facilitate the creation of new custom, reusable HTML elements that can be used in web pages and web apps with their functionality and also isolates them from the rest of your application code.</span></p>
<ul>
<li style="font-weight: 400;"><b><i>Reusable</i></b><span style="font-weight: 400;">: Web Components are the same as other HTML tags, they can be reused n number of times without conflicting each other’s functionalities. In the picture below, we can clearly see </span><i><span style="font-weight: 400;">Header/Footer web components</span></i><span style="font-weight: 400;"> used twice.</span></li>
<li style="font-weight: 400;"><b><i>Encapsulation</i></b><span style="font-weight: 400;">: Web Components wrap their business logic, it’s styling within the component. By attaching shadow DOM to that web component we can completely encapsulate its styling and business logic.</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">All encapsulated web components can interact with each other but can not access each other’s properties. But still <span style="color: #000080;"><strong>global </strong></span></span><span style="color: #000080;"><strong><i>Inheritable properties</i></strong></span><span style="font-weight: 400;"> are easily applicable on all web components e.g. color is an inheritable global property that always impacts all of the web component elements but we can override it within the web component by writing inline HTML code {‘background-color’ is also global property but NOT inheritable to encapsulated web components}.</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">One component can integrate another component e.g. Header inside Article.</span></li>
</ul>
<p><img loading="lazy" class="aligncenter wp-image-13993 " title="Web Components" alt="Web Components" width="374" height="519" srcset="https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.29.08-AM.png 742w, https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.29.08-AM-369x512.png 369w, https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.29.08-AM-738x1024.png 738w" data-lazy-sizes="(max-width: 374px) 100vw, 374px" src="https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.29.08-AM.png"/></p>
<p><noscript><img loading="lazy" class="aligncenter wp-image-13993 " title="Web Components" src="https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.29.08-AM.png" alt="Web Components" width="374" height="519" srcset="https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.29.08-AM.png 742w, https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.29.08-AM-369x512.png 369w, https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.29.08-AM-738x1024.png 738w" sizes="(max-width: 374px) 100vw, 374px"/></noscript></p>
<p><span style="font-weight: 400;">Web components have </span><span style="color: #000080;"><b>FOUR Building blocks</b></span><span style="font-weight: 400;"> – </span><i><span style="font-weight: 400;">Custom HTML Elements , Shadow DOM, HTML Templates and HTML Imports. </span></i><span style="font-weight: 400;">But we will cover only two {</span><span style="font-weight: 400;"><span style="color: #000080;">Custom HTML Elements and Shadow DOM [already covered above]</span>}, which are required to understand our test automation problem. </span></p>
<h2><strong>Let’s Understand and Create Custom HTML Elements</strong></h2>
<p><span style="font-weight: 400;">By working on HTML5, we can create our own custom elements, those would be encapsulated by web components. Let’s understand and create custom elements:</span></p>
<ul>
<li style="font-weight: 400;"><span style="color: #000080;"><i><span style="font-weight: 400;">customElements</span></i></span><span style="font-weight: 400;"> – are HTML elements with custom templates, behaviors, and tag names made with a set of JavaScript APIs (e.g.</span><span style="color: #000080;"><i><span style="font-weight: 400;"> <my–element></span></i></span><span style="font-weight: 400;">).</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">To define a custom element, create a class that says ‘</span><span style="color: #000080;"><i><span style="font-weight: 400;">MyElemen</span></i></span><span style="font-weight: 400;"><span style="color: #000080;">t</span>’ that extends </span><i><span style="font-weight: 400;">HTMLElement</span></i><span style="font-weight: 400;"> class and passes the class to the </span><span style="color: #000080;"><i><span style="font-weight: 400;">customElements.define </span></i></span><span style="font-weight: 400;">method.</span></li>
<li style="font-weight: 400;"><span style="color: #000080;"><i><span style="font-weight: 400;">HTMLElement</span></i></span><span style="font-weight: 400;"> class on HTML – is used for defining a custom element and teaching the browser about a new tag. </span></li>
<li style="font-weight: 400;"><span style="color: #000080;"><i>customElements.define</i></span> method – to register a custom element on the page.</li>
</ul>
<p><span style="color: #000080;"><b>Custom Element Code Snippet ></b></span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="js"><script>
    	class MyElement extends HTMLElement {
      	connectedCallback() {
        	const button = document.createElement("button");
        	button.onclick = () => alert("Button clicked");
        	button.innerText = "Button in Custom Element";
        	this.append(button);
      		}
    	}
    	customElements.define("my-element", MyElement);
</script>
<div><my-element></my-element></div></pre>
<p><span style="font-weight: 400;">Let’s open this code snippet in the browser and observe it under the <a target="_blank" href="https://blog.testproject.io/2019/11/26/next-generation-front-end-testing-using-webdriver-and-devtools-part-1/" rel="noopener noreferrer">dev tools</a> console, it clearly shows the custom HTML element and that element contains inside another standard web element i.e. button:</span></p>
<p><span style="color: #000080;"><b>Dev tools console view ></b></span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="html"><my-element>
   <button>Button in Custom Element</button>
</my-element>
</pre>
<h2><strong>Let’s Attach the Shadow DOM to the above Custom HTML Element Code Snippet</strong></h2>
<pre class="EnlighterJSRAW" data-enlighter-language="js"><script>
    	class MyElement extends HTMLElement {
      	connectedCallback() {
        	const shadow = this.attachShadow({ mode: "open" });
        	const button = document.createElement("button");
        	button.onclick = () => alert("Button clicked");
        	button.innerText = "Shadow DOM Button";
        	shadow.append(button);
      	      }
    	}
    	customElements.define("my-element", MyElement);
</script>
<div><my-element></my-element></div>
</pre>
<p><span style="font-weight: 400;">Let’s open this code snippet in the browser and observe it under dev tools console, it clearly shows the custom HTML element appended with Shadow Root:</span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="html"><my-element>
  #shadow-root (open)
   <button>Button in Custom Element</button>
</my-element>
</pre>
<h2><strong>Shadow DOM </strong><strong>Browser Support </strong></h2>
<p><span style="font-weight: 400;">Almost all new versions of majorly used browsers (Chrome, Firefox, Edge, Safari, and mobile browsers) support Shadow DOM V1 </span><span style="color: #000080;"><i><span style="font-weight: 400;">{fully supported browsers highlighted in green boxes – <span style="font-size: 10pt;"><a target="_blank" href="https://caniuse.com/?search=Shadow%20DOM%20(V1)" rel="noopener noreferrer">reference</a>}</span></span></i></span><span style="font-weight: 400;"><span style="font-size: 10pt;">.</span> </span></p>
<p><img loading="lazy" class="aligncenter wp-image-13994 size-full" title="Browser Support of Shadow DOM" alt="Browser Support of Shadow DOM" width="2686" height="562" srcset="https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.36.54-AM.png 2686w, https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.36.54-AM-512x107.png 512w, https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.36.54-AM-768x161.png 768w, https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.36.54-AM-1024x214.png 1024w" data-lazy-sizes="(max-width: 2686px) 100vw, 2686px" src="https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.36.54-AM.png"/></p>
<p><noscript><img loading="lazy" class="aligncenter wp-image-13994 size-full" title="Browser Support of Shadow DOM" src="https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.36.54-AM.png" alt="Browser Support of Shadow DOM" width="2686" height="562" srcset="https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.36.54-AM.png 2686w, https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.36.54-AM-512x107.png 512w, https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.36.54-AM-768x161.png 768w, https://blog.testproject.io/wp-content/uploads/2020/09/Screenshot-2020-09-24-at-10.36.54-AM-1024x214.png 1024w" sizes="(max-width: 2686px) 100vw, 2686px"/></noscript></p>
<h2><strong>Key Takeaways</strong></h2>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">Understand DOM vs Shadow DOM</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">Shadow DOM structure and its two modes</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">Shadow DOM use case for developers</span></li>
<li>Understand the DOM, Web components, and Custom Elements</li>
<li><span style="font-weight: 400;">DOM and Shadow DOM entry points</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">Shadow DOM attachment with Custom elements</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">Shadow DOM browser support</span></li>
</ul>
<p><span style="font-weight: 400;">So far we have seen developers using Shadow DOM gracefully and succeeded in the separate rendering of DOM and Shadow DOM. </span><span style="color: #000080;"><b>Now the problem has been passed on to QA Automation Engineers</b></span><span style="font-weight: 400;">. A lot of questions arise, such as:</span></p>
<ul>
<li><span style="font-weight: 400;">Can a QA Automation engineer interact with custom elements WITHOUT appending Shadow DOM?</span></li>
<li><span style="font-weight: 400;">Can a QA Automation engineer interact with custom elements AFTER appending Shadow DOM?</span></li>
<li><span style="font-weight: 400;">What is the role of the Open/Closed mode of Shadow Root, while finding the elements?</span></li>
<li><span style="font-weight: 400;">Do regular selectors {Xpath, CSS} work with Shadow DOM elements?</span></li>
<li><span style="font-weight: 400;">How to interact with multi-level Shadow Root elements?</span></li>
<li><span style="font-weight: 400;">Does TestProject <a target="_blank" href="https://blog.testproject.io/2020/07/14/announcing-testproject-new-opensdk/" rel="noopener noreferrer">OpenSDK</a> support Shadow DOM elements?</span></li>
<li><span style="font-weight: 400;">Does TestProject <a target="_blank" href="https://blog.testproject.io/2020/08/25/testprojects-smart-recorder-adds-ai-powered-self-healing-technology/" rel="noopener noreferrer">Test Recorder</a> support Shadow DOM elements?</span></li>
</ul>
<p><i><span style="color: #000000;">Want to learn about these open questions? <strong><span style="color: #000080;">The crucial</span></strong></span></i><b><i><span style="color: #000000;"><span style="color: #000080;"><strong> </strong>conversation has already started between Shadow DOM and QA Automation engineers</span>. </span></i></b><i><span style="color: #000000;">So stay tuned and wait for the next consecutive blogs, very soon it will be on your plate </span></i><span style="color: #000000;"><img src="https://s.w.org/images/core/emoji/13.0.0/72x72/1f609.png" alt="😉" class="wp-smiley" style="height: 1em; max-height: 1em;" /><img src="https://s.w.org/images/core/emoji/13.0.0/72x72/1f468-200d-1f4bb.png" alt="👨‍💻" class="wp-smiley" style="height: 1em; max-height: 1em;" /></span></p>
</div>
<p><br />
<br /><a href="https://blog.testproject.io/2020/09/29/the-rise-of-shadow-dom-core-technical-aspects/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Election 2020 – Five Tips to Secure a Mail-In Ballot That Counts</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/election-2020-five-tips-to-secure-a-mail-in-ballot-that-counts/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Mon, 28 Sep 2020 21:30:29 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Ballot]]></category>
		<category><![CDATA[Counts]]></category>
		<category><![CDATA[Election]]></category>
		<category><![CDATA[MailIn]]></category>
		<category><![CDATA[Secure]]></category>
		<category><![CDATA[tips]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/election-2020-five-tips-to-secure-a-mail-in-ballot-that-counts/</guid>

					<description><![CDATA[Election 2020 – Five Tips to Secure a Mail-In Ballot That Counts Forecasts predict that roughly 80 million votes will]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<div class="author-block padding-bottom-xs">
                
            </div>
<h2><strong>Election 2020 – Five Tips to Secure a Mail-In Ballot That Counts</strong></h2>
<p>Forecasts predict that roughly 80 million votes will get cast by mail-in ballots—double the number cast by mail in the 2016 election. Here are a couple tips to make sure your vote counts for the 2020 election.</p>
<p>Smart use of the internet will help you cast a mail-in ballot that counts.</p>
<p>Projections abound, yet forecasts predict that roughly 80 million votes will get cast by mail-in ballots—double the number cast by mail in the 2016 election. While we’ll only know the final tally of mail-in voters sometime after election day, what we know right now is that <a target="_blank" href="https://thehill.com/homenews/campaign/511472-nearly-75-percent-of-us-voters-can-vote-by-mail-in-2020-nyt" rel="noopener noreferrer">nearly 75% of U.S. voters will be able to vote by mail in the 2020 election</a></p>
<p>If you’re one of those voters, or know someone who is, this quick five-point primer of online resources should help.</p>
<h3><strong>Fake ballots, the pandemic and other election concerns</strong></h3>
<p>Pew Research found that <a target="_blank" href="https://www.pewresearch.org/politics/2020/08/13/election-2020-voters-are-highly-engaged-but-nearly-half-expect-to-have-difficulties-voting/" rel="noopener noreferrer">Americans are split 50/50 as to whether voting in the 2020 election will be “easy” or “hard.”</a> Compare that to the 2018 figures where 85% said that voting would be “easy” in that election. We can chalk that up to several factors this year, most notably <a target="_blank" href="https://www.mcafee.com/blogs/consumer/u-s-election-2020-dont-let-covid-19-misinformation-suppress-your-vote/" rel="noopener noreferrer">the effect of the pandemic on voting, which I touched on in my blog last week</a>.</p>
<p>However, there are other concerns at play. We’ve seen concerns about <a target="_blank" href="https://www.cnet.com/news/election-security-officials-find-no-evidence-of-coordinated-fraud-with-mail-in-ballots/" rel="noopener noreferrer">mail-in ballot fraud</a>, along with confusion about how to get a mail-in ballot, and yet further confusion as to who is eligible to get a mail-in ballot in the first place… just to name a few.</p>
<p>These concerns all share a common remedy: the facts.</p>
<p>Good information, direct from your state election officials, will point the way. Skip social media altogether. It is <strong>not</strong> a trusted resource. In all, <a target="_blank" href="https://www.cnet.com/news/fbi-director-says-its-a-mistake-to-get-election-information-on-social-media/" rel="noopener noreferrer">it’s a mistake to get any election information on social media</a>, according to F.B.I. Director, Christopher Wray. Instead, let’s point ourselves in the right direction.</p>
<h3><strong>Cast your mail-in ballot securely with these five tips:</strong></h3>
<ol>
<li><a target="_blank" href="https://www.usvotefoundation.org/vote/eoddomestic.htm" rel="noopener noreferrer">Refer to your state and local officials for guidance</a>: Visiting your state’s election website and resources they offer is your best bet for clearing up any questions about your eligibility to vote by mail or to report any difficulties you may have.</li>
<li><a target="_blank" href="https://www.businessinsider.com/mistakes-that-can-disqualify-your-mail-absentee-ballot-2020-9" rel="noopener noreferrer">Follow the directions closely</a>: Mail-in ballots, and the rules for filling them out, also vary from state to state. Get to know yours with a visit to your state’s election website. Common errors like failing to get a witness signature (or signatures), failing to slip your ballot into a second security envelope, or using the wrong colored pen are all examples of ways ballots can get disqualified in some states. And when you get your ballot, read it closely before you start—including the mailing or drop off instructions.</li>
<li><a target="_blank" href="https://www.vote.org/absentee-ballot-deadlines/" rel="noopener noreferrer">Know your election timeline</a>: Deadlines are everything—such as when you can apply for an absentee or mail-in ballot, when they need to be returned or postmarked, and if you have other drop off options other than the mail. Again, your state or local election website will clearly call all that out.</li>
<li><a target="_blank" href="https://about.usps.com/what/government-services/election-mail/" rel="noopener noreferrer">Give the mail extra time</a>: Don’t leave your vote to chance. Request your mail-in ballot, as needed, right away. Once you’ve filled it out, get it in the mail early. <a target="_blank" href="https://about.usps.com/what/government-services/election-mail/" rel="noopener noreferrer">The U.S. Postal Service has an entire site dedicated to election mail</a> that’s loaded with plenty of good advice for mail-in voters, whether you’re stateside, overseas, or deployed elsewhere with the military.</li>
<li><a target="_blank" href="https://www.usvotefoundation.org/vote/eoddomestic.htm" rel="noopener noreferrer">Track your ballot</a>: The ability and means to track your ballot will of course vary from state to state. However, checking in with your state’s election website will show you what your options are.</li>
</ol>
<h3><strong>Stay Updated </strong></h3>
<p>To stay updated on all things <a target="_blank" href="https://www.mcafee.com/en-us/index.html" rel="noopener noreferrer">McAfee</a> and for more resources on staying secure from home, follow <a target="_blank" href="https://twitter.com/McAfee_Home" rel="noopener noreferrer">@McAfee_Home </a>on Twitter, listen to our podcast <a target="_blank" href="https://geo.itunes.apple.com/podcast/us/id1257232208?mt=2&#038;at=1010lbVy&#038;ct=mcafeehackable_GaryBlog_EndBlurb" rel="noopener noreferrer"><em>Hackable?</em></a>, and ‘Like’ us on <a target="_blank" href="https://www.facebook.com/McAfee" rel="noopener noreferrer">Facebook.</a></p>
<p><iframe class="ceros-experience" style="position: absolute; top: 0; left: 0; bottom: 0; right: 0; margin: 0; padding: 0; border: 0 none; height: 1px; width: 1px; min-height: 50%; min-width: 50%;" title="Election Badge 300X300" src="https://view.ceros.com/mcafee/election-badge-1" frameborder="0" scrolling="no" allowfullscreen="allowfullscreen"><span data-mce-type="bookmark" style="display: inline-block; width: 0px; overflow: hidden; line-height: 0;" class="mce_SELRES_start">﻿</span></iframe></p>
<p> </p>
</p></div>
<p><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script><script>
  !function(f,b,e,v,n,t,s)
  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  s.parentNode.insertBefore(t,s)}(window, document,'script',
  'https://connect.facebook.net/en_US/fbevents.js');
  fbq('init', '187610925152304');
  fbq('track', 'PageView');
</script><script>
// load Facebook
!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;
t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,
document,'script','https://connect.facebook.net/en_US/fbevents.js');
fbq('init', '766537420057144');
fbq('track', "PageView");</p>
<p>//document.write('x3Cnoscript>x3Cimg height="1" width="1" style="display:none" src="https://www.facebook.com/tr?id=766537420057144&ev=PageView&noscript=1" />x3C/noscript>');
</script><br />
<br /><br />
<br /><a href="https://www.mcafee.com/blogs/consumer/election-2020-five-tips-to-secure-a-mail-in-ballot-that-counts/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>How to Install Selenium 4 &#8211; Automated Visual Testing</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/how-to-install-selenium-4-automated-visual-testing/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 25 Sep 2020 21:03:53 +0000</pubDate>
				<category><![CDATA[Automation]]></category>
		<category><![CDATA[automated]]></category>
		<category><![CDATA[Install]]></category>
		<category><![CDATA[Selenium]]></category>
		<category><![CDATA[testing]]></category>
		<category><![CDATA[Visual]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/how-to-install-selenium-4-automated-visual-testing/</guid>

					<description><![CDATA[In this series on Selenium 4, we are providing use cases and code samples to explore the upcoming changes to]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<p>In this series on Selenium 4, we are providing use cases and code samples to explore the upcoming changes to the WebDriver API.</p>
<p>In the previous blog post, we discussed <a target="_blank" href="https://applitools.com/blog/selenium-4-migration/" rel="noopener noreferrer">Migrating to Selenium 4</a> and today we’ll detail how to install Selenium 4 so that you can check out all of the new features!</p>
<p>While Selenium has various language bindings, Java and JavaScript are the most widely used, so this post will cover how to install these two bindings. </p>
<h2 id="h.fk76atsed8kb">Upgrading from Selenium 3 to Selenium 4</h2>
<p>If you are already using Selenium with Maven, you can upgrade it to Selenium 4 by changing the Selenium version to 4. Refer to line 28 in the example below:</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/ShamaUgale/649056e1b9aaee89c197c8255735014d.js</p>
</div>
<p>If you are already using Selenium with Gradle, you can upgrade it to Selenium 4 by changing the Selenium version to 4 as shown on line 17 in the example below:</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/ShamaUgale/f95716c6055ed7e0c36446e4448832fe.js</p>
</div>
<h2 id="h.qaztmu93jjfr">Installing Fresh Instance of Selenium 4</h2>
<p>Before beginning, make sure <a target="_blank" href="https://www.oracle.com/java/technologies/javase-downloads.html" rel="noopener noreferrer">Java</a> is installed on your machine and the JAVA_HOME environment variable is set in your system path.</p>
<p>The Selenium Java binding can be set up in two different ways: via build tools, or manually. I’ll outline the steps for both. However, you only need to choose one approach.</p>
<h2 id="h.286ybc3i9fp4">Install Selenium via build tools</h2>
<p>There are various Java build tools available to manage the build and dependencies; the most popular and widely used ones are <a target="_blank" href="https://maven.apache.org/" rel="noopener noreferrer">Maven</a> and <a target="_blank" href="https://gradle.org/" rel="noopener noreferrer">Gradle</a>.</p>
<h3 id="h.gyatfl6dwyxt">Install and setup Maven</h3>
<p><a target="_blank" href="https://maven.apache.org/" rel="noopener noreferrer">Maven</a> is a build and dependency management tool for Java based application development which helps with complete build lifecycle management.</p>
<p>Maven is also available with the Java IDEs (IntelliJ, Eclipse, etc) as a plugin.</p>
<p>However, if you are not using the plugin, you can <a target="_blank" href="https://maven.apache.org/install.html" rel="noopener noreferrer">install Maven manually</a>.</p>
<h3 id="h.1a32hgmri4or">Download Selenium using Maven</h3>
<p>Maven looks for a pom.xml file for information on project, configuration, dependencies and plugins etc.</p>
<p><a target="_blank" href="https://mvnrepository.com/" rel="noopener noreferrer">Maven Central Repository</a> is the place where all the dependencies/libraries for all versions can be found. We can search for a library and copy and paste the dependency into our pom.xml file to download them.</p>
<p>For example, <a target="_blank" href="https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java/4.0.0-alpha-6" rel="noopener noreferrer">Selenium 4</a> can be downloaded using maven by adding the dependencies in pom.xml as shown in the below sample.</p>
<h3 id="h.65zyh85i6goy">Test Setup</h3>
<p>You are now all set to write tests and run them through the IDE or through the command line. You can test the setup, by adding the following code snippet into a new Java class under the ‘src’ directory.</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/ShamaUgale/7c057b0b2f37f240d749948c1c66fd99.js</p>
</div>
<h3 id="h.2kbbqkai3riu">Install and setup Gradle</h3>
<p>Gradle is another popular build tool used for java based applications these days. It’s open source and the build scripts can be written in Groovy or Kotlin DSL.</p>
<p>Gradle can be also installed as a plugin in Java IDEs (IntelliJ, Eclipse, etc).</p>
<p>However, if you are not using the plugin, you can <a target="_blank" href="https://gradle.org/releases/" rel="noopener noreferrer">install Gradle manually.</a></p>
<h3 id="h.9xixdw5vjipj">Download Selenium using Gradle</h3>
<p>Gradle looks for a build.gradle file where all the dependencies, plugins and build scripts are written.</p>
<p><a target="_blank" href="https://mvnrepository.com/" rel="noopener noreferrer">Maven Central Repository</a> is the place where all the dependencies/libraries for all versions can be found for Gradle as well. We can search for a library and copy and paste the dependency from the Gradle tab into our build.gradle file to download them.</p>
<p>For example, <a target="_blank" href="https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java/4.0.0-alpha-6" rel="noopener noreferrer">Selenium 4</a> can be downloaded using gradle by adding the dependencies in build.gradle file as shown in the below sample.</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/ShamaUgale/f95716c6055ed7e0c36446e4448832fe.js</p>
</div>
<h3 id="h.g8uteny7ordn">Test Setup</h3>
<p>You are now all set to write tests and run them through the IDE or through the command line. You can test the setup, by adding the following code snippet into a new Java class under the ‘src’ directory and build.gradle file in the project root directory.</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/ShamaUgale/7c057b0b2f37f240d749948c1c66fd99.js</p>
</div>
<h2 id="h.ubq2cxgrs28c">Install Selenium manually</h2>
<h3 id="h.aln68tka5bu">Download Selenium</h3>
<p>The jar files for Selenium 4 Java bindings can be downloaded from the <a target="_blank" href="https://www.selenium.dev/downloads/" rel="noopener noreferrer">official Selenium downloads page</a>.</p>
<p>It will be downloaded as a zip file, unzip it.</p>
<p>Selenium scripts can be executed on various platforms, namely Firefox, Chrome, Internet Explorer, Safari, Opera and Edge. To explore and install the drivers for each refer to documentation links under the “Browsers” section on <a target="_blank" href="https://www.selenium.dev/downloads/" rel="noopener noreferrer">Downloads</a> page.</p>
<h3 id="h.co9wdewg63t4">Add Selenium to IntelliJ</h3>
<p>Within IntelliJ:</p>
<p>Go to the File Menu <strong>→ </strong> Project Structure <strong>→</strong> Modules <strong>→</strong> Dependencies <strong>→ </strong>Click on ‘+’ Sign <strong>-→</strong> Select JARs or directories → Select all the Selenium jar files and click on OK button.</p>
<p>Also, add the downloaded browser drivers under the project directory. In our example we will add chromedriver to run our tests on Chrome browser.</p>
<h3 id="h.f26x0ghi5inj">Test Setup</h3>
<p>Create a new Java file under the ‘src’ directory and add this code:</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/ShamaUgale/7c057b0b2f37f240d749948c1c66fd99.js</p>
</div>
<h2 id="h.io12x11o4py0">JavaScript</h2>
<p>You can download and manage the Selenium JavaScript bindings using <a target="_blank" href="https://www.npmjs.com/" rel="noopener noreferrer">npm</a>.</p>
<h3 id="h.jlit051y773w">Install NodeJs and NPM</h3>
<p>As a prerequisite, <a target="_blank" href="https://nodejs.org/en/" rel="noopener noreferrer">NodeJs</a> needs to be <a target="_blank" href="https://nodejs.org/en/download/" rel="noopener noreferrer">downloaded</a> and installed on the machine. To verify the installation, use the below two commands</p>
<pre class="wp-block-preformatted">node -v</pre>
<pre class="wp-block-preformatted">npm -v</pre>
<p>Both should give the current version installed as an output.</p>
<h3 id="h.fzofgafoa6c">Download and install Selenium Webdriver</h3>
<p>Using the below command we will install Selenium with npm package manager on your machine.</p>
<pre class="wp-block-preformatted">npm install -g selenium-webdriver</pre>
<p>Additionally, to run the tests on the browsers (Chrome, Firefox and IE etc), browser drivers need to be downloaded and set in the system path.</p>
<p>The drivers can be downloaded from the <a target="_blank" href="https://www.selenium.dev/downloads/" rel="noopener noreferrer">Downloads</a> page and the links can be found under the “Browsers” section on the page. Windows users may add the driver path to the PATH variable under environment variables. Mac and Linux users need to add a driver path to the $PATH variable in the shell.</p>
<p>Once we have installed the Selenium libraries and set the path for the browsers, we need to add the package.json file to the project root directory. NPM requires this file to install the dependencies and plugins used to build the project along with running the tests.</p>
<p>package.json can be created either manually or running the below command which adds the file to the current directory it is run from.</p>
<pre class="wp-block-preformatted"> npm init</pre>
<p>Below sample package.json file can be referred for installing Selenium 4 and running our tests. If you are already using Selenium Javascript bindings, to upgrade to Selenium 4, change the version as shown on line 12 in the below sample build file.</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/ShamaUgale/292fdb8bea71215593ba5396e79033e8.js</p>
</div>
<p>Once you have updated the Selenium 4 dependencies in the package.json file, run the below command to install all dependencies defined in your package.json file under dependencies section.</p>
<pre class="wp-block-preformatted">npm install</pre>
<p>The test is written in “googleSearchTest.js” file. Below is the sample code, which opens a Firefox browser, navigates to google.com and searches for “Selenium 4” and hits ENTER.</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/ShamaUgale/c20bdc0dc70e19737e0dfcbe29d9d826.js</p>
</div>
<p>To execute the test use the below command</p>
<pre class="wp-block-preformatted">node googleSearchTest</pre>
<h2 id="h.tinlhet1cle">Summary</h2>
<p>We went through the setup instructions for Selenium 4 for two most popular language bindings – Java and JavaScript with ready to use sample tests and build files.</p>
<p>Now that we are ready with the Selenium 4 setup on our machine, in the next post of this series, we will explore the newly added features offered in Selenium 4 and the benefits they provide with working code samples.</p>
</p></div>
<p><br />
<br /><a href="https://applitools.com/blog/how-to-install-selenium-4/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>

<!--
Performance optimized by W3 Total Cache. Learn more: https://www.boldgrid.com/w3-total-cache/

Page Caching using disk: enhanced (Page is feed) 

Served from: qe-blog-wordpress.qe-blog.10.50.222.172.xip.io @ 2020-10-06 21:01:19 by W3 Total Cache
-->