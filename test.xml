<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>QE Blog</title>
	<atom:link href="http://wp.qe-blog.10.50.222.159.xip.io/feed/" rel="self" type="application/rss+xml" />
	<link>http://wp.qe-blog.10.50.222.159.xip.io</link>
	<description>Where we share news, resources, and latest trends in testing</description>
	<lastBuildDate>Thu, 04 Feb 2021 01:45:44 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.6.1</generator>

<image>
	<url>http://wp.qe-blog.10.50.222.159.xip.io/wp-content/uploads/2020/03/cropped-Robot-icon-32x32.jpg</url>
	<title>QE Blog</title>
	<link>http://wp.qe-blog.10.50.222.159.xip.io</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Page objects vs. App actions in Cypress &#8211; Automated Visual Testing</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/page-objects-vs-app-actions-in-cypress-automated-visual-testing/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Thu, 04 Feb 2021 01:45:44 +0000</pubDate>
				<category><![CDATA[Automation]]></category>
		<category><![CDATA[Actions]]></category>
		<category><![CDATA[App]]></category>
		<category><![CDATA[automated]]></category>
		<category><![CDATA[Cypress]]></category>
		<category><![CDATA[Objects]]></category>
		<category><![CDATA[Page]]></category>
		<category><![CDATA[testing]]></category>
		<category><![CDATA[Visual]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/page-objects-vs-app-actions-in-cypress-automated-visual-testing/</guid>

					<description><![CDATA[If you started using Cypress in recent years, chances are that you heard about “app actions” being preferred over using]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<p>If you started using Cypress in recent years, chances are that you heard about “app actions” being preferred over using page objects. In fact, if you google “Cypress page objects” the first article you’ll see is Gleb Bahmutov’s blog titled:</p>
<p class="has-text-align-center"><a target="_blank" href="https://www.cypress.io/blog/2019/01/03/stop-using-page-objects-and-start-using-app-actions/#just-functions" rel="noopener">Stop using Page Objects and Start using App Actions</a></p>
<p>I see this statement confusing some people, making them think that using Page Object Model (POM) is some sort of anti-pattern in Cypress. The truth is, that using POM does no harm in Cypress and can be really helpful. But I like that Gleb has made a strong argument for other options. Because using them unleashes some Cypress superpowers. In this post, I’d like to explore and describe both of these options.</p>
<h2 id="h-page-objects"><strong>Page objects</strong></h2>
<p><a target="_blank" href="https://twitter.com/giltayar" rel="noopener">Gil Tayar</a> has made an<a target="_blank" href="https://testautomationu.applitools.com/cypress-tutorial/chapter7.html" rel="noopener"> excellent demonstration</a> of how to use page objects in Cypress. If you are new to this concept or haven’t yet used page objects in Cypress, I suggest you watch that video. In fact, go watch the full course on Test Automation University. It’s free! To sum things up for this article, let me just give you a very quick TL;DR version of how to create page objects.</p>
<p>For demonstration, you can take a look at my<a target="_blank" href="https://github.com/filiphric/trelloapp/tree/page-objects-app-actions" rel="noopener"> Trello clone app</a>. Make sure you check out the page-objects-app-actions branch.</p>
<p>Let’s say we want to work with the login/signup part of our app. Normally this is the part where many of our test efforts start. To create a page object, create a separate .js or .ts file where all your functions for a particular component will be stored.</p>
<p>I will create a login.ts file that will look like this:</p>
<figure class="wp-block-embed is-type-rich is-provider-embed-handler wp-block-embed-embed-handler"/>
<p>I am creating a Login class, which contains two functions. One will open my login window, and the other clicks a link to the signup page. So basically, I’m grouping sequences of Cypress commands into these functions. These help me divide my test code into smaller chunks that I can later reuse.</p>
<p>Paraphrasing Gleb from Cypress again – </p>
<p><em>It’s all JavaScript, you can do whatever you want.</em> </p>
<p>And he’s right. I can add actions, assertions, or pass arguments into these functions. Let’s see what these two functions do in our application (I slowed the video down a little so it’s clear to see):</p>
<figure class="wp-block-image"></figure>
<p>In my test, I want to open the login modal window, and then click on the „Sign up here“ text. This is what our test code looks like, using functions from our page object:</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/filiphric/8fb54a00bbd40280cd30b134c897dc44.js?file=login.spec.ts</p>
</div>
<p>Notice how our functions are chained together. This is because in each of our page object functions I’m using </p>
<pre class="wp-block-preformatted">return this;
</pre>
<p>This way, each of our functions returns to the original context and will be chained off our Login class.</p>
<p>Now, whenever I want to create a flow that includes clicking on a “Log in” button, I can use a function from my page object. Since I have this action abstracted in page object, in theory, I can now write tests for login, signup, reset password, logout, and many other user stories.</p>
<p>Also, whenever something in our login flow would change, I can just edit my page object and that change translates everywhere. This helps avoid situations when I need to rewrite multiple tests because of a single change in the tested app.</p>
<p>Page objects are also a great way to get your app into the desired state that you want to test functionally or with visual tests.</p>
<p>These are some main reasons why testers abstract their UI actions into page objects. So why wouldn’t you use them in Cypress?</p>
<h2 id="h-why-don-t-just-stick-with-page-objects"><strong>Why don’t just stick with page objects?</strong></h2>
<p>The main reason for choosing a different approach is to take advantage of how Cypress is built. Cypress runs inside the browser, which is the main difference compared to Selenium-based test automation. That means that Cypress can actually get access to a lot of what’s happening inside of our application.</p>
<p>For example, we can call the exact same function that gets called when we click on the “log in” button. In other words, <strong>we can open our login modal window without actually doing the click.</strong> That way, we can skip interacting with UI through our page objects, and just start our app in any state we want. This enables us to avoid doing UI actions that are not actually a part of our test.</p>
<p>In our app, let’s say we want to do a visual test for our signup view. In order to create such a test, we need to:</p>
<ol>
<li>Click “log in” button</li>
<li>Click “sign up here” link</li>
<li>Do our visual test</li>
</ol>
<p>Notice, that steps 1 and 2 are not actually part of what we want to achieve. We are here just for the state that we want to test visually. Furthermore, I imagine this is an example of a very simple flow. There may be some hard-to-reach places in your app that require you to do multiple steps. So how about we just:</p>
<ol>
<li>Set our app to the desired state</li>
<li>Do our visual test?</li>
</ol>
<p>This is what app actions actually do. Instead of clicking, typing, and interacting with our app, we will set it up the way we want.</p>
<p>Before we write our first app action, let’s examine how our app actually works.</p>
<h2 id="h-looking-into-the-app"><strong>Looking into the app</strong></h2>
<p>Our app is built with Vue.js. If you are not familiar with it, I suggest you check it out. It provides a great developer experience. For some reason, Vue was the easiest to learn for me as a tester out of the most popular frameworks. But if you are working with Angular or React, principles are pretty much the same.</p>
<p>Vue.js comes with some amazing developer tools. These enable you to change the state of your app right from devtools. Look at how I’m able to toggle the visibility of our login element with these tools:</p>
<figure class="wp-block-image"><img src="https://lh3.googleusercontent.com/e-Ymu6eAg36oEzjudY2nnWO2pK92aUkGLgkLxctyOF6b8iEUMr1pdCfkJq6WuFXO0CvrDiq30uiUvhkutQ8P4bMgDG9IkShQpjSpQ_zuz8D3KBwqEs4FcA3TArILXIvXK0Diqqcv" alt=""/></figure>
<p>You can see that I have an attribute called </p>
<pre class="wp-block-preformatted">showLoginModule</pre>
<p>that can be set to true or false. With Cypress, we are going to change the state of our app in a very similar way. To do that, we need to first expose our app to our window context. This may sound like a challenge, but in our Vue app is just done by adding the last line in this piece of code:</p>
<figure class="wp-block-embed is-type-rich is-provider-embed-handler wp-block-embed-embed-handler"/>
<p>Whenever we now open our dev tools and type window.app into our console, we will see our attributes, app functions, and much more information about our app. In fact, if we decide to type </p>
<pre class="wp-block-preformatted">window.app.showLoginModule = true </pre>
<p>into our console, our login modal window will open. Go ahead and try that!</p>
<h2 id="h-creating-an-app-action"><strong>Creating an app action</strong></h2>
<p>Now, we can do the exact same thing using Cypress, like this:</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/filiphric/8fb54a00bbd40280cd30b134c897dc44.js?file=loginAA1.spec.ts</p>
</div>
<p>And just like that, our login modal is open! We have made our first app action. In other words, we have set our app to the desired state. Let’s go one step further and get to our signup page. Now, instead of simply setting our attribute to the desired state, we will call a function that changes the state for us.</p>
<p>To save us some time, I have created a helper custom command in our app, that will select one of our components:</p>
<ul>
<li>root</li>
<li>Navbar</li>
<li>Login</li>
<li>board-collection</li>
<li>board</li>
</ul>
<p>These are the same components you can see in Vue.js dev tools. You can use the command simply by calling </p>
<pre class="wp-block-preformatted">cy.component('Login')</pre>
<p>This command will return our component with all its data and functions:</p>
<figure class="wp-block-image"><img src="https://lh3.googleusercontent.com/K1I96mBSe_B826W1_4djOGG3QZTZR2_G_W9CT_f53sk9j42wL9lpA27hkM5SSPPFqO19sV_Gsfur7fnapUABtjy4Q37lgOi4VPeZC13VMl7gb5nOzdzT8ub8ykb-ueOU6zGiskok" alt=""/></figure>
<p>Notice that this component contains a </p>
<pre class="wp-block-preformatted">logSignSwitch() </pre>
<p>function.<a target="_blank" href="https://github.com/filiphric/trelloapp/blob/page-objects-app-actions/assets/js/components/login.js#L46" rel="noopener"> If you look into the code</a>, you’ll see that this is a function responsible for switching between “login” and “signup” view in our modal window.</p>
<p>We will now call this function from within our test using the following code:</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/filiphric/8fb54a00bbd40280cd30b134c897dc44.js?file=loginAA2.spec.ts</p>
</div>
<p>This will now open our app in desired state, which is our signup screen.</p>
<h2 id="h-why-bother-though"><strong>Why bother though?</strong></h2>
<p>This is a legitimate question. Seems like the setup is more complicated than setting up page objects. However, one does not rule the other. You can combine both approaches and use the one that is more appropriate for your test. It is however good to design your tests in a way that will shorten them by starting it at a desired point.</p>
<p>App actions can also be quite fast. During my comparison of these two tests, I got to finish my tests in 0.34 seconds for page objects and 0.18 seconds for app actions. Although both are pretty fast, things can really make a difference when running thousands of tests.</p>
<p>App actions also skip the part where e.g. your inputs need to become interactive, our your buttons need to become clickable. There are no incomplete input fields or misclicks because we are skipping this kind of interaction altogether.</p>
<p>Of course, we cannot write an end-to-end test without interacting with our application directly. For these parts, abstracting common actions make absolute sense. But for the parts of our app that are already tested, we can save some time and skip a few steps.</p>
<p>I find app actions especially useful for setting up your app for a visual test. You may save yourself a few headaches by skipping UI interaction and jumping straight into your desired state.</p>
<p>If you liked this blog, be sure to check out my page at <a target="_blank" href="https://filiphric.com/" rel="noopener">filiphric.com</a>, I write a Cypress tip every week and do all kinds of fun stuff <img src="https://s.w.org/images/core/emoji/13.0.1/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
</p></div>
<p><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script><br />
<br /><br />
<br /><a href="https://applitools.com/blog/page-objects-app-actions-cypress/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Emotet’s Takedown: Have We Seen the Last of the Malware?</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/emotets-takedown-have-we-seen-the-last-of-the-malware/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Wed, 03 Feb 2021 21:37:41 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Emotets]]></category>
		<category><![CDATA[Malware]]></category>
		<category><![CDATA[Takedown]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/emotets-takedown-have-we-seen-the-last-of-the-malware/</guid>

					<description><![CDATA[A week after law enforcement agencies said they took down Emotet, there has been no sign of the prolific malware.]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />A week after law enforcement agencies said they took down Emotet, there has been no sign of the prolific malware.<br />
<br /><br />
<br /><a href="https://threatpost.com/emotets-takedown-have-we-seen-the-last-of-the-malware/163636/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Second SolarWinds Attack Group Breaks into USDA Payroll — Report</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/second-solarwinds-attack-group-breaks-into-usda-payroll-report/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Wed, 03 Feb 2021 21:22:49 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Attack]]></category>
		<category><![CDATA[Breaks]]></category>
		<category><![CDATA[Group]]></category>
		<category><![CDATA[Payroll]]></category>
		<category><![CDATA[Report]]></category>
		<category><![CDATA[SolarWinds]]></category>
		<category><![CDATA[USDA]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/second-solarwinds-attack-group-breaks-into-usda-payroll-report/</guid>

					<description><![CDATA[A second APT, potentially linked to the Chinese government, could be behind the Supernova malware. Source link]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />A second APT, potentially linked to the Chinese government, could be behind the Supernova malware.<br />
<br /><br />
<br /><a href="https://threatpost.com/second-solarwinds-attack-group-usda-payroll/163635/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>New Malware Hijacks Kubernetes Clusters to Mine Monero</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/new-malware-hijacks-kubernetes-clusters-to-mine-monero/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Wed, 03 Feb 2021 20:50:54 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Clusters]]></category>
		<category><![CDATA[Hijacks]]></category>
		<category><![CDATA[kubernetes]]></category>
		<category><![CDATA[Malware]]></category>
		<category><![CDATA[Monero]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/new-malware-hijacks-kubernetes-clusters-to-mine-monero/</guid>

					<description><![CDATA[Researchers warn that the Hildegard malware is part of &#8216;one of the most complicated attacks targeting Kubernetes.&#8217; Source link]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />Researchers warn that the Hildegard malware is part of &#8216;one of the most complicated attacks targeting Kubernetes.&#8217;<br />
<br /><br />
<br /><a href="https://threatpost.com/new-malware-hijacks-kubernetes-clusters-to-mine-monero/163629/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>The state of app sec tools: 5 trends shaping the big shift in 2021</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/the-state-of-app-sec-tools-5-trends-shaping-the-big-shift-in-2021/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Wed, 03 Feb 2021 18:15:00 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[App]]></category>
		<category><![CDATA[big]]></category>
		<category><![CDATA[sec]]></category>
		<category><![CDATA[shaping]]></category>
		<category><![CDATA[Shift]]></category>
		<category><![CDATA[State]]></category>
		<category><![CDATA[Tools]]></category>
		<category><![CDATA[Trends]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/the-state-of-app-sec-tools-5-trends-shaping-the-big-shift-in-2021/</guid>

					<description><![CDATA[Companies have for some time been focused on digitally transforming the business, especially in reaction to the COVID-19 pandemic. For]]></description>
										<content:encoded><![CDATA[<p> <br />
<br /></p>
<div>
<p>Companies have for some time been <a target="_blank" href="https://content.microfocus.com/digital-transformation-tb/digital-transformation-pandemic?lx=EGspVB&amp;utm_source=techbeacon&amp;utm_medium=referral&amp;utm_campaign=00172256" rel="noopener">focused on digitally transforming the business</a>, especially in reaction to the COVID-19 pandemic. For developers, that means adopting an agile development methodology in a framework such as DevOps.</p>
<p>Yet DevOps teams have to move beyond the <a target="_blank" href="https://techbeacon.com/security/12-app-sec-tool-trends-watch" rel="noopener">basic four categories of application security tools</a> (static analysis, dynamic analysis, interactive testing, and software component analysis, or SCA), according to experts. The entire team—developers, application security professionals, and IT operations—should <a target="_blank" href="https://content.microfocus.com/application-security-tb/appsec-tool-trends?lx=P_znZe&amp;utm_source=techbeacon&amp;utm_medium=techbeacon&amp;utm_campaign=00134846" rel="noopener">incorporate tools and processes </a>that support the full DevOps lifecycle, said Guy Podjarny, co-founder and president of software security and services firm Snyk.</p>
<blockquote>
<p>&#8220;Those classes of tools are no longer sufficient in the world of cloud-native applications. All of those tools—outside of SCA—are about finding vulnerabilities in your custom code, but increasingly that is only a portion of your overall application and only a small part of your risk.&#8221;<br />—<a target="_blank" href="https://twitter.com/guypod" rel="nofollow noopener">Guy Podjarny</a></p>
</blockquote>
<p>While recent recommendations for application security have suggested that more security processes be adopted by developers—in a move known as &#8220;<a target="_blank" href="https://techbeacon.com/app-dev-testing/shift-security-left-your-continuous-testing-3-key-focus-areas" rel="noopener">shifting left</a>&#8220;—companies need to find tools that support all the various functions inside a DevOps team, from developers to quality control to operations, as discussed in TechBeacon&#8217;s <a target="_blank" href="https://content.microfocus.com/appsec-tools-2021-tb/buyers-guide-appsec-tools-2021?lx=_uoJSd?utm_source=techbeacon&amp;utm_medium=referral&amp;utm_campaign=00134846" rel="noopener">Buyer&#8217;s Guide for Application Security Tools 2021</a>.</p>
<p>Developers should use software component analysis and in-pipeline static code analysis to reduce vulnerabilities in code, while IT operations professionals need to move beyond web application firewalls and focus on containers and other infrastructure, according to the report.</p>
<p>Here are five <a target="_blank" href="https://content.microfocus.com/appsec-tools-2021-tb/the-state-of-applica?lx=_uoJSd?utm_source=techbeacon&amp;utm_medium=referral&amp;utm_campaign=00134846" rel="noopener">key trends shaping the shift to more secure development</a> and deployment of software.</p>
<h3>1. Security requires more than few classes of tools</h3>
<p>Application security is often boiled down to four classes of tools: <a target="_blank" href="https://content.microfocus.com/appsec-tools-2021-tb/forrester-wave-sast-q1-2021?lx=_uoJSd?utm_source=techbeacon&amp;utm_medium=referral&amp;utm_campaign=00134846" rel="noopener">static analysis security testing (SAST)</a>, dynamic analysis security testing (DAST), runtime application self-protection (RASP), and software composition analysis (SCA). However, securing the entire application development and deployment pipeline requires a far greater set of tools and processes.</p>
<p>Unit tests and linters help keep errors from becoming vulnerabilities. Threat modeling and attack testing give DevOps teams insight into how their application could be attacked. <a target="_blank" href="https://techbeacon.com/security/container-security-checklist-5-key-questions-answer" rel="noopener">Container security</a> and infrastructure controls can help prevent vulnerabilities from affecting deployment. And ongoing analysis of actual attack data can keep teams updated on the latest attacker tactics.</p>
<p>The focus should be to incorporate security considerations during every step of the DevOps process, said Rohit Sethi, CEO of Security Compass, a security services firm.</p>
<blockquote>
<p>&#8220;Software development still emphasizes and promotes the &#8216;find-and-fix model,&#8217; which is one of the biggest perils of the security industry. Even if you shift left to scan for vulnerabilities earlier in the lifecycle, there is no substitution for building in security and compliance in by design.&#8221;<br />—<a target="_blank" href="https://www.linkedin.com/in/rohit-sethi-8429591/" rel="nofollow noopener">Rohit Sethi</a></p>
</blockquote>
<h3>2. Threat modeling becomes more important</h3>
<p>In November, a group of 15 cybersecurity professionals <a target="_blank" href="https://techbeacon.com/security/threat-modeling-gets-its-manifesto-how-map-out-your-app-sec-risk" rel="noopener">created the Threat Modeling Manifesto</a> as a way to call attention to businesses&#8217; needs to better understand their risks. The document, modeled after <a target="_blank" href="https://techbeacon.com/app-dev-testing/agile-manifesto-20-whats-still-relevant-whats-not" rel="noopener">the Agile Manifesto</a> that is the basis of the agile development movement, promotes security as an ideal goal that takes continuous work and threat modeling as a way to understand the journey.</p>
<p>Security needs to become more proactive, and threat modeling is one of the core tools that security teams and DevOps partners have to focus on understanding threats and create a secure architecture based on their risk profile, said Security Compass&#8217; Sethi.</p>
<blockquote>
<p>&#8220;Planning tools are underappreciated in this arena. Most of the tools—<a target="_blank" href="https://techbeacon.com/sast-dast-iast-rasp-pros-cons-how-choose" rel="noopener">SAST, DAST, IAST/RASP</a>—are reactionary tools focused on find and fix.&#8221;<br />—Rohit Sethi</p>
</blockquote>
<h3>3. Introduce security in simple ways to succeed</h3>
<p>While the simple static code analysis tools known as linters that flag defects and code-quality errors to developers are widely adopted, they are not a replacement for the more in-depth, automated analysis provided by commercial SAST. That said, they are an excellent way to <a target="_blank" href="https://techbeacon.com/security/state-app-sec-testing-get-your-shift-secure-code" rel="noopener">insert code-checking into the development process</a>, allowing DevOps teams to adopt better technology as their processes and skills mature.</p>
<p>Don&#8217;t ignore the ability of linting to gradually introduce developers to security testing, said Dan Cornell, chief technology officer of software security consulting firm Denim Group.</p>
<p>Linting SAST tools and commercial-grade SAST tools have different enough characteristics that their deployment scenarios are potentially very different, he said.</p>
<blockquote>
<p>&#8220;The linting-style SAST tools can be a great entry point into deploying SAST, especially for organizations looking to incorporate security testing into pipelines to give some visibility to developers.&#8221;<br />—<a target="_blank" href="https://twitter.com/danielcornell" rel="nofollow noopener" style="color:#0096d6">Dan Cornell</a></p>
</blockquote>
<h3>4. More focus on open source and third-party suppliers</h3>
<p>DevOps teams also have to expand their focus beyond their own code and look at the application and infrastructure components that create their software stack. While companies have increasingly adopted SCA, tools that measure the security of the containers used to host applications are only starting to take off.</p>
<p>Like <a target="_blank" href="https://content.microfocus.com/application-security-tb/open-source-risks?lx=P_znZe&amp;utm_source=techbeacon&amp;utm_medium=techbeacon&amp;utm_campaign=00134846" rel="noopener">open-source components </a>that now make up more than 70% of the code in an average project, containers are the third-party infrastructure component that many companies rely on for deployment.</p>
<p>Companies should appreciate that. Since they require their development teams to also manage containers and infrastructure, they need to equip them with the tools to do so securely, said Snyk&#8217;s Podjarny.</p>
<blockquote>
<p>&#8220;That means including container security in the context of software development, not just runtime, and infrastructure as code, such as securing Kubernetes configuration, Terraform clusters, and others.&#8221;<br />—Guy Podjarny</p>
</blockquote>
<h3>5. Mistakes continue to be the greatest threat</h3>
<p>Cloud-native development teams can easily deploy their application, but also often find fewer checks in place to prevent mistakes. For that reason, tools that examine the <a target="_blank" href="https://techbeacon.com/security/state-cloud-security-privacy-5-key-trends-watch" rel="noopener">security of cloud environments </a>have become more popular, from checking the configuration of Amazon S3 buckets and MongoDB databases to finding insecure implementations of APIs and accidentally published development keys.</p>
<p>These tools can help teams developing cloud-native applications identify potential risks in the environments into which they’ll be deployed, said Denim Group&#8217;s Cornell.</p>
<blockquote>
<p>&#8220;Cloud-native development teams need better frameworks to make sense of these disparate sources of potential vulnerabilities and weaknesses in order to prioritize remediation activities.&#8221;<br />—Dan Cornell</p>
</blockquote>
<h3>Focus on DevOps team maturity</h3>
<p>The trends are different for every team. The approach a company should take to incorporating more security tools and processes into its DevOps pipeline is not determined by the tools, but by the DevOps team&#8217;s maturity, said Denim Group&#8217;s Cornell:</p>
<blockquote>
<p>&#8220;Tool deployment priorities really aren’t tied to years or periods of calendar time. Instead, organizations should look at the level of maturity of their testing programs, their goals, and select next steps based on those criteria.&#8221;</p>
</blockquote>
<h4>Keep learning</h4>
</div>
<p><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script><br />
<br /><br />
<br /><a href="https://techbeacon.com/security/state-app-sec-tools-5-trends-shaping-big-shift-2021">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Five Critical Android Bugs Patched, Part of Feb. Security Bulletin</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/five-critical-android-bugs-patched-part-of-feb-security-bulletin/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Wed, 03 Feb 2021 15:40:01 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Android]]></category>
		<category><![CDATA[Bugs]]></category>
		<category><![CDATA[Bulletin]]></category>
		<category><![CDATA[Critical]]></category>
		<category><![CDATA[Feb]]></category>
		<category><![CDATA[Part]]></category>
		<category><![CDATA[Patched]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/five-critical-android-bugs-patched-part-of-feb-security-bulletin/</guid>

					<description><![CDATA[February’s security update for the mobile OS includes a Qualcomm flaw rated critical, with a CVSS score of 9.8. Source]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />February’s security update for the mobile OS includes a Qualcomm flaw rated critical, with a CVSS score of 9.8.<br />
<br /><br />
<br /><a href="https://threatpost.com/five-critical-bugs-patched-feb-security-bulletin/163623/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>SolarWinds Orion Bug Allows Easy Remote-Code Execution and Takeover</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/solarwinds-orion-bug-allows-easy-remote-code-execution-and-takeover/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Wed, 03 Feb 2021 11:00:21 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Bug]]></category>
		<category><![CDATA[Easy]]></category>
		<category><![CDATA[Execution]]></category>
		<category><![CDATA[Orion]]></category>
		<category><![CDATA[RemoteCode]]></category>
		<category><![CDATA[SolarWinds]]></category>
		<category><![CDATA[Takeover]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/solarwinds-orion-bug-allows-easy-remote-code-execution-and-takeover/</guid>

					<description><![CDATA[The by-now infamous company has issued patches for three security vulnerabilities in total. Source link]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />The by-now infamous company has issued patches for three security vulnerabilities in total.<br />
<br /><br />
<br /><a href="https://threatpost.com/solarwinds-orion-bug-remote-code-execution/163618/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>TrickBot Continues Resurgence with Port-Scanning Module</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/trickbot-continues-resurgence-with-port-scanning-module/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Tue, 02 Feb 2021 21:38:50 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[continues]]></category>
		<category><![CDATA[Module]]></category>
		<category><![CDATA[PortScanning]]></category>
		<category><![CDATA[Resurgence]]></category>
		<category><![CDATA[TrickBot]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/trickbot-continues-resurgence-with-port-scanning-module/</guid>

					<description><![CDATA[The infamous malware has incorporated the legitimate Masscan tool, which looks for open TCP/IP ports with lightning-fast results. Source link]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />The infamous malware has incorporated the legitimate Masscan tool, which looks for open TCP/IP ports with lightning-fast results.<br />
<br /><br />
<br /><a href="https://threatpost.com/trickbot-port-scanning-module/163615/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Crypto Crook Hired Steven Seagal to Promote Scam, Now Faces Charges</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/crypto-crook-hired-steven-seagal-to-promote-scam-now-faces-charges/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Tue, 02 Feb 2021 18:17:18 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Charges]]></category>
		<category><![CDATA[Crook]]></category>
		<category><![CDATA[Crypto]]></category>
		<category><![CDATA[Faces]]></category>
		<category><![CDATA[Hired]]></category>
		<category><![CDATA[Promote]]></category>
		<category><![CDATA[scam]]></category>
		<category><![CDATA[Seagal]]></category>
		<category><![CDATA[Steven]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/crypto-crook-hired-steven-seagal-to-promote-scam-now-faces-charges/</guid>

					<description><![CDATA[Feds charged California-based private detective for stealing $11M from investors, with help from actor Steven Seagal. Source link]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />Feds charged California-based private detective for stealing $11M from investors, with help from actor Steven Seagal.<br />
<br /><br />
<br /><a href="https://threatpost.com/crypto-crook-steven-segal-scam/163612/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Tiny Kobalos Malware Bedevils Supercomputers to Steal Logins</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/tiny-kobalos-malware-bedevils-supercomputers-to-steal-logins/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Tue, 02 Feb 2021 17:37:56 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Bedevils]]></category>
		<category><![CDATA[Kobalos]]></category>
		<category><![CDATA[Logins]]></category>
		<category><![CDATA[Malware]]></category>
		<category><![CDATA[Steal]]></category>
		<category><![CDATA[Supercomputers]]></category>
		<category><![CDATA[Tiny]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/tiny-kobalos-malware-bedevils-supercomputers-to-steal-logins/</guid>

					<description><![CDATA[The sophisticated backdoor steals SSH credentials for servers in academic and scientific high-performance computing clusters. Source link]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />The sophisticated backdoor steals SSH credentials for servers in academic and scientific high-performance computing clusters.<br />
<br /><br />
<br /><a href="https://threatpost.com/kobalos-malware-supercomputers-logins/163604/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
