<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>QE Blog</title>
	<atom:link href="http://wp.qe-blog.10.50.222.159.xip.io/feed/" rel="self" type="application/rss+xml" />
	<link>http://wp.qe-blog.10.50.222.159.xip.io</link>
	<description>Where we share news, resources, and latest trends in testing</description>
	<lastBuildDate>Fri, 29 Jan 2021 16:52:30 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.6</generator>

<image>
	<url>http://wp.qe-blog.10.50.222.159.xip.io/wp-content/uploads/2020/03/cropped-Robot-icon-32x32.jpg</url>
	<title>QE Blog</title>
	<link>http://wp.qe-blog.10.50.222.159.xip.io</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Apple iOS 14 Thwarts iMessage Attacks With BlastDoor System</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/apple-ios-14-thwarts-imessage-attacks-with-blastdoor-system/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 29 Jan 2021 16:52:30 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Apple]]></category>
		<category><![CDATA[Attacks]]></category>
		<category><![CDATA[BlastDoor]]></category>
		<category><![CDATA[iMessage]]></category>
		<category><![CDATA[iOS]]></category>
		<category><![CDATA[System]]></category>
		<category><![CDATA[Thwarts]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/apple-ios-14-thwarts-imessage-attacks-with-blastdoor-system/</guid>

					<description><![CDATA[Apple has made structural improvements in iOS 14 to block message-based, zero-click exploits. Source link]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />Apple has made structural improvements in iOS 14 to block message-based, zero-click exploits.<br />
<br /><br />
<br /><a href="https://threatpost.com/apple-ios-imessage-blastdoor/163479/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Lazarus Affiliate ‘ZINC’ Blamed for Campaign Against Security Researcher</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/lazarus-affiliate-zinc-blamed-for-campaign-against-security-researcher/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 29 Jan 2021 13:29:10 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Affiliate]]></category>
		<category><![CDATA[Blamed]]></category>
		<category><![CDATA[Campaign]]></category>
		<category><![CDATA[Lazarus]]></category>
		<category><![CDATA[researcher]]></category>
		<category><![CDATA[ZINC]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/lazarus-affiliate-zinc-blamed-for-campaign-against-security-researcher/</guid>

					<description><![CDATA[New details emerge of how North Korean-linked APT won trust of experts and exploited Visual Studio to infect systems with]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />New details emerge of how North Korean-linked APT won trust of experts and exploited Visual Studio to infect systems with ‘Comebacker’ malware.<br />
<br /><br />
<br /><a href="https://threatpost.com/lazarus-affiliate-zinc-blamed-for-campaign-against-security-researcher/163474/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Playing with Playwright &#8211; Java API &#8211; Automated Visual Testing</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/playing-with-playwright-java-api-automated-visual-testing/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 29 Jan 2021 07:59:28 +0000</pubDate>
				<category><![CDATA[Automation]]></category>
		<category><![CDATA[API]]></category>
		<category><![CDATA[automated]]></category>
		<category><![CDATA[Java]]></category>
		<category><![CDATA[Playing]]></category>
		<category><![CDATA[Playwright]]></category>
		<category><![CDATA[testing]]></category>
		<category><![CDATA[Visual]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/playing-with-playwright-java-api-automated-visual-testing/</guid>

					<description><![CDATA[Playwright, Microsoft’s new end-to-end browser automation framework, is making quite the splash! I took Playwright for a spin only a]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<p>Playwright, Microsoft’s new end-to-end browser automation framework, is making quite the splash! I took Playwright for a spin only a few months ago when it was a <a target="_blank" href="https://info.applitools.com/uc4ys" rel="noopener">JavaScript-only framework</a>, and am pleasantly surprised to learn that language support has expanded to my beloved Java as well as Python and C#! <img src="https://s.w.org/images/core/emoji/13.0.1/72x72/1f60d.png" alt="😍" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>With the additional language support, as well as the ability to execute across modern browser engines Chromium, Firefox, and WebKit – this puts Playwright in the same category as Selenium WebDriver as viable testing solutions for all (not just JS) web testers who need cross-browser testing capabilities for complex applications.</p>
<p>Browsing the <a target="_blank" href="https://www.javadoc.io/doc/com.microsoft.playwright/playwright/latest/index.html" rel="noreferrer noopener">Playwright Javadocs</a> was helpful, but I like to evaluate frameworks by actually using them to automate realistic scenarios. So in this post, I’ll share the steps of building a testing project with Playwright which includes Page Objects, and I’ll also compare the Playwright steps to their equivalents in Selenium WebDriver.</p>
<h2 id="h-how-to-install-playwright-java">How to Install Playwright Java</h2>
<p>The first step in getting started with Playwright is adding the dependency to your project. You can get the Playwright client from <a target="_blank" href="https://mvnrepository.com/artifact/com.microsoft.playwright/playwright/" rel="noreferrer noopener">Maven Repository</a>. I created a new pom.xml file and added the playwright dependency.</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/angiejones/af0f739d020d99ee49961838ab8c6706.js</p>
</div>
<p>Like Selenium WebDriver, Playwright is a browser automation tool and not necessarily limited to a testing framework. In fact, neither of them provide any assertion methods. Therefore, you’ll need to add an assertion library as well. For this example, I’ll use <a target="_blank" href="https://mvnrepository.com/artifact/org.testng/testng" rel="noreferrer noopener">TestNG</a>.</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/angiejones/88570851233fdb8db139c931db21d47f.js</p>
</div>
<h2 id="h-how-to-launch-browser-in-playwright">How to Launch Browser in Playwright</h2>
<p>The <em>Playwright</em> interface allows you to create specific types of <em>Browser</em> objects. The options are Chromium which is what Chrome and Edge are built upon, Firefox, and WebKit (the engine Safari is built upon). With this <em>Browser<strong> </strong></em>object, a <em>launch()</em> method is available which will start a browser instance.</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/angiejones/abfc846aed634f3917937952d5caec44.js</p>
</div>
<p>By default, Playwright launches the browser in headless mode, which means you won’t actually see the tests execute. If you want to see the browser open, you can disable headless mode by passing in a <em>LaunchOption.</em></p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/angiejones/f26a970e673e3e92d8695333596a2e63.js</p>
</div>
<p>In addition to setting the headless mode, <a target="_blank" href="https://www.javadoc.io/doc/com.microsoft.playwright/playwright/latest/com/microsoft/playwright/BrowserType.LaunchOptions.html" rel="noreferrer noopener">LaunchOptions</a> provide several other methods including ones to set environment variables and open Chromium dev tools.</p>
<h2 id="h-how-to-launch-a-website-in-playwright">How to Launch a Website in Playwright</h2>
<p>Now that we have a browser, we can load the application under test – <a target="_blank" href="https://automationbookstore.dev/" rel="noreferrer noopener">Automation Bookstore</a>. To do so, we need a <em>Page</em> object – which is similar to the <em>WebDriver</em> objects in Selenium. To create the <em>Page</em> object, we call <em>browser.newPage()</em> on line 8. This represents a single tab within the browser window. With this object, we can then navigate to our URL (line 9).</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/angiejones/f2686fc54d93ba891c6ec7c454556151.js</p>
</div>
<h2 id="h-how-to-create-a-page-object-in-playwright">How to Create a Page Object in Playwright</h2>
<p>We have our application loaded in the browser, and now we’d like to use the <a target="_blank" href="https://angiejones.tech/page-object-model/" rel="noreferrer noopener">Page Object Model design pattern</a> to create a Java class that represents the Search page of our application.</p>
<p>In order to interact with the web elements, the Page Object class will need access to the Playwright <em>Page</em> object we created above. Again, this is comparable to how we pass the Selenium <em>WebDriver</em> object to Page Object classes so that they can perform browser interaction methods.</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/angiejones/f01d7d02e64f08e3e692e8fd74ac65ef.js</p>
</div>
<p>I created that <em>SearchPage</em> class and the constructor that accepts the <em>Page</em> object.</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/angiejones/6d16b27db88504694853f7ba853445ff.js</p>
</div>
<p>The first method I’ll add to this class is <em>search()</em> which will take in text and enter it into a text field. The method to do this is <em>fill(), </em>which takes a locator and the text you’d like entered into the field. You can see the call on line 11.</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/angiejones/79844b19d8fd0eec81fb5d0c71b1967b.js</p>
</div>
<h3 id="h-locators">Locators</h3>
<p>The element locator for the search field is defined on line 4 as a simple String. This is true for all locators used in Playwright; unlike Selenium which uses the <em>By</em> class to allow you to express locators as id, name, XPath, css selector, link text, etc. In Playwright, it’s only CSS selectors and these are represented as Strings. This is a limitation for cases where XPath is the more favorable option such as when you need to find an element by its text or familial relationship to other elements.</p>
<pre class="wp-block-code"><code>private String locator_searchBar = "#searchBar";</code></pre>
<h3 id="h-wait-strategies">Wait Strategies</h3>
<p>Playwright has <a target="_blank" href="https://playwright.dev/docs/actionability" rel="noreferrer noopener">auto-waiting</a> for elements that you are directly interacting with. Selenium WebDriver often gets a bad rap for things that are out of its control, for example the need to wait for a desired state of the application. In my particular application, there is a slight delay between the time I enter the search query and the time that the results are filtered. Since the search results element is a different element than the one I used the automation tool to interact with (search field), I have to account for this wait in my code, and it doesn’t matter if I use Selenium, Cypress, or Playwright – this remains true.</p>
<p>To wait within Playwright, there’s a <em><a target="_blank" href="https://www.javadoc.io/doc/com.microsoft.playwright/playwright/latest/com/microsoft/playwright/Page.WaitForSelectorOptions.html" rel="noreferrer noopener">WaitForSelectorOptions</a></em> class that allows you to specify the state you’re waiting for. The <a target="_blank" href="https://www.javadoc.io/static/com.microsoft.playwright/playwright/0.180.0/com/microsoft/playwright/Page.WaitForSelectorOptions.State.html" rel="noreferrer noopener">available states</a> are ATTACHED, DETACHED, HIDDEN, and VISIBLE.</p>
<p>So here, after entering text into the field, I need to ask Playwright to wait until there are hidden books attached to the DOM. This is shown on lines 4-5.</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/angiejones/fa413dae21f67c0b76e6cd2f3b3db735.js</p>
</div>
<p>To demonstrate the <em>DETACHED</em> selector option, I’ll also make a <em>clear()</em> method. In this method, I clear the text field by sending an empty String, then wait for the hidden books element to be detached from the DOM.</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/angiejones/ea490f8821f5bd9a6593ef2216421a9b.js</p>
</div>
<h2 id="h-how-to-get-elements-in-playwright">How to Get Elements in Playwright</h2>
<p>Playwright provides the <em>querySelector()</em> mehod which returns a single element as an <em>ElementHandle</em> object. This is equivalent to Selenium’s <em>WebElement</em> object obtained by <em>findElement()</em>. To get multiple elements that match the locator, Playwright provides <em>querySelectorAll()</em> and this will return a list of elements: <em>List&lt;ElementHandle&gt;.</em></p>
<p>This is demonstrated in our Page Object class as we get the number of visible books.</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/angiejones/9b676af6e4dfe396721839d8889bff13.js</p>
</div>
<p>From an <em>ElementHandle</em>, you can take actions (e.g. click, fill, etc) or get information (getAttribute, isEnabled, isChecked, etc). The two methods that are JavaScripty and maybe not obvious at first glance to Java programmers are:<em> innerText()</em> and <em>innerHTML()</em>. The <em>innerText()</em> method is equivalent to Selenium’s getText() method; and there is no equivalent for <em>innerHTML()</em> in Selenium, bu it’s used to get the entire HTML contained between an element’s opening and closing tags.</p>
<p>Here I use the <em>innerText()</em> method to get the titles of the visible books on line 4.</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/angiejones/53fb0225c8ed0f8433b6793c5923dc60.js</p>
</div>
<h2 id="h-the-tests">The Tests</h2>
<p>Now that all of the heavy lifting has been done in the BaseTests and Page Object classes, the tests look exactly like they would if written in Selenium.</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/angiejones/746425b97b7d89523ec0f3c6c6b98f27.js</p>
</div>
<h2 id="h-there-s-much-more">There’s Much More</h2>
<p>What I’ve demonstrated here is how to use Playwright for some of the most common everyday tasks, however the API boasts a lot more! It can capture screenshots, mock geolocation, emulate mobile device settings, intercept network calls, and <a target="_blank" href="https://github.com/microsoft/playwright-java" rel="noreferrer noopener">much more</a>. It already contains a lot of the features that make Selenium 4 more modern. While Playwright is still very new, it looks extremely promising and I’m definitely keeping my eye on it.</p>
</p></div>
<p><br />
<br /><a href="https://applitools.com/blog/playwright-java/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Performing Page Interactions with Selenium Actions</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/performing-page-interactions-with-selenium-actions/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 29 Jan 2021 07:37:30 +0000</pubDate>
				<category><![CDATA[Automation]]></category>
		<category><![CDATA[Actions]]></category>
		<category><![CDATA[Interactions]]></category>
		<category><![CDATA[Page]]></category>
		<category><![CDATA[Performing]]></category>
		<category><![CDATA[Selenium]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/performing-page-interactions-with-selenium-actions/</guid>

					<description><![CDATA[Selenium Actions are used whenever you need a more complex interaction with an HTML element. More complex means it could]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<p>Selenium Actions are used whenever you need a more complex interaction with an HTML element. More complex means it could be either: a double click, a hover, a right-click, or even drag and drop. Such interactions are very easy to make, and in this post, I want to go over some clear examples of how you can use the <a target="_blank" href="https://blog.testproject.io/category/selenium/" rel="noopener">Selenium</a> Actions class for this purpose.</p>
<h2><strong>Table of Contents – Performing Page Interactions with Selenium Actions</strong></h2>
<hr/>
<h2><strong><a target="_blank" id="selenium-actions-class" rel="noopener">The Selenium Actions class</strong></h2>
<p>Whenever you want to perform some of the interactions I mentioned, first, in your test class, or in a base class your tests are extending, you need to import the Actions class. You can do this quite easily:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">import org.openqa.selenium.interactions.Actions;</pre>
<p>Then, you will need to declare a field (or variable, depending on how you structure your tests) of type Actions. In the examples I will show in this post, I will declare a field in my test class, as follows:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">private Actions actions;</pre>
<p>I will then initialize this field in the @BeforeAll method of my test class, right after I created my WebDriver instance (which I store in the ‘driver’ field):</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">actions = new Actions(driver);</pre>
<p><code/><br />In order to initialize the ‘actions’ field, I am calling the Actions class constructor, to which I am passing the ‘driver’ as a parameter. Once this step is done, we can get started with performing our required interactions.</p>
<h2><strong><a target="_blank" id="test-setup" rel="noopener">Test setup</strong></h2>
<p>At the end of the article, I will provide a GitHub link where you can find the resources I used for these examples: the HTML code, the Page class, and the test class. The Page class is called ActionsPage. In the test class, ActionsTest, I first declare the page instance as a field, and then, in the @BeforeAll method, I initialize it. I  also open the test webpage in this method. This webpage is part of the test project I am using and can be found in the test ‘resources’ folder. The entire @BeforeAll and @AfterAll methods look like this:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">@BeforeAll &#13;
void beforeAll() &#13;
{ &#13;
   driver = browserGetter.getChromeDriver(); &#13;
   page = PageFactory.initElements(driver, ActionsPage.class); &#13;
   driver.get(new File("src/test/resources/htmls/tp/actions/actions.html").getAbsolutePath()); &#13;
   actions = new Actions(driver); &#13;
} &#13;
&#13;
@AfterAll &#13;
void afterAll() &#13;
{ &#13;
   driver.quit(); &#13;
}</pre>
<p>Of course, after the entire test class runs, the browser will be closed.</p>
<h2><strong><a target="_blank" id="mouse-hover" rel="noopener">Actions: Mouse hover</strong></h2>
<p>The first interaction I will look into is the mouse hover one. As an example, I will have an HTML element of type paragraph (a &lt;p&gt; tag). When this element is hovered, a tooltip with the text “Hover text displayed” is displayed. The test will need to check that upon hovering, the tooltip displays the correct text.</p>
<p>The corresponding HTML code is:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">&lt;div class="w3-panel w3-teal w3-center"&gt; &#13;
   &lt;p class="tooltip"&gt;Element to hover &lt;span class="tooltiptext"&gt;Hover text displayed&lt;/span&gt;&lt;/p&gt; &#13;
&lt;/div&gt;</pre>
<p>I am interested in creating 2 Selenium WebElements. The first one corresponds to the paragraph we want to hover. The second one corresponds to the tooltip. These 2 WebElements, created in the ActionsPage page class, are:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="java">@FindBy(className = "tooltip") &#13;
public WebElement elementToHover; &#13;
&#13;
@FindBy(className = "tooltiptext") &#13;
public WebElement hoverTextElement;</pre>
<p>Having created the WebElement used for identifying the paragraph to hover, we can now use the hover method from the Actions class, namely ‘moveToElement’. The usage of this method, in general, is, where ‘target’ is the WebElement we need to hover:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">actions.moveToElement(target).perform();</pre>
<p>The ‘perform’ method should always be called after calling the desired interaction method. It performs a required cleanup, so that the next time you are using the ‘actions’ field, you are not relating or adding an interaction to the previous one. You can think of this method as performing a reset. The actions can be chained, meaning you can perform further interactions after the hover is done, within the same line of code. I will show such an example later on.</p>
<p>For now, looking at our HTML page and the page class, we will write the part of the test which performs the hover over the paragraph. That means we will call the ‘moveToElement’ method while passing the ‘elementToHover’ WebElement as a parameter:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">actions.moveToElement(page.elementToHover).perform();</pre>
<p>Because we also want to check the text of the tooltip, we can use the ‘getText’ method to read the text of the WebElement which now needs to be displayed, namely ‘hoverTextElement’. We could use this in an assertion, as below, or even better, we could use a WebDriverWait based method for waiting for the text to be the expected one. For now, let’s check the text using an assertion:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">assertEquals("Hover text displayed", page.hoverTextElement.getText());</pre>
<h2><strong><a target="_blank" id="double-click" rel="noopener">Actions: Double click</strong></h2>
<p>Let’s now look at another example: here we have another paragraph. Before double-clicking on it, the text it displays is: Element to double click. After we double click, the new text it will display needs to be: The element was double-clicked.</p>
<p>The corresponding HTML for this paragraph is:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">&lt;div class="w3-panel w3-cyan w3-center"&gt; &#13;
   &lt;p id="elementToDoubleClick" ondblclick="doubleClick()"&gt;Element to double click&lt;/p&gt; &#13;
&lt;/div&gt;</pre>
<p>The corresponding WebElement for the paragraph we want to double click on is:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">@FindBy(id = "elementToDoubleClick") &#13;
public WebElement elementToDoubleClick;</pre>
<p>Before we perform the double click on the paragraph, we want to check that the text is the expected initial one:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">assertEquals("Element to double click", page.elementToDoubleClick.getText());</pre>
<p>Now, the actual interaction will take place, using the ‘doubleClick’ method. The general usage for this method is:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">actions.doubleClick(target).perform();</pre>
<p>When calling this method, there is no need for performing a hover before the click, as this step is already included in the ‘doubleClick’ method. The double click takes place in the middle of the defined WebElement. In our example, this method call, using our WebElement, is:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">actions.doubleClick(page.elementToDoubleClick).perform();</pre>
<p>After the double click was performed, we do want to check that the behavior of the paragraph is correct. Therefore, we will also make another assertion on its’ text, comparing it to the expected new one:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">assertEquals("The element was double clicked", page.elementToDoubleClick.getText());</pre>
<p>This assertion should be successful, which means our interaction was successful.</p>
<h2><strong><a target="_blank" id="right-click" rel="noopener">Actions: Right-click</strong></h2>
<p>We also have the option to perform a right-click on a WebElement. For demonstrating how this can be done, I will again use the ‘elementToDoubleClick’ WebElement we previously defined. The method to be used for this interaction is called ‘contextClick’ and its’ normal usage would be:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">actions.contextClick(target).perform();</pre>
<p>For our example, the corresponding right-click method call will be:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">actions.contextClick(page.elementToDoubleClick).perform();</pre>
<p>No hover is required in this case either, as it is already included in the ‘contextClick’ method. Of course, once the right-click is performed, you can continue with whatever steps your test requires.</p>
<h2><strong><a target="_blank" id="drag-and-drop" rel="noopener">Actions: Drag and drop</strong></h2>
<p>Let’s take a look at another example: we have a paragraph that we want to move over an empty &lt;div&gt;. The corresponding HTML code is:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">&lt;p id="elementToDrag" class="w3-card-4 w3-center w3-sand"&gt;Element to drag&lt;/p&gt; &#13;
&lt;div class="droptarget w3-panel w3-pale-yellow w3-center"&gt; &lt;/div&gt;</pre>
<p>The WebElements representing the element to drag and the element to drop it to are:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">@FindBy(id = "elementToDrag") &#13;
public WebElement elementToDrag; &#13;
&#13;
@FindBy(className = "droptarget") &#13;
public WebElement dropContainer;</pre>
<p>The drag and drop interaction, although normally consisting of several steps, can be done easily using the ‘dragAndDrop’ method. The normal usage for this method is:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">actions.dragAndDrop(source, target).perform();</pre>
<p>In our example, we want to drag the ‘elementToDrag’ element over the ‘dropContainer’ element. This is done as follows:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">actions.dragAndDrop(page.elementToDrag, page.dropContainer).perform();</pre>
<p>Once this interaction has been made, you could check that it was performed successfully by checking that the HTML code has been changed to reflect the new location of the element which was dragged.</p>
<h2><strong><a target="_blank" id="chaining" rel="noopener">Actions: Chaining</strong></h2>
<p>In some cases, you will need to perform several interactions on the same element. For example, you might need to first hover the element, and only then double click on it. This all depends on your underlying HTML. For multiple interactions on the same element, one after the other, you can still call the methods from the Actions class. In this case though, you will chain the method calls.</p>
<p>An example of how this can be done is to perform a drag and drop, but not by using the ‘dragAndDrop’ method. When you think about what this interaction is made of, you can easily see that first you need to click on a WebElement, hold the mouse down, drag the mouse to the location where you want to drop it, and then actually drop it. This, in terms of methods we can find in the Actions class, translates to:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">actions.clickAndHold(page.elementToDrag).moveToElement(page.dropContainer).release().build().perform();</pre>
<p>Here, the ‘clickAndHold’ method will perform exactly what the name suggests: first, a click is done, and then the mouse is not released. Right after this interaction, while the mouse is still clicked, the cursor moves over the element where we want to drop the element we are dragging. In order to drop it, we need to use the ‘release’ method, which will release the mouse click. Because there are several interactions we want to use on the same element, we will also call the ‘build’ method before calling the ‘perform’ one. And this is how we can chain any Actions methods we require.</p>
<h2><strong><a target="_blank" id="conclusion" rel="noopener">Conclusion</strong></h2>
<p>In this article, I went over some of the most useful methods from the <a target="_blank" href="https://blog.testproject.io/2020/12/03/selenium-automation-best-practices-tips-you-must-know/" rel="noopener">Selenium</a> Actions class. All of them performed an interaction with an HTML element which we defined by means of a WebElement. In case you only have some coordinates on the screen for performing the interaction, there are some useful methods to help you out. For the complete list of available interaction methods, please check out the <a target="_blank" href="https://www.selenium.dev/selenium/docs/api/java/org/openqa/selenium/interactions/Actions.html" rel="noopener noreferrer">official documentation</a>.</p>
<h2><strong><a target="_blank" id="resources" rel="noopener">Resources</strong></h2>
<p><a target="_blank" href="https://github.com/iamalittletester/little-project/blob/master/src/test/resources/htmls/tp/actions/actions.html" rel="noopener">The HTML code used for the examples</a></p>
<p><a target="_blank" href="https://github.com/iamalittletester/little-project/blob/master/src/main/java/com/imalittletester/pages/tp/ActionsPage.java" rel="noopener">The Page object class</a></p>
<p><a target="_blank" href="https://github.com/iamalittletester/little-project/blob/master/src/test/java/com/imalittletester/tp/ActionsTest.java" rel="noopener">The test class</a></p>
</p></div>
<p><br />
<br /><a href="https://blog.testproject.io/2021/01/29/performing-page-interactions-with-selenium-actions/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>#NeotysPAC expert Alex Podelko discusses the future of #performancetesting as an&#8230;</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/neotyspac-expert-alex-podelko-discusses-the-future-of-performancetesting-as-an/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Thu, 28 Jan 2021 21:09:47 +0000</pubDate>
				<category><![CDATA[Performance]]></category>
		<category><![CDATA[Alex]]></category>
		<category><![CDATA[discusses]]></category>
		<category><![CDATA[Expert]]></category>
		<category><![CDATA[future]]></category>
		<category><![CDATA[NeotysPAC]]></category>
		<category><![CDATA[performancetesting]]></category>
		<category><![CDATA[Podelko]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/neotyspac-expert-alex-podelko-discusses-the-future-of-performancetesting-as-an/</guid>

					<description><![CDATA[#NeotysPAC expert Alex Podelko discusses the future of #performancetesting as an evolution more than a revolution, asking should it grow]]></description>
										<content:encoded><![CDATA[
<p><a target="_blank" class="fi fj" href="https://facebook.com/hashtag/neotyspac?refid=17&amp;_ft_=mf_story_key.4061581510519948%3Atop_level_post_id.4061581510519948%3Atl_objid.4061581510519948%3Acontent_owner_id_new.163354693676002%3Athrowback_story_fbid.4061581510519948%3Apage_id.163354693676002%3Aphoto_id.4061581417186624%3Astory_location.4%3Astory_attachment_style.photo%3Atds_flgs.3%3Aott.AX94EZmxSM1ipoXL%3Apage_insights.%7B%22163354693676002%22%3A%7B%22page_id%22%3A163354693676002%2C%22page_id_type%22%3A%22page%22%2C%22actor_id%22%3A163354693676002%2C%22dm%22%3A%7B%22isShare%22%3A0%2C%22originalPostOwnerID%22%3A0%7D%2C%22psn%22%3A%22EntStatusCreationStory%22%2C%22post_context%22%3A%7B%22object_fbtype%22%3A266%2C%22publish_time%22%3A1611868187%2C%22story_name%22%3A%22EntStatusCreationStory%22%2C%22story_fbid%22%3A%5B4061581510519948%5D%7D%2C%22role%22%3A1%2C%22sl%22%3A4%2C%22targets%22%3A%5B%7B%22actor_id%22%3A163354693676002%2C%22page_id%22%3A163354693676002%2C%22post_id%22%3A4061581510519948%2C%22role%22%3A1%2C%22share_id%22%3A0%7D%5D%7D%7D%3Athid.163354693676002%3A306061129499414%3A2%3A0%3A1612166399%3A5838923561515324227&amp;__tn__=%2As-R" rel="noopener">#NeotysPAC</a> expert Alex Podelko discusses the future of <a target="_blank" class="fi fj" href="https://facebook.com/hashtag/performancetesting?refid=17&amp;_ft_=mf_story_key.4061581510519948%3Atop_level_post_id.4061581510519948%3Atl_objid.4061581510519948%3Acontent_owner_id_new.163354693676002%3Athrowback_story_fbid.4061581510519948%3Apage_id.163354693676002%3Aphoto_id.4061581417186624%3Astory_location.4%3Astory_attachment_style.photo%3Atds_flgs.3%3Aott.AX94EZmxSM1ipoXL%3Apage_insights.%7B%22163354693676002%22%3A%7B%22page_id%22%3A163354693676002%2C%22page_id_type%22%3A%22page%22%2C%22actor_id%22%3A163354693676002%2C%22dm%22%3A%7B%22isShare%22%3A0%2C%22originalPostOwnerID%22%3A0%7D%2C%22psn%22%3A%22EntStatusCreationStory%22%2C%22post_context%22%3A%7B%22object_fbtype%22%3A266%2C%22publish_time%22%3A1611868187%2C%22story_name%22%3A%22EntStatusCreationStory%22%2C%22story_fbid%22%3A%5B4061581510519948%5D%7D%2C%22role%22%3A1%2C%22sl%22%3A4%2C%22targets%22%3A%5B%7B%22actor_id%22%3A163354693676002%2C%22page_id%22%3A163354693676002%2C%22post_id%22%3A4061581510519948%2C%22role%22%3A1%2C%22share_id%22%3A0%7D%5D%7D%7D%3Athid.163354693676002%3A306061129499414%3A2%3A0%3A1612166399%3A5838923561515324227&amp;__tn__=%2As-R" rel="noopener">#performancetesting</a> as an evolution more than a revolution, asking should it grow fur or feathers to avoid extinction? <img src="https://s.w.org/images/core/emoji/13.0.1/72x72/1f449.png" alt="👉" class="wp-smiley" style="height: 1em; max-height: 1em;" /> <a target="_blank" href="https://lm.facebook.com/l.php?u=https%3A%2F%2Fbit.ly%2F2MonDnY&amp;h=AT3Uh1EK2NlJzMI6BQpMIOrSEPD8g6dSQaPkzLtKBQpF5Yo0DUcF9A_XO346lWJFdz88AOetzOXQ2aK44-d4aUhb_04cZ4ms-2nZLMcGB2djrZL8I26A7Rc8lHW-DZALc7BVHCk1WshhCpeh_fFytE9mMP6nciC7ZGuKYeoHIt_otUnaI11AvucbXfLho6M9lGoayPHhVg2XluJ3iyYzM2hxntwl28iXA4xHuJsHxUiswyWpkpBX3AkjPlX4Va1iQegnpIy0jBef-9JosJVfo9KKS3vgiE5zZ-hDVz7sk7st4-5493LLxO6gp2qx-d3TuRbeZhrLSkIM65oQLm5XhdX0sPk3dukaoPeddLLGspcIxP0asxqYhX1x_8-uEXOV-yChq2h02ooIP_DpAPPX3zhVGjqJaMNucLELEhEUnhE47ELHi3kEuNmxBPb0ohGlZR7o9gcOedvdEl0EEFZGfpPrDo0luUTVmwaRfH1Oz4qDh_eivpYxx298e6VFjUH-t_G1tkNbUtDBqVReXEPmiFMzszMipPKZYngXBiEE0dLhJgljkJHDDs91jsWswIyps14c6f2VkzF8s_tJ-uL90WJ7ZRfxA35kpsemR2GkMTqbyDkkxAeC_Ws0H_H-C-o5NUmfpsKee6snvlZqklPVgeV242VOnQjO3UQMShqxbEGbWLu-JHznvQo68gq9YAdDppQUMwLf3CLr2o6fInPrhH-UhRCpbLtBcS-ZFVw4gc0OlEC3WIT8ilf8ptWS385iqAW0gb2zBXa0uB6wYdh6ozIO6K2y-FPKO4ZEWS10yxl3rOgGw6j5t0ts9vRvcauKYYWpZaX4YcG4PFSKFWdqjOvmMFOpcDUGPJwBtkzIi2QD5bRRx8hPG4m7AcHvMlI_CKpqlGpr718GmHfwgBuZeO8FxPH3H_9mIlfX2_FDSUIOj24ETaO23fkzcPujoioeAYxVu5XgnFWakSy31y9C7_VG6RvNMmlfxynYI-KofiO8pyw0CbRr_ngcl6cXISjuiy5vXtG1WUdnUqwYzKh87QlOCE-1JLpF6jT37V1ejMKB-_cl2k6z7sjiGnTYacmLLVQnJ70woM5WGgQTGqa4Pr3w4RKmFkgR20mMjA83k9ky6dY8AidPw2mrBfvQ-p-KwE_gk50KoOjhbJkBETuBgvihCuJ8xp7Zsv_9XDQPbri2HPhT2vHIpGy0q335Pn3e75UGtuFWEEkElvnQToyXH0MJOfJfvph0P1trJtikTDxcAng2iOwlI0tQEzAu" rel="noopener">https://bit.ly/2MonDnY</a>
</p>
<p><a target="_blank" href="https://scontent-lga3-2.xx.fbcdn.net/v/t1.0-9/143368420_4061581423853290_6016716109906941979_o.png?_nc_cat=109&#038;ccb=2&#038;_nc_sid=8024bb&#038;_nc_ohc=wGsuRUHbs4sAX8QNl2H&#038;_nc_ht=scontent-lga3-2.xx&#038;oh=b4cf23b37ad44b4c75a72709f2ba9036&#038;oe=6038F4E5" rel="noopener"></a><br />
<br />
<br /><a href="https://www.facebook.com/163354693676002/posts/4061581510519948">Source</a>  </p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Rocke Group’s Malware Now Has Worm Capabilities</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/rocke-groups-malware-now-has-worm-capabilities/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Thu, 28 Jan 2021 20:06:57 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Capabilities]]></category>
		<category><![CDATA[Groups]]></category>
		<category><![CDATA[Malware]]></category>
		<category><![CDATA[Rocke]]></category>
		<category><![CDATA[Worm]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/rocke-groups-malware-now-has-worm-capabilities/</guid>

					<description><![CDATA[The Pro-Ocean cryptojacking malware now comes with the ability to spread like a worm, as well as harboring new detection-evasion]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />The Pro-Ocean cryptojacking malware now comes with the ability to spread like a worm, as well as harboring new detection-evasion tactics.<br />
<br /><br />
<br /><a href="https://threatpost.com/rocke-groups-malware-now-has-worm-capabilities/163463/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>ShinyHunters Exposes Over 125 Million Online Credentials &#124; McAfee Blogs ShinyHunters Exposes Over 125 Million Online Credentials </title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/shinyhunters-exposes-over-125-million-online-credentials-mcafee-blogs-shinyhunters-exposes-over-125-million-online-credentials/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Thu, 28 Jan 2021 19:27:18 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Blogs]]></category>
		<category><![CDATA[Credentials]]></category>
		<category><![CDATA[Exposes]]></category>
		<category><![CDATA[McAfee]]></category>
		<category><![CDATA[million]]></category>
		<category><![CDATA[Online]]></category>
		<category><![CDATA[ShinyHunters]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/shinyhunters-exposes-over-125-million-online-credentials-mcafee-blogs-shinyhunters-exposes-over-125-million-online-credentials/</guid>

					<description><![CDATA[ShinyHunters Exposes Over 125 Million Online Credentials   Meet ShinyHunters, a hacker who recently leaked 10 new databases this past month]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<div class="author-block padding-bottom-xs">
                
            </div>
<h2>ShinyHunters Exposes Over 125 Million Online Credentials</h2>
<p> </p>
<p>Meet <a target="_blank" href="https://www.riskbasedsecurity.com/2021/01/25/shinyhunters-wave-3-one-hacker-exposes-over-125-million-credentials/" rel="noopener noreferrer">ShinyHunters</a>, a hacker who recently leaked 10 new databases this past month from companies including:</p>
<p>• Pixlr.com<br />• Bonobos.com<br />• Wognai.com<br />• Tesspring.com<br />• Tunedglobal.com<br />• Buyucoin.com<br />• Wappalyzer.com<br />• Chqbook.com<br />• Rooter.io<br />• MeetMindful.com</p>
<p>But this isn’t the first time they’ve made headlines. It all started in <a target="_blank" href="https://www.wired.com/story/shinyhunters-hacking-group-data-breach-spree/" rel="noopener noreferrer">May of 2020</a> when ShinyHunters attempted to sell several stolen databases on the Dark Web. They also leaked several other databases between <a target="_blank" href="https://www.forbes.com/sites/daveywinder/2020/07/29/hacker-gives-away-386-million-stolen-records-on-dark-web-what-you-need-to-do-now-shinyhunters-data-breach/?sh=19cca2db6f39" rel="noopener noreferrer">April and July</a>.  In October, they proceeded to leak the database of the meal kit delivery company, HomeChef. Not one to be easily satisfied, <a target="_blank" href="https://latesthackingnews.com/2020/11/16/shinyhunters-target-numerous-firms-in-a-recent-wave-of-data-breaches/" rel="noopener noreferrer">ShinyHunters continued their antics</a> by exposing sixteen other databases in November, where personal user records and information were publicly shared. Prominent companies who fell victim to this wave of data breaches include gaming site Animal Jam, online marketplace Minted, and coupon company ShopBack, among others.</p>
<p>Personal data released ranges from contact information and addresses, dates of birth, passwords, and financial information. Not including the latest data breach, a total of 129,406,564 user records were exposed. Given the alarming size of the exposure, this gives way to rising concerns for when ShinyHunters will strike again. What’s more, this group seeks notoriety from their misdeeds, hoping to claim credibility for the number of attacks they can execute—a troubling thought for everyday users like you and me.</p>
<p>You never know when or if a breach will occur, which is why we must take precautions to protect our data in the case of a security breach. In the past year alone, we have seen a record number of data breaches, posing unforeseen security concerns and bringing light to new priorities for data protection. That’s why we must learn from these occurrences by proactively protecting our private information in 2021 and beyond.</p>
<h3><strong>Tips </strong> <strong>for Protecting Yourself After a Data Breach</strong></h3>
<p>There’s no way of knowing whether your personal information will fall into the wrong hands or that it will be used maliciously, but ShinyHunters has indicated that they are on the lookout for opportunities to expose more databases, so we must take the necessary steps to protect our personal information before the damage is done.</p>
<h4> 1. Find out what information was stolen</h4>
<p>Not knowing what data was stolen can make it significantly more difficult to pinpoint what threats you may become subject to. If you realize a company you buy from fell victim to a data breach, start investigating. Use <a target="_blank" href="https://haveibeenpwned.com/" rel="noopener noreferrer">this tool</a> to see if the breach affects you.</p>
<h4><strong>2. Update your credentials </strong></h4>
<p>Great passwords are usually the first line of defense against personal data exposures, so it’s important to update them as soon as they are compromised. Additionally, use different passwords or passphrases for each of your online accounts which helps protect the majority of your data if one of your accounts becomes vulnerable. One route you can take is to use a <a target="_blank" href="https://www.mcafee.com/en-us/antivirus/mcafee-total-protection.html" rel="noopener noreferrer">password manager</a> that not only lets you create strong passwords but can let you manage them efficiently with added security and peace of mind.</p>
<p>On top of updating your credentials, you’ll want to secure your log-in process by enabling 2-Factor Authentication. So, if a hacker has access to your stolen passwords, they’ll still have to bypass an added security layer that is time sensitive. This makes it even more difficult for them to access your information.</p>
<h4><strong>3. Be on the lookout for spear-phishing attacks</strong></h4>
<p>Like regular phishing attempts, spear-phishing attempts will try to steal your information by posing as an authentic entity to target unsuspecting victims. However, spear phishing attempts can be harder to spot because the attempt is modified to target a specific individual, often in the form of a personalized email. If you receive an email, call, or text asking you to download software, app, or pay a certain amount of money, do not click or take any direct action from the message. Instead, go straight to the organization’s website. This will prevent you from downloading malicious content from phishing links or forking over money unnecessarily.</p>
<h4><strong>4. Keep an eye out for suspicious activity on your accounts </strong></h4>
<p>If you find that your credit card information has been exposed, keep an eye on your bank records and validate each transaction. In the above cases for a site like MeetMindful, where Facebook authentication tokens and user IDs were stolen, it’s always best to keep an eye on other social accounts for fraudulent activity.</p>
<h4><strong> 5. Freeze your credit</strong></h4>
<p>For maximum financial protection, freeze your credit to prevent hackers from opening new accounts in your name. Placing a freeze on your credit is free for consumers and won’t affect your credit score. Simply contact the three major credit bureaus—Equifax, Experian, and TransUnion—to set up a freeze to secure your credit file until you decide to lift it.</p>
<h3><strong>Stay Updated</strong></h3>
<p>To stay updated on all things <a target="_blank" href="https://www.mcafee.com/en-us/index.html" rel="noopener">McAfee</a> and on top of the latest consumer and mobile security threats, follow <a target="_blank" href="https://twitter.com/McAfee_Home" rel="noopener">@McAfee_Home </a> on Twitter, listen to our podcast <a target="_blank" href="https://geo.itunes.apple.com/podcast/us/id1257232208?mt=2&amp;at=1010lbVy&amp;ct=mcafeehackable_GaryBlog_EndBlurb" rel="noopener">Hackable?</a>, and ‘Like’ us on <a target="_blank" href="https://www.facebook.com/McAfee" rel="noopener">Facebook.</a></p>
<p> </p>
</p></div>
<p><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script><script>
  !function(f,b,e,v,n,t,s)
  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  s.parentNode.insertBefore(t,s)}(window, document,'script',
  'https://connect.facebook.net/en_US/fbevents.js');
  fbq('init', '187610925152304');
  fbq('track', 'PageView');
</script><script>
// load Facebook
!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;
t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,
document,'script','https://connect.facebook.net/en_US/fbevents.js');
fbq('init', '766537420057144');
fbq('track', "PageView");</p>
<p>//document.write('x3Cnoscript>x3Cimg height="1" width="1" style="display:none" src="https://www.facebook.com/tr?id=766537420057144&ev=PageView&noscript=1" />x3C/noscript>');
</script><br />
<br /><br />
<br /><a href="https://www.mcafee.com/blogs/consumer/consumer-threat-notices/shinyhunters-exposes-over-125-million-online-credentials/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>APT team attacks white hats: Google fingers North Korea</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/apt-team-attacks-white-hats-google-fingers-north-korea/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Thu, 28 Jan 2021 18:15:00 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[APT]]></category>
		<category><![CDATA[Attacks]]></category>
		<category><![CDATA[fingers]]></category>
		<category><![CDATA[Google]]></category>
		<category><![CDATA[hats]]></category>
		<category><![CDATA[Korea]]></category>
		<category><![CDATA[North]]></category>
		<category><![CDATA[team]]></category>
		<category><![CDATA[white]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/apt-team-attacks-white-hats-google-fingers-north-korea/</guid>

					<description><![CDATA[North Korean state-sponsored hackers are targeting and attacking white-hat security researchers. They’re using a combination of zero-day exploits, Trojan-laced VS]]></description>
										<content:encoded><![CDATA[<p> <br />
<br /></p>
<div>
<p><strong>North Korean state-sponsored hackers</strong> are targeting and attacking white-hat security researchers. They’re using a combination of zero-day exploits, Trojan-laced VS project bundles, and good old social engineering.</p>
<p><strong>So says Google’s Threat Analysis Group (TAG),</strong> which has been looking into the perps. It’s blaming APT38 (a.k.a. Lazarus Group, DarkSeoul, ZINC, etc.)</p>
<p><strong>And there are lessons for all of us.</strong> In this week’s <i><a target="_blank" href="https://techbeacon.com/contributors/richi-jennings" rel="noopener">Security Blogwatch</a></i>, let’s be careful out there.</p>
<p><a target="_blank" href="http://richi.uk/" rel="noopener nofollow" title="Richi Jennings">Your humble blogwatcher</a> curated these bloggy bits for your entertainment. Not to mention: <em>shanties jump the shark.</em></p>
<h3>GOOG TAG tags DPRK APT</h3>
<p><strong>What’s the craic?</strong> Catalin Cimpanu reports—<i><a target="_blank" href="https://www.zdnet.com/article/google-north-korean-hackers-have-targeted-security-researchers-via-social-media/" rel="nofollow ugc noopener" title="read the full text">North Korean hackers have targeted security researchers via social media</a>:</i></p>
<blockquote><p><em>A North Korean government hacking group has targeted members of the cyber-security community engaging in vulnerability research. … The attacks have been spotted by … TAG, a Google security team specialized in hunting advanced persistent threat (APT) groups.<br />…<br />[It’s been] linked to the Lazarus Group, a well-known North Korean state-sponsored operation. … Some security researchers believe the North Korean group most likely used a combination of Chrome and Windows 10 zero-day vulnerabilities to deploy their malicious code.<br />…<br />The reason for targeting security researchers? … To steal exploits for vulnerabilities discovered by the infected researchers, vulnerabilities that the threat group could deploy in its own attacks with little to no development costs.</em></p></blockquote>
<p><strong>And</strong> Jon Porter carries the story—<i><a target="_blank" href="https://www.theverge.com/2021/1/26/22250060/google-threat-analysis-group-north-korean-hackers-cybersecurity-researchers-social-engineering" rel="nofollow ugc noopener" title="read the full text">Google warns of ‘novel social engineering method’</a>:</i></p>
<blockquote><p><em>Government-backed hackers based in North Korea are targeting individual security researchers through a number of means. [It] worryingly appears to exploit unpatched Windows 10 and Chrome vulnerabilities.<br />…<br />[TAG] cites several cases of researchers’ machines having been infected simply by visiting the hackers’ blog, even when running the latest versions of Windows 10 and Chrome. … The attackers used a range of different platforms — including Telegram, LinkedIn and Discord.</em></p></blockquote>
<p><strong>Let’s go to the horse’s mouth.</strong> Google TAG’s Adam Weidemann hits the panic button—<i><a target="_blank" href="https://blog.google/threat-analysis-group/new-campaign-targeting-security-researchers/" rel="nofollow ugc noopener" title="read the full text">New campaign targeting security researchers</a>:</i></p>
<blockquote><p><em>The actors behind this campaign, which we attribute to a government-backed entity based in North Korea, have employed a number of means to target researchers. … We hope this post will remind those in the security research community that they are targets to government-backed attackers and should remain vigilant.<br />…<br />The actors have been observed targeting specific security researchers by a novel social engineering method. After establishing initial communications, the actors would ask the targeted researcher if they wanted to collaborate on vulnerability research [via] a Visual Studio Project. Within the Visual Studio Project would be [a] DLL that would be executed through Visual Studio Build Events. The DLL is custom malware that would immediately begin communicating with actor-controlled C2.<br />…<br />We have also observed several cases where researchers have been compromised after visiting the actors’ blog. … Shortly thereafter, a malicious service was installed on the researcher’s system and an in-memory backdoor would begin beaconing. … We’re unable to confirm the mechanism of compromise.<br />…<br />We recommend that you compartmentalize your research activities using separate physical or virtual machines for general web browsing, interacting with others in the research community, accepting files from third parties, and your own security research.</em></p></blockquote>
<p><strong>So who got hacked?</strong> Gareth Corfield relates Alejandro Caceres’ story—<i><a target="_blank" href="https://www.theregister.com/2021/01/26/north_korea_targeted_me_0_day/" rel="nofollow ugc noopener" title="read the full text">I was targeted by North Korean 0-day hackers</a>:</i></p>
<blockquote><p><em>&#8220;When I read the Google thing I honestly think I said out loud, &#8216;Holy ****,&#8217; I thought it was insane. Attacked by a nation state? Me!?&#8221;<br />…<br />A vulnerability broker he had known for a while and trusted had introduced him to a new researcher called James Willy &#8220;from New York,&#8221; Caceres [said]. &#8220;We hopped in a group chat, the three of us, and he sent me a Visual Studio project to take a look at a driver bug that caused a blue screen of death.&#8221;<br />…<br />&#8220;James&#8221; [said] it was linked to Google Chrome – an instant attention-grabber for bug hunters. Vulns affecting software used by tens of millions worldwide are rare and command hefty rewards. … &#8220;The code was all legit, it was a real crash with potential security implications, but I wasn&#8217;t careful when I opened the Visual Studio project.&#8221; [But] opening some Visual Studio projects can cause code to execute, which was the North Koreans&#8217; attack vector.<br />…<br />Sometimes – just sometimes – those evil nation state hackers really are coming after you. Being an ordinary bughunting pro doesn&#8217;t make you less of a target.</em></p></blockquote>
<p><strong>But</strong> this <i><a target="_blank" href="https://it.slashdot.org/comments.pl?sid=18123256&amp;cid=60994104" rel="nofollow ugc noopener" title="read the full text">Anonymous Coward</a></i> is distinctly unimpressed:</p>
<blockquote><p><em>A whitehat that runs Windows 10, Chrome and Visual Studio outside of a sandbox doesn&#8217;t deserve to be called a hacker.</em></p></blockquote>
<p><strong>A unique exploit?</strong> Nope: Seongsu Park—<i><a target="_blank" href="https://twitter.com/unpacker/status/1354203847455956995" rel="nofollow ugc noopener" title="read the full text">@unpacker</a></i>—has déjà vu:</p>
<blockquote><p><em>We have seen that Lazarus group use this malware cluster, we named ThreatNeedle, in recent attack against the defense industry. It’s almost identical malware with the same RC4 key and the overlapped infrastructure. Surprised that it&#8217;s a researcher target at this time.</em></p></blockquote>
<p><strong>Wait. <em>Pause.</em></strong> How do we know it was the DPRK, anyway? <i><a target="_blank" href="https://forums.theregister.com/forum/all/2021/01/26/north_korea_targeted_me_0_day/#c_4193852" rel="nofollow ugc noopener" title="read the full text">martinusher</a></i> ain’t convinced:</p>
<blockquote><p><em>I think there&#8217;s some kind of dice or spinner that they use that&#8217;s marked &#8220;Russia, China, Iran, Cuba, North Korea&#8221; and so on that news services use to identify the &#8216;nation state&#8217; responsible for the hack du jour.</p>
<p>I&#8217;m not ruling out nation states, just that there are a lot more criminals out there than there are nation states. There&#8217;s also good money to be made from vulnerabilities so I&#8217;d expect that less than ethical people would have moved in to what is a decent business opportunity.</p>
<p></em></p></blockquote>
<p><strong>Indeed.</strong> <i><a target="_blank" href="https://www.theverge.com/2021/1/26/22250060/google-threat-analysis-group-north-korean-hackers-cybersecurity-researchers-social-engineering#535821185" rel="nofollow ugc noopener" title="read the full text">scooby359</a></i> would have gotten away with it, if it wasn’t for you pesky kids: <em>[You’re fired—Ed.]</em></p>
<blockquote><p><em>I’m always curious how such a seemingly backwards country can have such advanced cyber security skills.</em></p></blockquote>
<p><strong>Yeah, right.</strong> <i><a target="_blank" href="https://it.slashdot.org/comments.pl?sid=18123256&amp;cid=60994056" rel="nofollow ugc noopener" title="read the full text">Brian Bixby</a></i> agrees:</p>
<blockquote><p><em>I&#8217;m still surprised that the &#8220;North Korean Super-Hacker&#8221; foolishness is still a thing. They have a single … fiber line that goes through the Great Firewall of China (until a few years ago it was a paired T-3 to Taiwan that frequently was congested by Kim&#8217;s porn habit.)</p>
<p>IIRC there&#8217;s one small data center in the entire country with obsolete cast-off Chinese servers. … They don&#8217;t have the capability to hire any decent instructors for their tiny educated class to teach them hacking.</p>
<p>And yet we&#8217;re supposed to tremble in our boots that the North Korean Super-Hackers are coming to get us. Seems far more likely some criminals in China or Hong Kong are spoofing NK addresses.</p>
<p></em></p></blockquote>
<p><strong>Meanwhile,</strong> <i><a target="_blank" href="https://arstechnica.com/information-technology/2021/01/north-korea-hackers-use-social-media-to-target-security-researchers/?comments=1&amp;post=39609232#comment-39609232" rel="nofollow ugc noopener" title="read the full text">QuantifiableQuoll</a></i> has this warning for us all:</p>
<blockquote><p><em>The blog was also linked to on various security subreddits. If you’re the type of person who frequents those subreddits, you will want to check your computer over.</em></p></blockquote>
<h3>The moral of the story?</h3>
<p>Social engineering isn’t only for normies. Whether you’re an IT puke, an agile Dev(Sec)Ops sprinter, or a 1337 haxor: <em>Question everything</em>.</p>
<h3>And finally</h3>
<p><strong><a target="_blank" href="https://www.youtube.com/watch?v=HSfG4UtiGBQ&amp;list=PL9zSC5i495YMjIuJjxToNGU8Ve7Gd5Rvj" rel="noopener nofollow" title="And Finally">Can we all agree? That’s enough sea shanties.</a></strong></p>
<p><iframe title="The Wellerman (metal cover by Leo Moracchioli)" width="800" height="450" src="https://www.youtube.com/embed/HSfG4UtiGBQ?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></p>
<p><a target="_blank" href="https://www.youtube.com/playlist?list=PL9zSC5i495YMjIuJjxToNGU8Ve7Gd5Rvj" rel="noopener nofollow">Previously in “And finally”</a></p>
<p><em>You have been reading <a target="_blank" href="https://techbeacon.com/contributors/richi-jennings" rel="noopener"><i>Security Blogwatch</i></a> by <a target="_blank" href="http://richi.uk" rel="noopener nofollow">Richi Jennings</a>. Richi curates the best bloggy bits, finest forums, and weirdest websites … so you don’t have to. Hate mail may be directed to <a target="_blank" href="https://twitter.com/richi" rel="noopener nofollow">@RiCHi</a> or <a target="_blank" href="https://techbeacon.com/mailto:sbw@richi.co.uk?subject=-sbw-" rel="noopener">sbw@richi.uk</a>. Ask your doctor before reading. Your mileage may vary. E&amp;OE. 30.</em></p>
<p><em>This week’s zomgsauce: <a target="_blank" href="https://unsplash.com/photos/0G7aFO4R6zA" rel="noopener nofollow">Micha Brändli</a> (via <a target="_blank" href="https://unsplash.com/license" rel="noopener nofollow" title="Some rights reserved">Unsplash</a>)</em></p>
<h4>Keep learning</h4>
</div>
<p><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script><br />
<br /><br />
<br /><a href="https://techbeacon.com/security/apt-team-attacks-white-hats-google-fingers-north-korea">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Utah Ponders Making Online ‘Catfishing’ a Crime</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/utah-ponders-making-online-catfishing-a-crime/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Thu, 28 Jan 2021 18:01:24 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Catfishing]]></category>
		<category><![CDATA[Crime]]></category>
		<category><![CDATA[Making]]></category>
		<category><![CDATA[Online]]></category>
		<category><![CDATA[Ponders]]></category>
		<category><![CDATA[Utah]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/utah-ponders-making-online-catfishing-a-crime/</guid>

					<description><![CDATA[Pretending to be someone else online could become a criminal offense, setting a precedent for other states to follow. Source]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />Pretending to be someone else online could become a criminal offense, setting a precedent for other states to follow.<br />
<br /><br />
<br /><a href="https://threatpost.com/utah-ponders-making-online-catfishing-a-crime/163456/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>10 Easy Ways to Build Up Your Family’s Online Security</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/10-easy-ways-to-build-up-your-familys-online-security/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Thu, 28 Jan 2021 17:44:58 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[build]]></category>
		<category><![CDATA[Easy]]></category>
		<category><![CDATA[Familys]]></category>
		<category><![CDATA[Online]]></category>
		<category><![CDATA[ways]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/10-easy-ways-to-build-up-your-familys-online-security/</guid>

					<description><![CDATA[10 Easy Ways to Build Up Your Family’s Online Security The events of 2020 didn’t just set significant lifestyle changes]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<div class="container medium">
<div class="author-block padding-bottom-xs">
                
            </div>
<h2><strong>10 Easy Ways to Build Up Your Family’s Online Security </strong></h2>
<p>The events of 2020 didn’t just set significant lifestyle changes in motion. According to a recent study, it also influenced our mindset about our online security.</p>
<p>McAfee’s <a target="_blank" href="https://www.mcafee.com/blogs/consumer/consumer-threat-notices/new-year-new-digital-you-consumer-security-findings-from-mcafees-latest-report/?hilite=%272021%27%2C%27Consumer%27%2C%27Security%27%2C%27Mindset%27%2C%27Report%27" rel="noopener"><em>2021 Consumer Security Mindset Report</em></a> highlights our collective shift to a Digital-First mindset and the increased risks that come with it.</p>
<p>This study is essential to families for several reasons. First, because it gives us a snapshot of reality, and when we understand reality, we can take steps to improve it. Second, it’s a reminder to us as parents that helping our kids build their digital skills is a process subject to cultural shifts that will require continuous recalibration.</p>
<h3><strong>Our Reality</strong></h3>
<p>In short, the study reveals that we’re online more and, for convenience’s sake, we’re taking more chances with our security. In step with this increase in digital activity, online scams are on the rise. And, while most of us admit to being worried about our online security and, many still don’t have the digital habits they need to protect themselves.</p>
<p>How do we respond to this new and seemingly ongoing reality? We can say we need better cyber safety skills, or we can implement them.</p>
<p>To help you do just that, here are ten easy peasy steps your family can take today to strengthen the protective circle around your digital life. Note: You don’t have to be tech savvy to do these things. They are easy, effective ways to build up your family’s digital defenses. Here we go!</p>
<h3><strong>10 Ways to Boost Digital Security</strong></h3>
<ol>
<li><strong>Stay on top of scams.</strong> Phishing scams are at an all-time high. Discuss the precautions with kids — don’t open strange emails, click random downloads, connect with strangers online, or purchase from sketchy sources or websites.</li>
<li><strong>Zip it online.</strong> Oversharing personal information online is low-hanging fruit for hackers. They can piece together details in surprising ways to steal your identity — or worse. Encourage kids to keep private information and keep real names, city, address, school name, extracurricular activities, and pet names under wraps online.</li>
<li><strong>Create a family challenge.</strong> Find and fix your family’s security gaps. Inventory your technology, including IoT devices, smartphones, game systems, tablets, and toys. Rank device security 1-10 based on security best practices (see #8). Create an official 30-Day Family Security Challenge. Make it fun. Sit and change passwords together, review privacy settings, reduce friend lists. Come up with a reward system that tallies and recognizes each positive security step.</li>
<li><strong>Layer up your protection.</strong> Use multi-factor authentication to double-check digital users’ authenticity and add a layer of security to protect personal data and information.</li>
<li><strong>Connect with caution.</strong> If you must conduct transactions on a public Wi-Fi connection, use a virtual private network (VPN) like <a target="_blank" href="https://www.mcafee.com/en-us/vpn/mcafee-safe-connect.html" rel="noopener noreferrer">McAfee® Safe Connect</a> to help keep you safe while you’re online.</li>
<li><strong>Follow safe browsing habits.</strong> Browse with added security using a tool like <a target="_blank" href="https://cts.businesswire.com/ct/CT?id=smartlink&amp;url=https%3A%2F%2Fwww.mcafee.com%2Fen-us%2Fsafe-browser%2Fmcafee-webadvisor.html&amp;esheet=52327479&amp;newsitemid=20201116005169&amp;lan=en-US&amp;anchor=McAfee+WebAdvisor&amp;index=4&amp;md5=8668579d23bb59fdc7922b40838909e8" rel="noopener noreferrer">McAfee WebAdvisor</a> to block malware and phishing sites if you click on a malicious link. In addition to checking web sites, put your browser in private or incognito mode to reduce some tracking and auto-filling.</li>
<li><strong>Lock up your identity.</strong>  Protect your identity and important personal information using <a target="_blank" href="https://cts.businesswire.com/ct/CT?id=smartlink&amp;url=https%3A%2F%2Fwww.mcafee.com%2Fconsumer%2Fen-us%2Fmicrosite%2Fidentity-protection%2Foverview.html%3Fculture%3DEN-US%26cid%3D210317%26pir%3D1&amp;esheet=52327479&amp;newsitemid=20201116005169&amp;lan=en-US&amp;anchor=McAfee+Identity+Theft+Protection&amp;index=5&amp;md5=f65807f6a1b2c615b42b20557072b316" rel="noopener noreferrer">McAfee Identity Theft Protection</a>, which also helps you recover your information if your identity is compromised.</li>
<li><strong>Take control of your digital footprint.</strong> Limit information online by <strong>a)</strong> setting social media profiles to private <strong>b)</strong> regularly editing friends lists, <strong>c)</strong> deleting personal information on social profiles, <strong>d) </strong>limiting app permissions someone and browser extensions</li>
<li><strong>Purge old, unused apps and data</strong>. To strengthen security, regularly delete old data, photos, apps, emails, and unused accounts.</li>
<li><strong>Update devices asap</strong>. Those updates you’re putting off? They may be annoying but most of them are security-related, so it’s wise to install them as they come out.</li>
</ol>
<h3><strong>Stay Updated  </strong></h3>
<p>To stay updated on all things <a target="_blank" href="https://www.mcafee.com/en-us/index.html" rel="noopener">McAfee</a> and on top of the latest consumer and mobile security threats, follow <a target="_blank" href="https://twitter.com/McAfee_Home" rel="noopener">@McAfee_Home </a> on Twitter, listen to our podcast <a target="_blank" href="https://geo.itunes.apple.com/podcast/us/id1257232208?mt=2&amp;at=1010lbVy&amp;ct=mcafeehackable_GaryBlog_EndBlurb" rel="noopener">Hackable?</a>, and ‘Like’ us on <a target="_blank" href="https://www.facebook.com/McAfee" rel="noopener">Facebook.</a></p>
</p></div>
</p></div>
<p><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script><script>
  !function(f,b,e,v,n,t,s)
  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  s.parentNode.insertBefore(t,s)}(window, document,'script',
  'https://connect.facebook.net/en_US/fbevents.js');
  fbq('init', '187610925152304');
  fbq('track', 'PageView');
</script><script>
// load Facebook
!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;
t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,
document,'script','https://connect.facebook.net/en_US/fbevents.js');
fbq('init', '766537420057144');
fbq('track', "PageView");</p>
<p>//document.write('x3Cnoscript>x3Cimg height="1" width="1" style="display:none" src="https://www.facebook.com/tr?id=766537420057144&ev=PageView&noscript=1" />x3C/noscript>');
</script><br />
<br /><br />
<br /><a href="https://www.mcafee.com/blogs/consumer/family-safety/10-easy-ways-to-build-up-your-familys-online-security/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
