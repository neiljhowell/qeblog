<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>QE Blog</title>
	<atom:link href="http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/feed/" rel="self" type="application/rss+xml" />
	<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io</link>
	<description>Where we share news, resources, and latest trends in testing</description>
	<lastBuildDate>Mon, 29 Jun 2020 04:38:22 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.4.2</generator>

<image>
	<url>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/wp-content/uploads/2020/03/cropped-Robot-icon-32x32.jpg</url>
	<title>QE Blog</title>
	<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Design Patterns in Test Automation</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/design-patterns-in-test-automation/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Mon, 29 Jun 2020 04:38:22 +0000</pubDate>
				<category><![CDATA[Automation]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[Patterns]]></category>
		<category><![CDATA[Test]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/design-patterns-in-test-automation/</guid>

					<description><![CDATA[This article highlights the design patterns &#38; architectural considerations to take into account when building a Selenium-based / Appium-based Test]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<p>This article highlights the design patterns &amp; architectural considerations to take into account when building a <a target="_blank" href="https://www.selenium.dev/" rel="noopener noreferrer">Selenium</a>-based / <a target="_blank" href="http://appium.io/" rel="noopener noreferrer">Appium</a>-based Test Automation Framework. The examples are purposely shown in various programming languages to highlight that this thought process is applicable for any programming language you use for building an Automation Framework.</p>
<h2><strong>Table of Contents – Design Patterns in Test Automation</strong></h2>
<ol>
<li><a target="_blank" href="https://blog.testproject.io/#selenium-webdriver" rel="noopener noreferrer">Selenium WebDriver 101</a></li>
<li><a target="_blank" href="https://blog.testproject.io/#why-test-automation-framework" rel="noopener noreferrer">Why do we need a Test Automation Framework?</a></li>
<li><a target="_blank" href="https://blog.testproject.io/#test-automation-criteria" rel="noopener noreferrer">Criteria for building a Test Automation Framework</a></li>
<li><a target="_blank" href="https://blog.testproject.io/#test-automation-design-patterns" rel="noopener noreferrer">Design Patterns in Test Automation Framework</a></li>
<li><a target="_blank" href="https://blog.testproject.io/#page-object-pattern" rel="noopener noreferrer">Characteristics of a good Page-Object Pattern implementation</a></li>
<li><a target="_blank" href="https://blog.testproject.io/#page-object-pattern-challenges" rel="noopener noreferrer">Challenges of using Page-Object Pattern</a></li>
<li><a target="_blank" href="https://blog.testproject.io/#business-layer-page-object" rel="noopener noreferrer">Solution: Business-Layer Page-Object Pattern</a></li>
<li><a target="_blank" href="https://blog.testproject.io/#test-automation-architecture" rel="noopener noreferrer">Test Automation Framework Architecture</a></li>
</ol>
<hr/>
<h2><strong><a target="_blank" id="selenium-webdriver" rel="noopener noreferrer">Selenium WebDriver 101</strong></h2>
<p>Let’s start by quickly understanding what WebDriver is.</p>
<p>Selenium is one of the most popular web-automation tools. Surprisingly, a lot of people actually get confused about what Selenium really is.</p>
<p>Here is the official version of what Selenium is: <a target="_blank" href="https://www.selenium.dev/documentation/en/" rel="noopener noreferrer">https://www.selenium.dev/documentation/en/</a></p>
<p><a target="_blank" href="https://www.selenium.dev/documentation/en/webdriver/" rel="noopener noreferrer">WebDriver</a><i> is the </i>core of Selenium. It is an interface that uses browser automation APIs provided by browser vendors to simulate user behaviour and interaction by controlling the browser in the form of running tests.</p>
<p>WebDriver drives a browser either locally or on a remote machine using the Selenium server. Selenium WebDriver refers to both the language bindings and the implementations of the individual browser controlling code. This is commonly referred to as just <i>WebDriver</i>.</p>
<p><a target="_blank" href="https://www.selenium.dev/documentation/en/" rel="noopener noreferrer">The Selenium Browser Automation Project</a> also lists a quick example of how to quickly get started with using WebDriver.</p>
<p>Below is another example of how this code can look like:</p>
<pre class="EnlighterJSRAW">var webdriver = require('selenium-webdriver'),
    test = require('selenium-webdriver/testing'),
    assert = require('assert');

test.describe("Google Search", function() {

    test.it("should take user input correctly", function() {

        var driver = new webdriver.Builder().
            withCapabilities(webdriver.Capabilities.chrome()).build();
        driver.manage().timeouts().implicitlyWait(1000);

        driver.get("http://localhost:8082/community-app");
        var element = driver.findElement(webdriver.By.id("uid"));
        element.sendKeys("mifos");
        var value = element.getAttribute("value");
        value.then(function(value) {
            assert.equal(value, "mifos");
        });

    });

});
</pre>
<hr/>
<h2><strong><a target="_blank" id="why-test-automation-framework" rel="noopener noreferrer">Why do we need a Test Automation Framework?</strong></h2>
<p>As seen in the above example, it is easy to get started using WebDriver to simulate user behavior.</p>
<p>However, typically, one uses WebDriver to automate many different user scenarios / interactions in order to get quick validation if the functionality in the product-under-test is working correctly, as expected. Some of these products may have a small-life, however, most of these would be around for a long time.</p>
<p>As a result, the team testing this product would have a lot of user scenarios that they would want to be automated. I have seen cases where the team has 1000s of tests identified and automated for their product-under-test.</p>
<p>In such cases, continuing to implement tests in similar ways as shown in the simple, getting-started example will quickly turn into a nightmare for various reasons of code quality, maintainability, extensibility and scalability.</p>
<p>You may set up some structure for your tests, and build some sort of a framework, but that will still be limiting as you scale.</p>
<p></p>
<p><noscript><img class="alignnone wp-image-12711 size-full" title="Test implementation in Ruby" src="https://blog.testproject.io/wp-content/uploads/2020/05/SomeStructure.png" alt="Test implementation in Ruby" width="379" height="88"/></noscript></p>
<p>In the above example, of test implementation in Ruby, the home_page.rb file ended up being 1000+ line long, which made it very difficult to quickly understand what this class ended up doing, and what functionality was implemented here.</p>
<p>The architecture of such a framework looks as simple as this, which could also be referred to as non-existent:</p>
<p><img loading="lazy" class="alignnone wp-image-12714 size-full" alt="No Design Patterns Used" width="1600" height="900" srcset="https://blog.testproject.io/wp-content/uploads/2020/05/NoDesignPatternsUsed.jpeg 1600w, https://blog.testproject.io/wp-content/uploads/2020/05/NoDesignPatternsUsed-512x288.jpeg 512w, https://blog.testproject.io/wp-content/uploads/2020/05/NoDesignPatternsUsed-768x432.jpeg 768w, https://blog.testproject.io/wp-content/uploads/2020/05/NoDesignPatternsUsed-1024x576.jpeg 1024w" data-lazy-sizes="(max-width: 1600px) 100vw, 1600px" src="https://blog.testproject.io/wp-content/uploads/2020/05/NoDesignPatternsUsed.jpeg"/></p>
<p><noscript><img class="alignnone wp-image-12714 size-full" src="https://blog.testproject.io/wp-content/uploads/2020/05/NoDesignPatternsUsed.jpeg" alt="No Design Patterns Used" width="1600" height="900" srcset="https://blog.testproject.io/wp-content/uploads/2020/05/NoDesignPatternsUsed.jpeg 1600w, https://blog.testproject.io/wp-content/uploads/2020/05/NoDesignPatternsUsed-512x288.jpeg 512w, https://blog.testproject.io/wp-content/uploads/2020/05/NoDesignPatternsUsed-768x432.jpeg 768w, https://blog.testproject.io/wp-content/uploads/2020/05/NoDesignPatternsUsed-1024x576.jpeg 1024w" sizes="(max-width: 1600px) 100vw, 1600px"/></noscript></p>
<p><strong><img src="https://s.w.org/images/core/emoji/12.0.0-1/72x72/2757.png" alt="❗" class="wp-smiley" style="height: 1em; max-height: 1em;" /> </strong><em><strong>We need a better, and structured approach to implementing the test scenarios!</strong></em></p>
<hr/>
<h2><strong><a target="_blank" id="test-automation-criteria" rel="noopener noreferrer">Criteria for building a Test Automation Framework</strong></h2>
<p>Writing code is easy, but writing good code is not as easy. Here are the reasons why I say this:</p>
<ul>
<li>“Good” is subjective.</li>
<li>“Good” depends on the context &amp; overall objective.</li>
</ul>
<p>Similarly, implementing <a target="_blank" href="https://blog.testproject.io/2019/03/07/what-test-cases-should-you-automate/" rel="noopener noreferrer">automated test cases</a> is easy (as seen from the getting started example shared earlier). However, scaling this up to be able to implement and run a huge number of tests quickly and efficiently, against an evolving product is not easy!</p>
<p>I refer to a few principles when building a Test Automation Framework. They are:</p>
<ul>
<li>Based on the context &amp; (current + upcoming) functionality of your product-under-test, define the overall objective of <a target="_blank" href="https://blog.testproject.io/2020/03/26/automation-testing-for-beginners-ultimate-guide/" rel="noopener noreferrer">Automation Testing</a>.</li>
<li>Based on the objective defined above, determine the criteria and requirements from your Test Automation Framework. Refer to my post on “<a target="_blank" href="https://www.infoq.com/articles/test-automation-ai-ml/" rel="noopener noreferrer">Test Automation in the World of AI &amp; ML</a>” for details on various aspects you need to consider to build a robust Test Automation Framework. Also, you might find these articles interesting to learn how to select the best tool for your requirements:</li>
</ul>
<h2><strong><a target="_blank" id="test-automation-design-patterns" rel="noopener noreferrer">Design Patterns in Test Automation Framework</strong></h2>
<p>Test Automation (using tools like Selenium / Appium) are essentially development activities. One needs to have good programming knowledge to be able to do implement tests that are robust, stable, efficient, fast, maintainable and extensible!</p>
<p>There are many Design Patterns available for Software Development (as seen <a target="_blank" href="https://en.wikipedia.org/wiki/Software_design_pattern" rel="noopener noreferrer">here</a>). Since Test Automation is also a Development activity – The understanding of Design Patterns is critical in Test Automation as well.</p>
<p>Below are some commonly used Design Patterns one would use, directly or indirectly, in building a Test Automation Framework:</p>
<h2><strong><a target="_blank" id="page-object-pattern" rel="noopener noreferrer">Characteristics of a good Page-Object Pattern Implementation</strong></h2>
<p>A good page-object pattern implementation would have the following characteristics:</p>
<ul>
<li>Pages are well identified.</li>
<li>Use <a target="_blank" href="https://en.wikipedia.org/wiki/Composite_pattern" rel="noopener noreferrer">Composite Pattern</a> to compose complex pages and also allow reuse of snippets of pages across the product.
<ul>
<li>Ex: If Search functionality is common across majority of the pages in your product, then:
<ul>
<li>Define a SearchPage object.</li>
<li>In other pages, ex: HomePage, LoginPage, ProductPage, etc, use the Composition Pattern to include SearchPage as part of its definition.</li>
<li>Example:</li>
<li><img loading="lazy" class="alignnone wp-image-12715 size-full" title="Composite Pattern" alt="Composite Pattern" width="390" height="403" src="https://blog.testproject.io/wp-content/uploads/2020/05/GoodPageObjects.png"/><noscript><img class="alignnone wp-image-12715 size-full" title="Composite Pattern" src="https://blog.testproject.io/wp-content/uploads/2020/05/GoodPageObjects.png" alt="Composite Pattern" width="390" height="403"/></noscript></li>
</ul>
</li>
</ul>
</li>
<li>Pages do not have any assertions in them.</li>
<li>Pages do not have getters-setters in the pages (or in any class in your code). This is a bad practice and it breaks <a target="_blank" href="https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)" rel="noopener noreferrer">Encapsulation</a>.</li>
<li>Pages should have logical methods that do action on the page, or gets information from the page.</li>
<li>Pages should have no business logic in the Page-Object method implementation, except handling cases like:
<ul>
<li>If ex: there are Country &amp; State dropdown controls on the page, and the State values get populated based on which Country is selected, then the method selecting the Country should wait for the items in the State dropdown to get populated.</li>
</ul>
</li>
<li>Each Page object should have an explicit return type, i.e. the Page object method SHOULD NOT return void.
<ul>
<li>Ex: On successful login, the method should return the HomePage object.</li>
<li>On unsuccessful login, the method should return the same LoginPage object.</li>
<li>There would be cases when you are getting information from the page itself. In such cases, the methods should return specific datatypes.
<ul>
<li>Ex: isLoggedIn should return boolean.</li>
<li>Ex: getLoggedInUserName should return String.</li>
<li>Ex: getRegisteredAddressInProfile should return a custom object Address, or any other data structure that makes sense in the context of the product-under-test.</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>The architecture of such a framework evolves as below:</p>
<p><img loading="lazy" class="alignnone wp-image-12713 size-full" title="Good Page-Object Pattern Implementation" alt="Good Page-Object Pattern Implementation" width="1600" height="900" srcset="https://blog.testproject.io/wp-content/uploads/2020/05/PageObjectPattern.jpeg 1600w, https://blog.testproject.io/wp-content/uploads/2020/05/PageObjectPattern-512x288.jpeg 512w, https://blog.testproject.io/wp-content/uploads/2020/05/PageObjectPattern-768x432.jpeg 768w, https://blog.testproject.io/wp-content/uploads/2020/05/PageObjectPattern-1024x576.jpeg 1024w" data-lazy-sizes="(max-width: 1600px) 100vw, 1600px" src="https://blog.testproject.io/wp-content/uploads/2020/05/PageObjectPattern.jpeg"/></p>
<p><noscript><img class="alignnone wp-image-12713 size-full" title="Good Page-Object Pattern Implementation" src="https://blog.testproject.io/wp-content/uploads/2020/05/PageObjectPattern.jpeg" alt="Good Page-Object Pattern Implementation" width="1600" height="900" srcset="https://blog.testproject.io/wp-content/uploads/2020/05/PageObjectPattern.jpeg 1600w, https://blog.testproject.io/wp-content/uploads/2020/05/PageObjectPattern-512x288.jpeg 512w, https://blog.testproject.io/wp-content/uploads/2020/05/PageObjectPattern-768x432.jpeg 768w, https://blog.testproject.io/wp-content/uploads/2020/05/PageObjectPattern-1024x576.jpeg 1024w" sizes="(max-width: 1600px) 100vw, 1600px"/></noscript></p>
<h2><strong><a target="_blank" id="page-object-pattern-challenges" rel="noopener noreferrer">Challenges of using Page-Object Pattern</strong></h2>
<p>Page Objects help implement tests easily, and keep the code well structured. This allows easy updates in the Page Objects based on evolving product functionality.</p>
<p>However, there is a challenge.</p>
<p>In the Test implementation methods, ex: if you are using <a target="_blank" href="https://blog.testproject.io/2019/02/26/junit-5/" rel="noopener noreferrer">JUnit</a> / <a target="_blank" href="https://blog.testproject.io/2019/10/31/the-power-of-testng-test-next-generation/" rel="noopener noreferrer">TestNG</a> as the test runner, then in the @Test methods, you now need to orchestrate the Page object interactions and also add your assertions.</p>
<p>Below is an example of 2 tests:</p>
<h3><strong>Test 1:</strong></h3>
<pre class="EnlighterJSRAW" data-enlighter-language="null">@Test
public void shouldRevertToOriginalContentAfterClickingCancel() {

    PatientInformation patientInfomation = new PatientInformation(firstName, middleName, lastName, gender);
    RegistrationPage registrationPage = new RegistrationPage();
    PatientChartPage patientChartPage = registrationPage.registerPatientWithBasicInformation(patientInfomation);

    String originalFirstName = patientChartPage.getFirstName(); 
    assertThat(originalFirstName, is(firstName)); 

    patientChartPage.updateName(newFirstName, newLastName);
    patientChartPage.updateAddressLine(newLine1, newLine2);
    patientChartPage.updateCity(newCity);
    patientChartPage.updateState(newState);
    patientChartPage.updateZip(newZip);
    patientChartPage.cancelUpdate();

    String updatedFirstName = patientChartPage.getFirstName();
    assertThat(updatedFirstName, is(originalFirstName));
}</pre>
<pre/><h3><strong>Test 2:</strong></h3><pre class="EnlighterJSRAW" data-enlighter-language="null">@Test
public void shouldUpdateExistingPatientWithNewInformationAfterClickingSave() throws InterruptedException {

    PatientInformation expectedPatientInformation = new PatientInformation(firstName, middleName, lastName, gender);
    RegistrationPage registrationPage = new RegistrationPage();

    registrationPage.registerPatientWithBasicInformation(expectedPatientInformation);

    String originalFirstName = patientChartPage.getFirstName(); 
    assertThat(originalFirstName, is(firstName)); 
    
    patientChartPage.updateName(newFirstName, newLastName);
    patientChartPage.updateAddressLine(newLine1, newLine2);
    patientChartPage.updateCity(newCity);
    patientChartPage.updateState(newState);
    patientChartPage.updateZip(newZip);
    patientChartPage.saveUpdate();

    Driver.get().navigate().refresh();

    assertThat(patientChartPage.getFirstName(), is(newFirstName));
    assertThat(patientChartPage.getLastName()), is(newLastName));
    assertThat(patientChartPage.getCity(), is(newCity));
    assertThat(patientChartPage.getState(), is(newState));
    assertThat(patientChartPage.getAddressLine1()), is(newLine1));
    assertThat(patientChartPage.getAddressLine2()), is(newLine2));
    assertThat(patientChartPage.getZip()), is(newZip));
}</pre>
<pre/><p>Here are the challenges of this implementation:</p><ul><li>The intent of the test is lost in the details of the interaction of page objects and assertions.</li><li>The @Test methods become quite unreadable.</li><li>There is a lot of duplication in both the test implementations.</li></ul><p>As you implement more variants of test scenarios, you will encounter there would be many instances of test implementations needing slight tweaks to the implemented test to verify variants of the scenarios. In such cases, you would end up copying most of the implementation from 1 test into the others – which is wasted effort, code duplication and makes it difficult to update the tests as the product functionality evolves.</p><p>In some cases, you may be able to extract common methods in the same class to reuse the implementation, but that seems like an ad-hoc way of implementation.</p><p>That is the reason I do not like to use the Page Object Pattern directly in my Test implementation for larger implementations.</p><hr/><h2><strong><a target="_blank" id="business-layer-page-object" rel="noopener noreferrer">Solution: Business-Layer Page-Object Pattern</strong></h2><p>It is very important to have the Test specification be crisp and clear. This way the intent of the test is understood very easily and the reader knows exactly what is expected from the product-under-test as a result of running that particular test.</p><p>This is the area the Business-Layer Page-Object Pattern helps. Below is how the implementation flow is using this pattern:</p><ol><li>Tests should talk business language only! No granular operations / UI interactions.</li><li>The Test implementation is an orchestration of corresponding business operations as it is simulating a deterministic, specific scenario.</li><li>Business operations are implemented in a layer between the tests &amp; page objects – called BusinessLayer. This allows for better reuse of implementation.</li><li>Implementation of an business operation is an orchestration between other business operations, and / or an orchestration of page objects.</li><li>The business operation does the assertions of expectations, NOT page-objects.</li><li>Each business operation / page object has a valid return type (never void). Each operation (in business or page object) being successful means there are a defined number of methods / operations the product can now do (as you are driving the product under test to do your bidding).</li></ol><p>Let’s look at some examples of how this can be implemented.</p><h2><strong><a target="_blank" id="test-automation-architecture" rel="noopener noreferrer">Test Automation Framework Architecture</strong></h2><p>The overall architecture of the Test Automation Framework that allows me to implement, evolve and scale in an easy fashion is shown below:</p><p><img loading="lazy" class="alignnone wp-image-12712 size-full" title="Business-Layer Page-Object Pattern" alt="Business-Layer Page-Object Pattern" width="1600" height="900" srcset="https://blog.testproject.io/wp-content/uploads/2020/05/BusinessLayer-PageObjectPattern.jpeg 1600w, https://blog.testproject.io/wp-content/uploads/2020/05/BusinessLayer-PageObjectPattern-512x288.jpeg 512w, https://blog.testproject.io/wp-content/uploads/2020/05/BusinessLayer-PageObjectPattern-768x432.jpeg 768w, https://blog.testproject.io/wp-content/uploads/2020/05/BusinessLayer-PageObjectPattern-1024x576.jpeg 1024w" data-lazy-sizes="(max-width: 1600px) 100vw, 1600px" src="https://blog.testproject.io/wp-content/uploads/2020/05/BusinessLayer-PageObjectPattern.jpeg"/></p><noscript><img class="alignnone wp-image-12712 size-full" title="Business-Layer Page-Object Pattern" src="https://blog.testproject.io/wp-content/uploads/2020/05/BusinessLayer-PageObjectPattern.jpeg" alt="Business-Layer Page-Object Pattern" width="1600" height="900" srcset="https://blog.testproject.io/wp-content/uploads/2020/05/BusinessLayer-PageObjectPattern.jpeg 1600w, https://blog.testproject.io/wp-content/uploads/2020/05/BusinessLayer-PageObjectPattern-512x288.jpeg 512w, https://blog.testproject.io/wp-content/uploads/2020/05/BusinessLayer-PageObjectPattern-768x432.jpeg 768w, https://blog.testproject.io/wp-content/uploads/2020/05/BusinessLayer-PageObjectPattern-1024x576.jpeg 1024w" sizes="(max-width: 1600px) 100vw, 1600px"/></noscript><p>Below is my folder structure for my Test Automation Framework:</p><p><img loading="lazy" class="alignnone wp-image-12716 size-full" title="Test Automation Framework Structure" alt="Test Automation Framework Structure" width="440" height="740" srcset="https://blog.testproject.io/wp-content/uploads/2020/05/GoodStructure.png 440w, https://blog.testproject.io/wp-content/uploads/2020/05/GoodStructure-304x512.png 304w" data-lazy-sizes="(max-width: 440px) 100vw, 440px" src="https://blog.testproject.io/wp-content/uploads/2020/05/GoodStructure.png"/></p><noscript><img class="alignnone wp-image-12716 size-full" title="Test Automation Framework Structure" src="https://blog.testproject.io/wp-content/uploads/2020/05/GoodStructure.png" alt="Test Automation Framework Structure" width="440" height="740" srcset="https://blog.testproject.io/wp-content/uploads/2020/05/GoodStructure.png 440w, https://blog.testproject.io/wp-content/uploads/2020/05/GoodStructure-304x512.png 304w" sizes="(max-width: 440px) 100vw, 440px"/></noscript><p>Here is the Test method – clearly highlighting the intent of the test:</p><pre class="EnlighterJSRAW" data-enlighter-language="null">@Test(groups = {"a-addcash", "a-demo2", "a-RcRegression"})
public void RepeatDepositAddCashTest() {
    log.info("Running RepeatDepositAddCashTest");
    PlayerUtil playerUtil = new PlayerUtil(getTestExecutionContext());
    HashMap&lt;RegistrationDetails, String&gt; userData = playerUtil.getUserWithModValue(7, 4);
    String userName = userData.get(RegistrationDetails.USERNAME);
    String password = userData.get(RegistrationDetails.PASSWORD);
    playerUtil.saveAddressDetailsOfUser(userName, password);
    new LoginBL().loginUsing(userName, password)
            .startAddcash()
            .addCashUsingNetBanking(100, "Allahabad", "test", "test")
            .verifyOrderID()
            .verifyModeOfPayment("NETBANKING")
            .verifyGamesLobbyLink()
            .done();
}
</pre>
<p>Here are some sample Business Layer methods:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">public FeedbackOverlayBL verifyLoveThisAppThankYouPage() {
    return new FeedbackOverlayBL()
            .verifyLoveThisAppCTA()
            .verifyThankYouPageInLoveThisApp();
}

public LobbyBL goToFeedBackFormAndCancel() {
    return new FeedbackOverlayBL()
            .goToFeedbackForm().cancelFeedbackForm();
}

public AddCashLimitsBL addAmountForAddcashLimits(int amount) {
    ChooseAmountPage.getInstance()
            .addAmount(amount);
    return new AddCashLimitsBL();
}

public LobbyBL goToCashGames() {
    LobbyPage.getInstance().clickCashGamesButton();
    return this;
}</pre>
<p>Here are some sample Page-Object methods:</p>
<pre class="EnlighterJSRAW" data-enlighter-language="null">public PaymentModePage addAmount(int amount) {
    WebElement addCashEnterAmountElement = driver.findElementByAccessibilityId(addCashEnterAmount);
    waitForElementToBePresent(addCashEnterAmountElement);
    addCashEnterAmountElement.clear();
    addCashEnterAmountElement.sendKeys(String.valueOf(amount));
    hideKeyBoard();
    eyes.checkWindow("AddAmount");
    driver.findElementByAccessibilityId(addCash).click();
    return PaymentModePage.getInstance();
}

public boolean isPromoCodeApplySuccessful(String promoCode) {
    log.info("Verifying promocode is successfully applied with name: " + promoCode);
    waitForElementToBePresent(driver.findElementByAccessibilityId(appliedPromocodeNameId));
    eyes.checkWindow("isPromoCodeApplySuccessful");
    return driver.findElementByAccessibilityId(appliedPromocodeNameId).getText().equalsIgnoreCase(promoCode);
}</pre>
<hr/>
<p><strong>References</strong>:</p>
</div>
<p><br />
<br /><a href="https://blog.testproject.io/2020/06/29/design-patterns-in-test-automation/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>DarkCrewFriends Returns with Botnet Strategy</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/darkcrewfriends-returns-with-botnet-strategy/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 26 Jun 2020 20:53:18 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Botnet]]></category>
		<category><![CDATA[DarkCrewFriends]]></category>
		<category><![CDATA[Returns]]></category>
		<category><![CDATA[Strategy]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/darkcrewfriends-returns-with-botnet-strategy/</guid>

					<description><![CDATA[The botnet can be used to mount different kinds of attacks, including code-execution and DDoS. Source link]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />The botnet can be used to mount different kinds of attacks, including code-execution and DDoS.<br />
<br /><br />
<br /><a href="https://threatpost.com/darkcrewfriends-returns-botnet/156963/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Gatling FrontLine is now available in AZURE Marketplace! – Gatling Open-Source Load Testing</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/gatling-frontline-is-now-available-in-azure-marketplace-gatling-open-source-load-testing/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 26 Jun 2020 08:37:15 +0000</pubDate>
				<category><![CDATA[Performance]]></category>
		<category><![CDATA[AZURE]]></category>
		<category><![CDATA[Frontline]]></category>
		<category><![CDATA[Gatling]]></category>
		<category><![CDATA[Load]]></category>
		<category><![CDATA[Marketplace]]></category>
		<category><![CDATA[opensource]]></category>
		<category><![CDATA[testing]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/gatling-frontline-is-now-available-in-azure-marketplace-gatling-open-source-load-testing/</guid>

					<description><![CDATA[Gatling FrontLine, Gatling’s official Enterprise Version, is now available in Azure Marketplace Try it now! Until today, Gatling FrontLine was]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<p><span style="font-weight: 400;"><noscript><img class="wp-image-6903 aligncenter" src="https://gatling.io/wp-content/uploads/2020/04/1280px-Microsoft_Azure_Logo.svg-300x87.png" alt="Logo-Azure Marketplace" width="228" height="66" srcset="https://gatling.io/wp-content/uploads/2020/04/1280px-Microsoft_Azure_Logo.svg-300x87.png 300w, https://gatling.io/wp-content/uploads/2020/04/1280px-Microsoft_Azure_Logo.svg-768x222.png 768w, https://gatling.io/wp-content/uploads/2020/04/1280px-Microsoft_Azure_Logo.svg-1024x296.png 1024w, https://gatling.io/wp-content/uploads/2020/04/1280px-Microsoft_Azure_Logo.svg-500x145.png 500w, https://gatling.io/wp-content/uploads/2020/04/1280px-Microsoft_Azure_Logo.svg.png 1280w" sizes="(max-width: 228px) 100vw, 228px"/></noscript></span></p>
<p><span style="font-weight: 400;"><br /><strong>Gatling FrontLine</strong>, Gatling’s official Enterprise Version, is now available in <strong>Azure Marketplace</strong></span></p>
<p style="text-align: center;"><span style="font-weight: 400;"><a target="_blank" class="btn purple" href="https://azuremarketplace.microsoft.com/en-us/marketplace/apps/gatlingcorp.gatling-frontline?tab=Overview" rel="noopener noreferrer">Try it now!</a></span></p>
<p style="text-align: left;"><span style="font-weight: 400;"><br />Until today, Gatling FrontLine was available on-premises and on AWS Marketplace. Now, <strong>Azure customers</strong> can benefit from our <a target="_blank" href="https://gatling.io/gatling-frontline/cloud-marketplaces/" rel="noopener noreferrer">Enterprise Version</a> on an <strong>hourly basis</strong>.</span></p>
<p><span style="font-weight: 400;">Whenever you want to benefit from advanced features, purchase Gatling FrontLine on Azure Marketplace and run your Gatling tests!</span></p>
<p><span style="font-weight: 400;">Do you want to know more about it? Read </span><a target="_blank" href="https://gatling.io/gatling-frontline/product-sheet/" rel="noopener noreferrer"><span style="font-weight: 400;">our product sheet</span></a><span style="font-weight: 400;">!</span></p>
<h2><b>Any question or comment?</b></h2>
<p><span style="font-weight: 400;">Contact us and we will get back to you as fast as possible: <a target="_blank" href="https://gatling.io/mailto:contact@gatling.io" rel="noopener noreferrer">contact@gatling.io</a></span></p>
<p style="text-align: center;"><span style="font-weight: 400;"><a target="_blank" class="btn purple" href="https://gatling.io/gatling-frontline/cloud-marketplaces/azure/" rel="noopener noreferrer">More info</a></span></p>
<p> </p>
<p><strong>The Gatling Team</strong></p>
<p><img class="wp-image-6952 aligncenter" src="https://gatling.io/wp-content/uploads/2020/04/gatling-Frontline-Azure-300x54.jpg" alt="Gatling FrontLine - Azure Marketplace" width="761" height="137" srcset="https://gatling.io/wp-content/uploads/2020/04/gatling-Frontline-Azure-300x54.jpg 300w, https://gatling.io/wp-content/uploads/2020/04/gatling-Frontline-Azure-768x138.jpg 768w, https://gatling.io/wp-content/uploads/2020/04/gatling-Frontline-Azure-1024x185.jpg 1024w, https://gatling.io/wp-content/uploads/2020/04/gatling-Frontline-Azure-500x90.jpg 500w" data-lazy-sizes="(max-width: 761px) 100vw, 761px"/></p>
<p><noscript><img class="wp-image-6952 aligncenter" src="https://gatling.io/wp-content/uploads/2020/04/gatling-Frontline-Azure-300x54.jpg" alt="Gatling FrontLine - Azure Marketplace" width="761" height="137" srcset="https://gatling.io/wp-content/uploads/2020/04/gatling-Frontline-Azure-300x54.jpg 300w, https://gatling.io/wp-content/uploads/2020/04/gatling-Frontline-Azure-768x138.jpg 768w, https://gatling.io/wp-content/uploads/2020/04/gatling-Frontline-Azure-1024x185.jpg 1024w, https://gatling.io/wp-content/uploads/2020/04/gatling-Frontline-Azure-500x90.jpg 500w" sizes="(max-width: 761px) 100vw, 761px"/></noscript></div>
<p><br />
<br /><a href="https://gatling.io/2020/06/26/gatling-frontline-is-now-available-on-azure-marketplace/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Emerging Ransomware Targets Photos, Videos on Android Devices</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/emerging-ransomware-targets-photos-videos-on-android-devices/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Wed, 24 Jun 2020 21:21:53 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Android]]></category>
		<category><![CDATA[Devices]]></category>
		<category><![CDATA[Emerging]]></category>
		<category><![CDATA[Photos]]></category>
		<category><![CDATA[Ransomware]]></category>
		<category><![CDATA[Targets]]></category>
		<category><![CDATA[Videos]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/emerging-ransomware-targets-photos-videos-on-android-devices/</guid>

					<description><![CDATA[The CryCryptor malware strain is a brand-new family of threats, leveraging COVID-19 to spread. Source link]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />The CryCryptor malware strain is a brand-new family of threats, leveraging COVID-19 to spread.<br />
<br /><br />
<br /><a href="https://threatpost.com/emerging-ransomware-photos-videos-android/156893/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Virtual software development teams: 4 challenges to overcome</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/virtual-software-development-teams-4-challenges-to-overcome/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Wed, 24 Jun 2020 15:00:00 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[challenges]]></category>
		<category><![CDATA[development]]></category>
		<category><![CDATA[Overcome]]></category>
		<category><![CDATA[software]]></category>
		<category><![CDATA[Teams]]></category>
		<category><![CDATA[Virtual]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/virtual-software-development-teams-4-challenges-to-overcome/</guid>

					<description><![CDATA[The current public health crisis with COVID-19 has sent millions of software developers home. Software development teams that used to]]></description>
										<content:encoded><![CDATA[<p> <br />
<br /></p>
<div>
<p dir="ltr">The current public health crisis with COVID-19 has sent millions of software developers home. Software development teams that used to meet for daily standup meetings in conference rooms now find they <a target="_blank" href="https://techbeacon.com/enterprise-it/3-things-every-it-org-should-be-doing-get-ahead-pandemic" rel="noopener noreferrer">have been transformed into virtual teams</a> overnight.</p>
<p dir="ltr">In many companies, having teams distributed globally and working virtually is business as usual. Other dev teams are facing the challenges of adapting suddenly to a new work environment.</p>
<p dir="ltr">Research and experience have shown that <a target="_blank" href="https://techbeacon.com/app-dev-testing/how-run-design-sprint-virtual-teams" rel="noopener noreferrer">virtual teams in software development</a> face four major hurdles. Here they are, explained—along with solutions to help overcome them.</p>
<p><em>[ Learn best practices for <a target="_blank" href="https://content.microfocus.com/l/reduce-defects-software-tb?utm_source=techbeacon&amp;utm_medium=referral&amp;utm_campaign=00172440" rel="noopener noreferrer">reducing software defects </a><a target="_blank" href="https://content.microfocus.com/l/reduce-defects-software-tb?utm_source=techbeacon&amp;utm_medium=referral&amp;utm_campaign=00172440" rel="noopener noreferrer">with TechBeacon&#8217;s Guide</a>. Plus: Get the report <a target="_blank" href="https://content.microfocus.com/reduce-defects-software-tb/business-impact-production-defects?lx=HhQqWV&amp;utm_source=techbeacon&amp;utm_medium=referral&amp;utm_campaign=00172440" rel="noopener noreferrer">&#8220;Agile and DevOps Reduces Volume, Cost, and Impact of Production Defects&#8221;</a> ]</em></p>
<h3>Maintaining the company culture</h3>
<p dir="ltr">Company culture is an immersive experience. It&#8217;s something we take for granted. Generally, experience tells us what the culture will bear in terms of relationships to family, patterns of accountability, the ratio of work to play allowed in the workspace, etc.</p>
<p dir="ltr">Culture creates cohesion, impacts motivation, and regulates behaviors within an organization. Company culture also enables all contributors to interpret senior management dictates.</p>
<p dir="ltr">When people work from home, these familiar signposts begin to break down. It&#8217;s sometimes difficult, in a vacuum, to interpret management communications that appear quietly in the email inbox. Absent the omnipresence of the company culture, it becomes more difficult for team members to know how to interpret communications that come from afar.</p>
<h4>How to maintain culture</h4>
<p dir="ltr">Periodic meetings where senior managers from outside the team communicate directly with the dev team, using tools such as Zoom, help mitigate the risks to company culture when teams go virtual. They also give managers an opportunity to update the strategy.</p>
<p dir="ltr">Ideally these would be <a target="_blank" href="https://knowyourteam.com/blog/2019/10/03/skip-level-meetings-what-they-are-and-exactly-how-to-run-them/" rel="nofollow noopener noreferrer">skip-level meetings</a> where you, as a manager, meet one-on-one with the direct report of another manager, who in turn reports to you.</p>
<p dir="ltr">It also helps teams to have a strategy document, stored in the cloud, that is a single version of the truth. The strategy should be periodically updated and stored where it is accessible to the team. It should be reviewed (briefly) before each road map meeting and cited during company all-hands meetings.</p>
<p dir="ltr">The COVID-19 crisis discourages retreats or strategy workshops where everyone is invited. Although virtual retreats are difficult to pull off well, various organizations have tried them with success. They often mix in recreational activities along with sessions on culture and training on new systems.</p>
<p dir="ltr">Make the unconscious cues in the company culture conscious. Refer to them often and reinforce them. Company culture can follow your team members home, but only if it is made explicit and constantly reinforced.</p>
<p dir="ltr">Above all, calling out company culture at every opportunity helps enormously. Each and every corporate communication (announcements for new hires, departures, and reorganizations) provides great opportunities for reinforcing culture.</p>
<p dir="ltr"><a target="_blank" href="https://techbeacon.com/devops/how-increase-enterprise-collaboration-speed-your-devops-pipeline" rel="noopener noreferrer">Tools for maintaining culture</a> include in-house wikis, Google Docs, and twice-yearly retreats (including virtual).</p>
<h3>Keeping focused on the product vision</h3>
<p dir="ltr">The problem with losing track of the <a target="_blank" href="https://www.tcgen.com/product-development-strategy#spp-tool-5" rel="nofollow noopener noreferrer">product vision</a> is that the software dev team will lose cycles as it addresses the wrong problems. The greatest danger is time wasted in nonproductive work that does not tie to the product vision.</p>
<p dir="ltr">In the worst-case scenario, a team that <a target="_blank" href="https://techbeacon.com/app-dev-testing/projects-products-what-it-means-why-it-matters" rel="noopener noreferrer">loses sight of the product vision</a> can deliver the wrong solution at the end of a long and expensive dev cycle.</p>
<h4>How to maintain focus </h4>
<p>Hold monthly road map reviews, where alignment with the product vision and the app under development is discussed and updated. Look over the product road map and release trains, assess where you&#8217;ve been, where you’re planning to go, and what the next steps should be.</p>
<p>Again, having a simple, one-page product vision—representing a single, shared version of the truth—helps.</p>
<p dir="ltr">Another solution is to use <a target="_blank" href="https://www.tcgen.com/tools-from-book/boundary-conditions-diagram" rel="nofollow noopener noreferrer">boundary conditions</a>, a tool of exception management. In this methodology, the dev team and upper management agree on the minimum viable product (MVP). They then break it down to three to five parameters of the project—such as project cost, product cost, features, timing, and quality—and define quantitative metrics for each of these parameters.</p>
<p dir="ltr">Then the dev team does its work without interference from upper management, as long as it looks as if it will hit its quantitative targets.</p>
<p dir="ltr">If the project begins to go off course, then a lightweight <a target="_blank" href="https://www.tcgen.com/tools-from-book/out-of-bounds-check" rel="nofollow noopener noreferrer">escalation process</a> kicks in that helps the team get back on track. Having clear parameters to work toward helps keep the team focused, ultimately, on the original product vision.</p>
<p dir="ltr">Another way to face the challenge of losing track of the vision is to appoint a proxy <a target="_blank" href="https://techbeacon.com/app-dev-testing/how-agile-distinguishes-between-product-managers-product-owners" rel="noopener noreferrer">product owner/product manager</a> on your dev team. This person should work in the same time zone as the majority of the team, be empowered to answer questions as they arise, and shepherd the software project toward its goals.</p>
<p dir="ltr">Tools for managing the product vision include wikis, Google Docs, road maps, and others.</p>
<p><em>[ Understand what your team needs to know to <a target="_blank" href="https://content.microfocus.com//l/software-test-automation-tb?utm_source=techbeacon&amp;utm_medium=techbeacon&amp;utm_campaign=00134846" rel="noopener noreferrer">take advantage of test automation</a> with TechBeacon&#8217;s Guide. Plus: Get the <a target="_blank" href="https://content.microfocus.com/software-test-automation-tb/buyers-guide-software-test-automation?lx=wYdl7c&amp;utm_source=techbeacon&amp;utm_medium=techbeacon&amp;utm_campaign=00134846" rel="noopener noreferrer">Buyer&#8217;s Guide For Software Test Automation Tools</a> ]</em></p>
<h3>Staying true to agile methodologies</h3>
<p dir="ltr">How can teams maintain the integrity and power of agile methodology <a target="_blank" href="https://techbeacon.com/app-dev-testing/distributed-agile-teams-8-hacks-make-them-work" rel="noopener noreferrer">when the members are physically separate</a>? Most of the principles of agile imply a collocated team. For example, from <a target="_blank" href="http://agilemanifesto.org" rel="nofollow noopener noreferrer">the Agile Manifesto</a>: &#8220;The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.&#8221; </p>
<p dir="ltr">This can happen over videoconferencing, of course, but the authors certainly intended &#8220;face-to-face&#8221; to mean in person. </p>
<h4>How to maximize remote agile teams</h4>
<p dir="ltr">Thankfully, some of the elements of the Agile Manifesto can more easily apply to virtual teams. For example, principles of agile such as &#8220;continuous attention to technical excellence and good design enhances agility&#8221; also apply to virtual software teams.</p>
<p dir="ltr">As teams become virtual, make sure that you have defined and put in place a minimal set of <a target="_blank" href="https://www.clearlyagileinc.com/agile-blog/what-are-agile-ceremonies" rel="nofollow noopener noreferrer">required agile events</a>. One definition of an agile event: The meetings prescribed to carry out the Scrum framework, which give Scrum its regularity and structure. Choose the vital few, or risk spending all your time on process, rather than on real work.</p>
<p dir="ltr">Remote agile is an area where technology helps. Essential agile tools include backlog, definition of &#8220;done,&#8221; burndown chart, release plan, and retrospectives. And each of these has an app that can help.</p>
<p dir="ltr">The most important aspect of staying agile in virtual teams is to keep the roles of the Scrum master (SM) and product owner (PO). And you should have SM and PO proxies for each group of team members who share a common time zone. </p>
<p dir="ltr">Their role is to stop and answer questions within an hour that might hang up a developer for a day. For bigger issues, the proxies can reach back to the true product owner for confirmation of the direction given locally. The proxies have a fast track to the primary PO and SM and can get a same-day (or 24-hour) response.</p>
<h3>Managing for collaboration day in and day out</h3>
<p dir="ltr">Working beside other people in a collocated environment has many advantages in terms of communication. For example, when one team member is on the phone, perhaps speaking to an internal or external customer, team members located nearby can hear one-half of the phone conversation and intuit the rest.</p>
<p dir="ltr">Information conveyed in this ambient manner is important, and it is almost impossible to replicate in a virtual team environment.</p>
<h4>How to manage collaboration</h4>
<p dir="ltr">One commonly used countermeasure is finding a virtual replacement for real-life bonding, like sharing personal weekend plans or even a virtual happy hour. But virtual teams can take several steps to ensure that they keep collaborating effectively even on lockdown.</p>
<p dir="ltr">First, make it clear, through a release planning document and through boundary conditions, what it is you&#8217;re collaborating on. At the beginning of a project, make sure that you have defined roles and responsibilities. Now is not the time for team members to have only a vague idea about who is the directly responsible individual for a given deliverable. The <a target="_blank" href="https://www.tcgen.com/tools-from-book/circle-dot-chart" rel="nofollow noopener noreferrer">Circle Dot Chart</a> is a tool that can help teams define and maintain roles and responsibilities as they work virtually.</p>
<p dir="ltr">You can also create transparency for teamwork by having a shared workspace, and sharing interim work products in a cloud-based environment.</p>
<p dir="ltr">Above all, have version control protocols and observe them. Version control for all documents and work product is especially vital where teams are not located in the same time zone.</p>
<p dir="ltr">All team members must not only have a single version of the truth, but also know that it is the most current version, the latest and greatest version of your work. Managing the permissions in your tools is important. Make one individual responsible for the document and allow only that person to edit it.</p>
<p dir="ltr">Tools for collaboration include <a target="_blank" href="https://almanac.io/articles/19090/spade-decision-making-framework" rel="nofollow noopener noreferrer">the SPADE decision-making framework</a> and <a target="_blank" href="https://fellow.app" rel="nofollow noopener noreferrer">Fellow.app</a>, which has both free and pro versions.</p>
<h3>Hire and communicate for virtual team success</h3>
<p dir="ltr">In addition to meeting these four challenges, virtual teams raise questions related to hiring and communication. Hiring remote developers is difficult given the time-zone and language challenges. Specialized hiring firms can serve as resources to help you recruit and select candidates when trying to scale rapidly. </p>
<p dir="ltr">Don&#8217;t forget onboarding. It is one thing to bring in a new hire into headquarters, but entirely different to bring someone into the organization who will not see the company office for six months or longer. Document your onboarding process and have videos that can be watched locally.</p>
<p dir="ltr">You also need to prepare new hires for work. There are scripts that can configure a laptop for instant productivity with tools preloaded for code repositories, development environments, and links to company resources.</p>
<p dir="ltr">With virtual software teams, communication and decision making are often difficult challenges. For example, daily stand-up meetings are nearly impossible if conducted as if the team were located in the same building. Time-zone optimization is one tool that organizations use.</p>
<p dir="ltr">They try to formulate teams so that at least four hours are in common between core team members. If you can&#8217;t get everyone together for a standup, some firms perform asynchronous check-ins using Slack. Other firms have used Basecamp for standups as well. </p>
<p>Unprecedented times call for unprecedented measures. It&#8217;s imperative to the strategies of many companies that <a target="_blank" href="https://techbeacon.com/app-dev-testing/why-agile-leadership-key-these-uncertain-times" rel="noopener noreferrer">they do not lose steam</a> due to events outside of their control.</p>
<p>With some thought and innovation, virtual development teams can maintain the best principles of their company cultures, stay focused on their product vision, stay true to agile, and collaborate effectively. The keys are clarity, process, and the appropriate technology. With these in place, virtual teams can forge ahead, without missing a step.</p>
<p><em>[ Practice quality-driven development <a target="_blank" href="https://content.microfocus.com/l/world-quality-report-quality-driven-development-tb?utm_source=techbeacon&amp;utm_medium=techbeacon&amp;utm_campaign=00134846" rel="noopener noreferrer">with best practices from QA practitioners in TechBeacon&#8217;s Guide</a>. Plus: Download the <a target="_blank" href="https://content.microfocus.com/world-quality-report-quality-driven-development-tb/world-quality-report-2019-2020?lx=R6G46K&amp;utm_source=techbeacon&amp;utm_medium=techbeacon&amp;utm_campaign=00134846" rel="noopener noreferrer">World Quality Report 2019-20</a> ] </em></p>
</p></div>
<p><br />
<br /><a href="https://techbeacon.com/app-dev-testing/virtual-software-development-teams-4-challenges-overcome">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Beware When You Search for These TV Shows and Movies</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/beware-when-you-search-for-these-tv-shows-and-movies/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Tue, 23 Jun 2020 04:01:52 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Beware]]></category>
		<category><![CDATA[Movies]]></category>
		<category><![CDATA[Search]]></category>
		<category><![CDATA[Shows]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/beware-when-you-search-for-these-tv-shows-and-movies/</guid>

					<description><![CDATA[If you’ve been following recent stay-at-home orders, it’s likely that you’ve been scavenging the internet for new content to help pass]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<div class="author-block padding-bottom-xs">
                
            </div>
<p><span data-contrast="auto">If you’ve been following recent stay-at-home orders, it’s likely that you’ve been scavenging the internet for new </span><span data-contrast="auto">content to help pass the time</span><span data-contrast="auto">.</span><span data-contrast="auto"> In fact, a</span><span data-contrast="auto">ccording to Nielson, there was an </span><a target="_blank" href="https://variety.com/2020/digital/news/video-streaming-tvs-us-data-coronavirus-nielsen-1203550256/" rel="noopener noreferrer"><span data-contrast="none">85% increase in American streaming rates</span></a><span data-contrast="auto"> in the first three weeks of March this year compared to March 2019 reports. </span><span data-contrast="auto"> </span><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></p>
<p><span data-contrast="auto">But</span><span data-contrast="auto"> </span><span data-contrast="auto">having multiple streaming subscriptions can quickly add up. </span><span data-contrast="auto">Consequentially, </span><span data-contrast="auto">users</span><span data-contrast="auto"> who</span><span data-contrast="auto"> are hesitant to pay more for </span><span data-contrast="auto">online streaming subscriptions </span><span data-contrast="auto">often </span><span data-contrast="auto">look for free options </span><span data-contrast="auto">to stream their favorite TV show or movie. </span><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></p>
<p><span data-contrast="auto"><span class="TextRun SCXW214311423 BCX0" lang="EN-US" xml:lang="EN-US" data-contrast="auto"><span class="NormalTextRun SCXW214311423 BCX0">Criminals are often behind these websites, luring unsuspecting users into schemes via “free” downloads of movies and TV shows. </span></span> </span><span data-contrast="auto"> Some of these </span><span data-contrast="auto">movies and shows are risker th</span><span data-contrast="auto">an others, </span><span data-contrast="auto">however. </span><span data-contrast="auto"> McAfee </span><span data-contrast="auto">WebAdvisor</span><span data-contrast="auto"> data has revealed</span><span data-contrast="auto"> </span><span data-contrast="auto">certain</span><span data-contrast="auto"> </span><span data-contrast="auto">titles </span><span data-contrast="auto">are</span><span data-contrast="auto"> tied to </span><span data-contrast="auto">potential malware and phishing threats.</span><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></p>
<p><span data-contrast="auto">Let’s </span><span data-contrast="auto">take a look</span><span data-contrast="auto"> at the</span><span data-contrast="auto"> TV shows and movies</span><span data-contrast="auto"> </span><span data-contrast="auto">that could lead you to a dangerous download instead of your next film spree</span><span data-contrast="auto">, as well as discuss what users can do to stay secure.</span><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></p>
<h2>Top 10 U.S. TV and Movie Titles That Could Lead You to a Dangerous Download:</h2>
<table style="height: 601px;" width="581" data-tablestyle="MsoTableGrid" data-tablelook="1696">
<tbody>
<tr>
<td data-celllook="0"><b><span data-contrast="auto">Top 10 U.S. TV Titles</span></b><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559740&quot;:259}"> </span></td>
<td data-celllook="0"><b><span data-contrast="auto">Top 10 U.S. Movie Titles</span></b><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559740&quot;:259}"> </span></td>
</tr>
<tr>
<td data-celllook="0"><span data-contrast="auto">“Brooklyn Nine-Nine”</span><span data-ccp-props="{&quot;134233279&quot;:true,&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></td>
<td data-celllook="0"><span data-contrast="auto">“Warrior”</span><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559740&quot;:259}"> </span></td>
</tr>
<tr>
<td data-celllook="0"><span data-contrast="auto">“Elite”</span><span data-ccp-props="{&quot;134233279&quot;:true,&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></td>
<td data-celllook="0"><span data-contrast="auto">“Zombieland”</span><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559740&quot;:259}"> </span></td>
</tr>
<tr>
<td data-celllook="0"><span data-contrast="auto">“Harlots”</span><span data-ccp-props="{&quot;134233279&quot;:true,&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></td>
<td data-celllook="0"><span data-contrast="auto">“The Incredibles”</span><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559740&quot;:259}"> </span></td>
</tr>
<tr>
<td data-celllook="0"><span data-contrast="auto">Letterkenny”</span><span data-ccp-props="{&quot;134233279&quot;:true,&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></td>
<td data-celllook="0"><span data-contrast="auto">“</span><span data-contrast="auto">Step Brothers</span><span data-contrast="auto">”  </span><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559740&quot;:259}"> </span></td>
</tr>
<tr>
<td data-celllook="0"><span data-contrast="auto">“Poldark”</span><span data-ccp-props="{&quot;134233279&quot;:true,&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></td>
<td data-celllook="0"><span data-contrast="auto">“Bad Boys”</span><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559740&quot;:259}"> </span></td>
</tr>
<tr>
<td data-celllook="0"><span data-contrast="auto">“Lost”</span><span data-ccp-props="{&quot;134233279&quot;:true,&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></td>
<td data-celllook="0"><span data-contrast="auto">“Aladdin” (2019)</span><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559740&quot;:259}"> </span></td>
</tr>
<tr>
<td data-celllook="0"><span data-contrast="auto">“You”</span><span data-ccp-props="{&quot;134233279&quot;:true,&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></td>
<td data-celllook="0"><span data-contrast="auto">“The Lion King”</span><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559740&quot;:259}"> (1994)</span></td>
</tr>
<tr>
<td data-celllook="0"><span data-contrast="auto">“Gentefied”</span><span data-ccp-props="{&quot;134233279&quot;:true,&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></td>
<td data-celllook="0"><span data-contrast="auto">“Swingers”</span><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559740&quot;:259}"> </span></td>
</tr>
<tr>
<td data-celllook="0"><span data-contrast="auto">“PEN15”</span><span data-ccp-props="{&quot;134233279&quot;:true,&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></td>
<td data-celllook="0"><span data-contrast="auto">“Frozen 2”</span><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559740&quot;:259}"> </span></td>
</tr>
<tr>
<td data-celllook="0"><span data-contrast="auto">“Skins</span><span data-contrast="auto">”</span><span data-ccp-props="{&quot;134233279&quot;:true,&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></td>
<td data-celllook="0"><span data-contrast="auto">“The Invitation”</span><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559740&quot;:259}"> </span></td>
</tr>
</tbody>
</table>
<h2>Stay Protected While Streaming</h2>
<p><span data-contrast="auto">While consumers </span><span data-contrast="auto">search for new content from home</span><span data-contrast="auto">, criminals </span><span data-contrast="auto">are clearly searching for way</span><span data-contrast="auto">s to trick eager TV and movie fans. However, there’s still </span><span data-contrast="auto">a </span><span data-contrast="auto">way</span><span data-contrast="auto"> users</span><span data-contrast="auto"> can stay both entertained and secure during this time. </span><span data-contrast="auto">Follow these tips to help ensure that your online entertainment experience is safe</span><span data-contrast="auto">: </span><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></p>
<h3>Watch what you click</h3>
<p><span data-contrast="auto">Users looking to catch up on Season 2 of “You” or </span><span data-contrast="auto">watch the </span><span data-contrast="auto">“The Incredibles” on repeat should be cautious and only access entertainment content directly from a reliable source. The safest thing to do is to subscribe to a streaming site that offers the content or download the movie from </span><span data-contrast="auto">credible websites</span><span data-contrast="auto">, </span><span data-contrast="auto">instead of downloading a “free” version from a website that could contain malware.</span><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></p>
<h3>Refrain from using illegal streaming sites</h3>
<p><span data-contrast="auto">Many illegal streaming sites are riddled with malware or adware disguised as pirated video files. Do your device a favor and stream the show from a reputable source.</span><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></p>
<h3>Use a comprehensive security Solution</h3>
<p><span data-contrast="auto">Use a solution like </span><a target="_blank" href="https://www.mcafee.com/en-us/antivirus/mcafee-total-protection.html" rel="noopener noreferrer"><span data-contrast="none">McAfee Total Protection</span></a><span data-contrast="auto">. This can help protect you</span><span data-contrast="auto">r devices</span><span data-contrast="auto"> from malware, phishing attacks, and other threats. </span><span data-contrast="auto">It also includes</span><span data-contrast="auto"> </span><a target="_blank" href="https://www.mcafee.com/en-us/safe-browser/mcafee-webadvisor.html" rel="noopener noreferrer"><span data-contrast="none">McAfee </span><span data-contrast="none">WebAdvisor</span></a><span data-contrast="auto">, which helps alert users of malicious websites.</span><span data-contrast="auto"> Additionally, McAfee </span><span data-contrast="auto">WebAdvisor</span><span data-contrast="auto"> can be accessed as a free download. </span><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></p>
<h3>Use parental control software</h3>
<p><span data-contrast="auto">Kids are tech</span><span data-contrast="auto">–</span><span data-contrast="auto">savvy and may search for movies by themselves. Ensure that limits are set on your child’s device and use software that can help minimize exposure to potentially malicious or inappropriate websites.</span><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></p>
<h2>Stay Updated</h2>
<p><span data-contrast="auto">To stay updated on all things </span><a target="_blank" href="https://www.mcafee.com/en-us/index.html" rel="noopener noreferrer"><span data-contrast="none">McAfee</span></a><span data-contrast="auto"> and on top of the latest consumer and mobile security threats, follow </span><a target="_blank" href="https://twitter.com/McAfee_Home" rel="noopener noreferrer"><span data-contrast="none">@</span><span data-contrast="none">McAfee_Home</span><span data-contrast="none"> </span></a><span data-contrast="auto">on Twitter, listen to our podcast </span><a target="_blank" href="https://geo.itunes.apple.com/podcast/us/id1257232208?mt=2&amp;at=1010lbVy&amp;ct=mcafeehackable_GaryBlog_EndBlurb" rel="noopener noreferrer"><span data-contrast="none">Hackable?</span></a><span data-contrast="auto">, and ‘Like’ us on </span><a target="_blank" href="https://www.facebook.com/McAfee" rel="noopener noreferrer"><span data-contrast="none">Facebook</span><span data-contrast="none">.</span></a><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span><span data-ccp-props="{&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}"> </span></p>
<p><em>*Methodology: McAfee pulled the most popular TV and movie titles available on U.S. streaming sites according to “best of” articles by a range of U.S. publications. The web results for the searches of the entertainment titles with modifying terms, such as “TV show” and “torrent,” were then analyzed. Other popular modifying search terms include “free download,” “free login,” “free,” and “pirated download.” From there, the resulting URLs and domains were measured using McAfee WebAdvisor data and assigned a score of high, medium, or unverified risk. The results identified the top 10 TV shows and movie titles with the highest risk of being used by criminals to spread malware and phishing threats.  </em></p>
</p></div>
<p><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script><script>
  !function(f,b,e,v,n,t,s)
  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  s.parentNode.insertBefore(t,s)}(window, document,'script',
  'https://connect.facebook.net/en_US/fbevents.js');
  fbq('init', '187610925152304');
  fbq('track', 'PageView');
</script><script>
// load Facebook
!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;
t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,
document,'script','https://connect.facebook.net/en_US/fbevents.js');
fbq('init', '766537420057144');
fbq('track', "PageView");</p>
<p>//document.write('x3Cnoscript>x3Cimg height="1" width="1" style="display:none" src="https://www.facebook.com/tr?id=766537420057144&ev=PageView&noscript=1" />x3C/noscript>');
</script><br />
<br /><br />
<br /><a href="https://www.mcafee.com/blogs/consumer/mcafee-findings-reveals-tv-shows-movies/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Ripple20 Vulnerability Mitigation Best Practices</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/ripple20-vulnerability-mitigation-best-practices/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Mon, 22 Jun 2020 22:32:25 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Mitigation]]></category>
		<category><![CDATA[Practices]]></category>
		<category><![CDATA[Ripple20]]></category>
		<category><![CDATA[Vulnerability]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/ripple20-vulnerability-mitigation-best-practices/</guid>

					<description><![CDATA[On June 16th, the Department of Homeland Security and CISA ICS-CERT issued a critical security advisory warning covering multiple newly discovered vulnerabilities affecting]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<div class="container medium">
<div class="author-block padding-bottom-xs">
                
            </div>
<p>On June 16<sup>th</sup>, the Department of Homeland Security and CISA ICS-CERT <a target="_blank" href="https://www.us-cert.gov/ics/advisories/icsa-20-168-01" rel="noopener noreferrer">issued</a> a critical security <a target="_blank" href="https://www.kb.cert.org/vuls/id/257161" rel="noopener noreferrer">advisory</a> warning covering multiple newly discovered vulnerabilities affecting Internet-connected devices manufactured by multiple vendors. This set of 19 vulnerabilities in a low-level TCP/IP software library developed by Treck has been dubbed “Ripple20” by researchers from JSOF.</p>
<p>A networking stack is a software component that provides network connectivity over the standard internet protocols. In this specific case these protocols include ARP, IP (versions 4 and 6), ICMPv4, UDP and TCP communications protocols, as well as the DNS and DHCP application protocols. The Treck networking stack is used across a broad range of industries (medical, government, academia, utilities, etc.), from a broad range of device manufacturers – a fact which enhances their impact and scope, as each manufacturer needs to push an update for their devices independently of all others. In other words, the impact ripples out across the industry due to complexities in the supply and design chains.</p>
<p>Identifying vulnerable devices on your network is a crucial step in assessing the risk of Ripple20 to your organization. While a simple <a target="_blank" href="https://www.shodan.io/search?query=treck" rel="noopener noreferrer">Shodan search for “treck”</a> shows approximately 1000 devices, which are highly likely to be internet-facing vulnerable devices, this represents only a fraction of the impacted devices. Identification of the Treck networking stack vs. other networking stacks (such as the native Linux or Windows stacks) requires detailed analysis and fingerprinting techniques based on the results of network scans of the devices in question.</p>
<p>The impact of these vulnerabilities ranges from denial of service to full remote code exploitation over the internet, with at least one case not requiring any authentication (<a target="_blank" href="https://nvd.nist.gov/vuln/detail/CVE-2020-11901" rel="noopener noreferrer">CVE-2020-11901</a>). JSOF researchers identified that these vulnerabilities impact a combination of traditional and IoT devices. Customers should review advisories from vendors such as <a target="_blank" href="https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00295.html" rel="noopener noreferrer">Intel</a> and <a target="_blank" href="https://support.hp.com/in-en/document/c06640149" rel="noopener noreferrer">HP</a> because non-IoT devices may be running firmware that makes use of the Treck networking stack.</p>
<p>Ripple20’s most significant impact is to devices whose network stack is exposed (in general IoT devices incorporating the Treck network stack) as compared to devices that incorporate the stack that it is only exposed to the local device. We recommend that you audit all network-enabled devices to determine if they are susceptible to these vulnerabilities.</p>
<p>There are potentially tens of millions of devices that are vulnerable to at least one of the Ripple20 flaws. Mitigating impact requires attention from both device owners and device vendors.</p>
<h3><strong>Mitigations for users of vulnerable devices per CISA recommendations (where possible): </strong></h3>
<ul>
<li>Patch any device for which a vendor has released an update.</li>
<li>Practice the principle of least privilege for all users and devices (devices and users should only have access to the set of capabilities needed to accomplish their job). In this case, minimize network exposure and <a target="_blank" href="https://www.us-cert.gov/ics/alerts/ICS-ALERT-10-301-01" rel="noopener noreferrer">internet-accessibility</a> for all control system devices.</li>
<li>Locate control system networks and remote devices behind firewalls and isolate them from the business network.</li>
<li>When remote access is required, use secure methods, such as Virtual Private Networks (VPNs), recognizing that VPNs may have vulnerabilities and should be updated to the most current version available. Also recognize that a VPN is only as secure as the connected devices. VPN solutions should use multi-factor authentication.</li>
<li>Use caching DNS servers in your organization, prohibiting direct DNS queries to the internet. Ideally, caching DNS servers should utilize DNS-over-HTTPS for lookups.</li>
<li>Block anomalous IP traffic by utilizing a combination of firewalls and intrusion prevention systems.</li>
</ul>
<h3><strong>Where Can I Go to Get More Information?</strong></h3>
<p>Please review <a target="_blank" href="https://kc.mcafee.com/corporate/index?page=content&amp;id=KB93020" rel="noopener noreferrer">KB93020</a> for more information and subscribe for updates.</p>
</p></div>
</p></div>
<p><script>
  !function(f,b,e,v,n,t,s)
  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  s.parentNode.insertBefore(t,s)}(window, document,'script',
  'https://connect.facebook.net/en_US/fbevents.js');
  fbq('init', '187610925152304');
  fbq('track', 'PageView');
</script><script>
// load Facebook
!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;
t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,
document,'script','https://connect.facebook.net/en_US/fbevents.js');
fbq('init', '766537420057144');
fbq('track', "PageView");</p>
<p>//document.write('x3Cnoscript>x3Cimg height="1" width="1" style="display:none" src="https://www.facebook.com/tr?id=766537420057144&ev=PageView&noscript=1" />x3C/noscript>');
</script><br />
<br /><br />
<br /><a href="https://www.mcafee.com/blogs/other-blogs/mcafee-labs/ripple20-vulnerability-mitigation-best-practices/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Welcome to Sébastien! – Gatling Open-Source Load Testing</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/welcome-to-sebastien-gatling-open-source-load-testing/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 19 Jun 2020 14:26:42 +0000</pubDate>
				<category><![CDATA[Performance]]></category>
		<category><![CDATA[Gatling]]></category>
		<category><![CDATA[Load]]></category>
		<category><![CDATA[opensource]]></category>
		<category><![CDATA[Sébastien]]></category>
		<category><![CDATA[testing]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/welcome-to-sebastien-gatling-open-source-load-testing/</guid>

					<description><![CDATA[The tech team is growing and welcoming Sébastien Brevet! Sébastien joined Gatling as a Back-end Developer on Monday Let’s say]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<p><span class="s1">The tech team is growing and welcoming <strong>Sébastien Brevet</strong>!</span></p>
<p></p>
<p><noscript><img class="size-medium wp-image-7370 aligncenter" src="https://gatling.io/wp-content/uploads/2020/06/IMG_7563-200x300.png" alt="Tech Team Gatling - Sébastien Brevet" width="200" height="300" srcset="https://gatling.io/wp-content/uploads/2020/06/IMG_7563-200x300.png 200w, https://gatling.io/wp-content/uploads/2020/06/IMG_7563.png 320w" sizes="(max-width: 200px) 100vw, 200px"/></noscript></p>
<p>Sébastien joined Gatling as a <strong>Back-end Developer</strong> on Monday</p>
<p>Let’s say that development is innate in Sébastien, he started at a young age and has <strong>12 years experience in his field</strong>. Sébastien has always lived in Paris, passionate about many dance styles and a lover of algorithmic competitions<span class="c-message__edited_label" dir="ltr" data-sk="tooltip_parent" aria-describedby="sk-tooltip-81421"> (Google code jam).</span></p>
<p>We are delighted to have Sébastien in the team and wish him every success.</p>
<p>Welcome to the Gatling family Sébastien!</p>
<p> </p>
<p> </p>
</div>
<p><br />
<br /><a href="https://gatling.io/2020/06/19/welcome-to-sebastien/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Customer Success Engineer &#8211; Neotys</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/customer-success-engineer-neotys/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 19 Jun 2020 12:19:21 +0000</pubDate>
				<category><![CDATA[Performance]]></category>
		<category><![CDATA[Customer]]></category>
		<category><![CDATA[engineer]]></category>
		<category><![CDATA[Neotys]]></category>
		<category><![CDATA[Success]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/customer-success-engineer-neotys/</guid>

					<description><![CDATA[In this context, you will be trained on the Neotys products and be taught Neotys CSM best practices to work]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<p><span style="font-weight: 400;">In this context, you will be trained on the Neotys products and be taught Neotys CSM best practices to work efficiently with existing and new customers in order to fulfill their requirements and expectations.</span></p>
<p><span style="font-weight: 400;">You will be playing a key role onboarding Neotys new customers and helping them adopting our solution. You will also be the main point of contact of existing and more mature Neotys customers to help them using our product and relay any requirement they may have to Neotys Product Management.</span></p>
<p><span style="font-weight: 400;">Neotys customer base is composed of large corporations in all main verticals. You will operate on Neotys European key geos (France, UK, DACH, Benelux) but other geos are possible.</span></p>
<p><span style="font-weight: 400;">The most accurate support and services (training and consulting) are to be delivered. To reach this goal you will be dealing with customers either remotely or/and on-site. Mobility is a must and could take up to 50% of your work-time.</span></p>
<p><span style="font-weight: 400;">Being a Customer Success Engineer will lead you to a transverse position within the company and will require interactions with Neotys Product Management, R&amp;D, Marketing and Pre-sales teams. Besides that, you will be actively working with Neotys Account Executives and reporting to VP </span><span style="font-weight: 400;">Customer Success.</span></p>
<p><span style="font-weight: 400;">You should have good interpersonal skills, be organized and an excellent communicator both orally and in writing.</span></p>
</p></div>
<p><br />
<br /><a href="https://www.neotys.com/uncategorized/customer-success-engineer">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Visual Testing with Applitools, Appium, and Amazon AWS Device Farm</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/visual-testing-with-applitools-appium-and-amazon-aws-device-farm/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Thu, 18 Jun 2020 17:28:18 +0000</pubDate>
				<category><![CDATA[Automation]]></category>
		<category><![CDATA[Amazon]]></category>
		<category><![CDATA[Appium]]></category>
		<category><![CDATA[Applitools]]></category>
		<category><![CDATA[AWS]]></category>
		<category><![CDATA[Device]]></category>
		<category><![CDATA[Farm]]></category>
		<category><![CDATA[testing]]></category>
		<category><![CDATA[Visual]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/visual-testing-with-applitools-appium-and-amazon-aws-device-farm/</guid>

					<description><![CDATA[Visual UI testing is more than just testing your app on Desktop browsers and Mobile emulators. In fact, you can]]></description>
										<content:encoded><![CDATA[ 
<br><div>
													<div class="lead">
						
<p>Visual UI testing is more than just testing your app on Desktop browsers and Mobile emulators. In fact, you can do more with Visual UI testing to run your tests over physical mobile devices.</p>



<p>Visual UI testing compares the visually-rendered output of an application against itself in older iterations. Users call this type of test version checking. Some users apply visual testing for cross-browser tests.  They run the same software version across different target devices/operating systems/browsers/viewports. For either purpose, we need a testing solution that has high accuracy, speed, and works with a range of browsers and devices. For these reasons, we chose Applitools.</p>



<p>Running your Visual UI testing across physical devices means having to set up your own local environment to run the tests. Imagine the number of devices, screen resolutions, operating systems, and computers you’d need! It would be frustratingly boring, expensive, and extremely time-consuming.</p>



					</div>
					
<!-- /wp:more -->

<!-- wp:paragraph -->
<p>This is where Amazon’s <a target="_blank" href="https://aws.amazon.com/device-farm/" rel="noopener noreferrer">AWS Device Farm</a> comes into play. This powerful service can build a testing environment. It uses physical mobile devices to run your tests! All you do is upload your tests to Amazon, specify the devices you want, and it will take it from there!</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In one of my recent articles, <a target="_blank" href="https://applitools.com/blog/visual-ui-speeds-devops" rel="noopener noreferrer">How Visual UI Testing can speed up DevOps flow</a> I showed how you can configure a CD/CI service to run your Visual UI tests. The end result would be the same, whether you are running your tests locally, or via such services. Once the tests run, you can always check the results over the Applitools Test Manager Dashboard.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In this article, I will show you how you can run your Visual UI tests, whether you’ve written them for your mobile or web app, on real physical mobile devices in the cloud. For this, I will be employing <a target="_blank" href="https://applitools.com/" rel="noopener noreferrer">Applitools</a>, <a target="_blank" href="http://appium.io/" rel="noopener noreferrer">Appium</a>, and <a target="_blank" href="https://aws.amazon.com/device-farm/" rel="noopener noreferrer">AW</a>S<a target="_blank" href="https://aws.amazon.com/device-farm/" rel="noopener noreferrer"> Device Farm</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>AWS Device Farm for mobile visual testing</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>AWS Device Farm is a mobile app testing platform that helps developers automatically test their apps on hundreds of real devices in minutes.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>When it comes to testing your app over mobile devices, the choices are numerous. Amazon helps to build a “Device Farm” on behalf of the developers and testers, hence the name.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Here are some of the major advantages and features for using this service:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li><strong>Cross-platform</strong>. Android and iOS platforms (Native, Hybrid, and Web) are all supported. This includes native apps built with:<ul><li>Java/Kotlin for Android.</li><li>Swift for iOS. </li><li>PhoneGap.</li><li>Xamarin.</li><li>Unity.</li><li>And web apps built for mobile browsers.</li></ul></li></ol><!-- /wp:list --><!-- wp:list {"ordered":true,"start":2} --><ol start="2"><li><strong>Scale</strong>. AWS Device Farm supports hundreds of unique physical devices, categorized by make, model, and operating system. You may also choose to run your tests across multiple instances of the same device. All these devices are available for you with a few mouse clicks!</li></ol><!-- /wp:list --><!-- wp:list {"ordered":true,"start":3} --><ol start="3"><li><strong>Safety and Security</strong>. AWS Device Farm provides full hardware and software isolation. The devices are physically isolated from one another! They cannot feed each other, so there’s no way for one phone to take a photo, video, or audio recording of a device sitting next to it. In addition, the devices are not visible to each other from a wireless or network point of view. Bluetooth and Wi-Fi traffic is not shared. On the software side, the devices are dynamically tethered to a host machine. When you run your test on a host machine, it has the device plugged into it over USB. That very host machine, that executes your code, is brought up on the fly, runs your code, and is then torn down. It’s never reused between customers.</li></ol><!-- /wp:list --><!-- wp:list {"ordered":true,"start":4} --><ol start="4"><li><strong>Reporting</strong>. The test results, together with any screenshots, videos, logs and performance logs, are all logged, and saved in the cloud. The AWS Device Farm offers a rich Dashboard to allow you to browse any of these logs in order to debug your test runs.</li></ol><!-- /wp:list --><!-- wp:paragraph --><p>AWS Device Farm supports a number of test runners. This includes Appium Java JUnit, Appium Python, Appium Ruby, and Appium Java TestNG. Back in January 2019, Amazon <a target="_blank" href="https://aws.amazon.com/about-aws/whats-new/2019/01/aws-device-farm-now-supports-appium-nodejs-and-appium-ruby/" rel="noopener noreferrer">announced</a> support for the Appium Node.js test runner. This means you can build your tests with Selenium Webdriver, for instance, and have it run on top of AWS Device Farm.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Now that you have an idea about AWS Device Farm, let’s move on, and discover the Appium automation testing framework.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Selenium Webdriver for browser app automation</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a target="_blank" href="https://www.npmjs.com/package/selenium-webdriver" rel="noopener noreferrer">Selenium WebDriver</a> is a browser automation framework that allows a developer to write commands, and send them to the browser. It offers a set of clients with a variety of programming languages (Java, JavaScript, Ruby, Python, PHP and others). </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>Figure 1</strong> below shows the Selenium WebDriver architecture:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center"} -->
<div class="wp-block-image"><figure class="aligncenter"></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p><strong>Figure 1: Selenium WebDriver Architecture</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Selenium WebDriver architecture consists of:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><strong>Selenium Language Bindings</strong>. These bindings are Selenium Client Libraries, offered in multiple programming languages, that developers use to send control commands to the browser. For instance, a developer can open a browser instance, and query for an element in DOM, among other tasks.</li></ul><!-- /wp:list --><!-- wp:list --><ul><li><strong>JSON Wire Protocol</strong>. This is a <a target="_blank" href="https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol" rel="noopener noreferrer">REST API Protocol</a> (JSONWP) that all WebDriver Server implementations adhere to and understand. Each of the queries and commands the developers write using the Selenium Client Library are converted to HTTP Requests, with the query or command, as payload in the JavaScript Object Notation (JSON) format, and is sent to the WebDriver Server.</li></ul><!-- /wp:list --><!-- wp:list --><ul><li><strong>Browser Drivers</strong>. These are WebDriver Server implementations for a variety of browsers. A WebDriver Server implementation is nothing but an HTTP Server that receives requests from the Selenium Client Library using the JSON Wire Protocol format. It then analyzes the HTTP Request and prepares a browser-specific command to execute against the browser. If the request is a GET request, the browser-driver should return a response. Otherwise, a POST request is a one-way request to execute an action only without any response.</li></ul><!-- /wp:list --><!-- wp:list --><ul><li><strong>Browsers</strong>. These are the browsers that have a corresponding WebDriver Server implementation. The WebDriver Server implementations communicate with the Browsers over HTTP via the DevTools Protocol of each browser.</li></ul><!-- /wp:list --><!-- wp:paragraph --><p><a target="_blank" href="https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/CHANGES.md" rel="noopener noreferrer">Selenium 4</a> is obseleting the JSONWP in favor of the new W3C WebDriver standard.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Here’s a quick tutorial on using and learning <a target="_blank" href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment" rel="noopener noreferrer">Selenium WebDriver</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>With that brief overview of Selenium WebDriver, let’s move on and explore Appium.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Appium for mobile app automation</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a target="_blank" href="http://appium.io/docs/en/about-appium/intro/" rel="noopener noreferrer">Appium </a>is an open-source tool to automate Mobile app testing. It’s a cross-platform that supports both OS (Android and iOS) test scripts. It is tested on simulators (iOS), emulators (Android) and real devices (iOS, Android).</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>It’s an HTTP Server written in Node.js that creates and handles WebDriver sessions. When you install Appium, you are actually installing the Appium Server. It follows the same approach as the Selenium WebDriver, which receives HTTP requests from the Client Libraries in JSON format with the help of JSONWP. It then handles those HTTP Requests in different ways. That’s why you can make use of Selenium WebDriver language bindings, client libraries and infrastructure to connect to the Appium Server. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Instead of connecting a Selenium WebDriver to a specific browser WebDriver, you will be connecting it to the Appium Server. Appium uses an extension of the JSONWP called the <a target="_blank" href="https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md" rel="noopener noreferrer">Mobile JSON Wire Protocol</a> (MJSONWP) to support the automation of testing for native and hybrid mobile apps. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>It supports the same Selenium WebDriver <a target="_blank" href="http://appium.io/docs/en/about-appium/appium-clients/" rel="noopener noreferrer">clients </a>with a variety of multiple programming languages such as Java, JavaScript, Ruby, Python, PHP and others. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Being a Node.js HTTP Server, it works in a client-server architecture. <strong>Figure 2</strong> below depicts the Appium Client-Server Architecture model:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center"} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="https://lh4.googleusercontent.com/Y2S9AXkg30zKHz1a278fdlw5ixgyeT9KXVFV0AQqavJNMaHFZZbZBSyk3MQXBeGigzgWuWMbTrhr6KAvoQaIw4YWBcJFnXAMJ1Xiip3vk0C_KZ2Ih63yNO7U7-mAt7PpzRRRZB2Z" alt=""/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p><strong>Figure 2: Appium Server Architecture</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Appium architecture consists of:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><strong>Appium Client</strong>. The <a target="_blank" href="http://appium.io/docs/en/about-appium/appium-clients/" rel="noopener noreferrer">Client Library</a> that communicates with the Appium Server via a session by sending the commands and queries over HTTP in JSON format. These requests are eventually executed against the specific Mobile device (emulator or real device). </li></ul><!-- /wp:list --><!-- wp:list --><ul><li><strong>Mobile JSONWP</strong>. This is the communication Protocol that both Appium Clients and Appium Server understand and use to pass along the commands and queries to be executed. The Appium Server differentiates between iOS and Android Request using the <a target="_blank" href="http://appium.io/docs/en/writing-running-appium/caps/" rel="noopener noreferrer">Desired Capabilities</a> argument. It’s a collection of keys and values encoded in a JSON object, sent by Appium clients to the server when a new automation session is requested. They contain all the information about the device to be used to run the tests against. Here’s a detailed tutorial on all possible desired capabilities to use with Appium. <a target="_blank" href="https://seleniumbycharan.com/2016/08/07/desired-capabilities-for-appium/" rel="noopener noreferrer">Desired Capabilities for Appium</a></li></ul><!-- /wp:list --><!-- wp:list --><ul><li><strong>Appium Server.</strong> It’s a Node.js HTTP server that receives requests from the client libraries, translates them into meaningful commands and passes them over to the specific UI Automator. </li></ul><!-- /wp:list --><!-- wp:list --><ul><li><strong>UI Automators</strong>. They are used to execute commands against the Mobile device/emulator/simulator. Examples are: <a target="_blank" href="http://appium.io/docs/en/drivers/android-uiautomator2/" rel="noopener noreferrer">UI Automator2</a> and <a target="_blank" href="http://appium.io/docs/en/drivers/ios-xcuitest/" rel="noopener noreferrer">XCUITest (iOS)</a></li></ul><!-- /wp:list --><!-- wp:paragraph --><p>The results of the test session are then communicated back to the Appium Server, and back to the Client in the form of logs, using the Mobile JSONWP.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Now that you are well equipped with knowledge for Selenium WebDriver and Appium, let’s go to the demo section of this article.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Demo</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In this section, we will write a Visual UI test script to test a Web page. We will run the tests over an Android device both locally and on AWS Device Farm. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>I will be using both Selenium WebDeriver and Appium to write the test script.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Prerequisites</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Before you can start writing and running the test script, you have to make sure you have the following components installed and ready to be used on your computer:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Java installed</li><li>JAVA_HOME environment variable is set to the Java SDK path</li><li>Node.js installed</li></ul><!-- /wp:list --><!-- wp:paragraph --><p>Assuming you are working on a MacOS computer, you can verify the above installations by running the following bash commands:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">echo $JAVA_HOME // this should print the Java SDK path<br/>node -v // this should print the version of Node.js installed<br/>npm -v // this should print the version of the Node Package Manager installed</pre>
<!-- /wp:preformatted -->

<!-- wp:heading {"level":3} -->
<h3>Component Installations</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For this demo we need to install Appium Server, Android Studio / SDK and finally make sure to have a few environment variables properly set.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Let’s start by installing Appium Server. Run the following command to install Appium Server locally on your computer.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">npm install -g appium</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>The command installs the Appium NPM package globally on your computer. To verify the installation, run the command:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">appium -v // this should print the Appium version</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Now let’s install Android Studio / SDK so that you can run the test script on an emulator or real device. You could install the Android SDK only but then you have to do additional advanced steps to properly configure the Android environment on your computer. I highly recommend installing the Android Studio as it makes your life easier.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Download the <a target="_blank" href="https://developer.android.com/studio" rel="noopener noreferrer">Android Studio executable</a>. Follow the steps below to install locally on your computer:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","width":654,"height":510} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh4.googleusercontent.com/3F7b2DEqIHTVqfk2CcA12MGTUV3jg9FZgdLAX9OKky2-zXORQy-ck3JzUe-0GUZepfjUs-j_nGKxoGvGvuTKkvbUg4v9gkbAty5MfiaOw-g4SUiTEd6mANTMcNx-xStpWXtRCq_C" alt="" width="654" height="510"/></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","width":667,"height":520} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh3.googleusercontent.com/PW3CzpWJ5KJRA4T8qGztTzorlY5__vTSGjh9kNYW-b2kpyeBg26ihfncFg9THQcsK5CeAB8gY_9itcINvo4wNHsKn03voJ5oz5mqK_FFVcMOQUB9mvp3zo9dRUn7xUjFPMU8tiH1" alt="" width="667" height="520"/></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","width":668,"height":521} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh6.googleusercontent.com/ghedYOliI6Rnp0DSJ-3Hjd0AExGqNpthaa-f3qNbtQXUlgBbAcRdFcdK36seu9djkDA6Ef2TuWDKwG2JWUycotp2dkWU05pCDm9vx6RIFJFkn1Ar5Ix9I7pnvH3l-hDM03UBlHEh" alt="" width="668" height="521"/></figure></div>
<!-- /wp:image -->

<!-- wp:image {"align":"center","width":674,"height":525} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh5.googleusercontent.com/HMqpaZFlDRFEKa_qulgp3qRj7PzTVD2RTvK03cpQqNkdaItCfyftJyOg0wyyjVZ5qN0J2tyv8wwu-zAaYigIWdo3KI_TXXIH8pZgJVSLZrknNQTeS_C0bL-8tQ-vFi0r_9hjs0wG" alt="" width="674" height="525"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Notice the location where the Android SDK was installed. It’s <strong>/Users/{User Account}/Library/Android/sdk</strong>.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","width":702,"height":547} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh3.googleusercontent.com/YFoXz2XN46IWQx85sXUHBwTaflHirBkDEw7eD8aXG2p92We9IPH41ShtujbjP7UVY9imJ3cufraIqeTfdZ3t1u6xGp6OYGhQsaRtfiB8CY6TPtbLAK0MGIlitW2Nj0yygZ_0Jhz6" alt="" width="702" height="547"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Wait until the download and installation is complete. That’s all!</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Because I want to run the test script locally over an Android emulator, let’s add one.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Open the Android Studio app:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","width":655,"height":500} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh6.googleusercontent.com/_M6olp6n-pIQySiyNC-RZh-GfJgLtZe8ETSWo1yGCTjSOCRCWWOK_W102HMDgLaIpK7iX3E3xLHWzzIy3_X0T9xmOOfwVQ562VsNIqsO4zDt0dj4AgKZnQfJDwDka2c-0UocZECu" alt="" width="655" height="500"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Click the <strong>Configure</strong> icon:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","width":390,"height":361} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh5.googleusercontent.com/vxmUcNV7rN-WieR6GLZbp9vV_Typjm4pMEVWUhEgg3vYjm1-faMPBZ0ukNPjeDbFw0ABPgRGATwqIPYg2pr7GO97JMej91k5q5yGQApX8rsIJWz_6JPBXT6A12Cudu3skp-emhOW" alt="" width="390" height="361"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Select the <strong>AVD Manager</strong> menu item.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","width":664,"height":507} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh3.googleusercontent.com/hlCSN58dIa7qch8w-Wc_IEmqpeGCf1j0Wfe0oCfNAXJFJ0FyJpk9HnsMzHy5MiTHjP_VCg8yjJuePkjIQ1MCQYR9vkikdoziLv0VBxt_1hKTarhn1fCsVFWppIgzcRUUg48oP4dX" alt="" width="664" height="507"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Click the <strong>+ Create Virtual Device</strong> button.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","width":668,"height":471} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh6.googleusercontent.com/u9FeCVUV_z21dvNqaqIawANDnzwzQIFYJ44vWXM8N0crTW_2ayLeDlSxe0acpCrE148aXdzUoH1bdW4X-_Q_xOGq0WWVMow4ALlaP80ghBSYZ12HFNYDiAtlJKSa6iVXJpRTehGX" alt="" width="668" height="471"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Locate and click the <strong>Pixel XL</strong> device then hit <strong>Next.</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong/>Locate the <strong>Q</strong> release and click the <strong>Download</strong> link. </p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","width":673,"height":521} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh6.googleusercontent.com/5u8QpsVTSL3us9j6YwsUmsyNP_QSuBgzJmLKci9su-wKIv6Gin9yDbDirInKGU550NTo-HkMKmdx5Q_ttM3oBi2BzQFJvGK9-hCxJCRLAPrkbE30RRK3SOKZMAmszoGL-IFOa5tN" alt="" width="673" height="521"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Read and accept the Terms and Conditions then hit <strong>Next.</strong></p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","width":649,"height":503} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh4.googleusercontent.com/9SlFsxr3IJdtj6h4cUwh6CcTbIQwTRUYvJDlw64LOZ9Ujqzi4aYYxX0p1kIMgInX_ejWLVl0kUwE5IGxsFPzMkvS3hl8qIcj6cnykMhW9bpoDN4esX3X_auuaXXdRmtnVtBJnIya" alt="" width="649" height="503"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>The Android 10, also known as Q release, starts downloading.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","width":673,"height":474} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh5.googleusercontent.com/YzDkXGi05DWWCJ7tz7cRKGxvka3uiQ9_v5CFEk1Pk5AAcP1BSjCBMQCh7S6U3DVmJdAKhGJuhdycAAjf6P23ws3W7lJSeggQW-9kF_YTF7GnT_Alfv_9PBZPfQqr7ADwQGyYcBT2" alt="" width="673" height="474"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Once the installation is complete, click the <strong>Next </strong>button to continue setting up an Android device emulator.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","width":685,"height":483} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh4.googleusercontent.com/TFvd8AUcWGtFXj5yAu-AqlszQ7PFan5fl6e8IIGH3dQFgCCEMIRzNaaLfr4QY4LphGuZDiaxQhm-ImeVSNryWIXJPvBVP7BUNOKnlwGCuqN9oxMLRjCMVkLb2aJlAekUG4mG2rUc" alt="" width="685" height="483"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>The installation is complete. Grab the <strong>AVD Name</strong> as you will use it later on in the test script, and hit <strong>Finish.</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Finally, we need to make sure the following environment variables are set on your computer. Open the <strong>~/.bash_profile</strong> file, and add the following environment variables:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">APPLITOOLS_API_KEY=<strong>{Get the Applitools API Key from Applitools Test Manager}</strong><br/>export APPLITOOLS_API_KEY<br/>ANDROID_HOME=/Users/<strong>{Use your account name here}</strong>/Library/Android/sdk<br/>export ANDROID_HOME<br/>ANDROID_HOME_TOOLS=$ANDROID_HOME/tools<br/>export ANDROID_HOME_TOOLS<br/>ANDROID_HOME_TOOLS_BIN=$ANDROID_HOME_TOOLS/bin<br/>export ANDROID_HOME_TOOLS_BIN<br/>ANDROID_HOME_PLATFORM=$ANDROID_HOME/platform-tools<br/>export ANDROID_HOME_PLATFORM<br/>APPIUM_ENV="Local"<br/>export APPIUM_ENV</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Finally, add the above environment variables to the $PATH as follows:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">export $PATH=$PATH:$ANDROID_HOME:$ANDROID_HOME_TOOLS:$ANDROID_HOME_TOOLS_BIN:$ANDROID_HOME_PLATFORM</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>One last major component that you need to download, and have on your computer, is the ChromeDriver. Navigate to the <a target="_blank" href="http://appium.io/docs/en/writing-running-appium/web/chromedriver/" rel="noopener noreferrer">Appium ChromeDriver</a> website, and download the latest workable ChromeDriver release for Appium. Once downloaded, make sure to move the file to the location: <strong>/usr/local/bin/chromedriver</strong></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>That’s it for the installations! Let’s move on and explore the Visual UI test script in depth.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Run the Visual UI Test Script locally</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>You can find the source code demo of this article on this GitHub <a target="_blank" href="https://github.com/bhaidar/applitools-appium-aws" rel="noopener noreferrer">repo</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Let’s explore the main test script in this repo.</p>
<!-- /wp:paragraph -->

<!-- wp:embed {"url":"https://gist.github.com/bhaidar/52eba6619c09759f59d30d29f097eeb3","align":"center"} -->
<figure class="wp-block-embed aligncenter"/><!-- /wp:embed --><!-- wp:paragraph --><p>The test script starts by importing the <a target="_blank" href="https://www.npmjs.com/package/selenium-webdriver" rel="noopener noreferrer">selenium-webdriver</a> NPM package.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>It imports a bunch of objects from the <a target="_blank" href="https://www.npmjs.com/package/@applitools/eyes-selenium" rel="noopener noreferrer">@applitools/eyes-selenium</a> NPM package.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>It constructs a <a target="_blank" href="https://help.applitools.com/hc/en-us/articles/360006914772-Batching" rel="noopener noreferrer">BatchInfo</a> object used by Applitools API. </p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">const batchInfo = new BatchInfo("AWS Device Farm");
batchInfo.id = process.env.BATCH_ID
batchInfo.setSequenceName('AWS Device Farm Batches');</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>It then creates the <strong>Eyes</strong> object that we will use to interact with the Applitools API.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">// Initialize the eyes SDK<br/>let eyes = new Eyes();<br/>eyes.setApiKey(process.env.APPLITOOLS_API_KEY);<br/>eyes.setLogHandler(new FileLogHandler(true));<br/>eyes.setForceFullPageScreenshot(true)<br/>eyes.setStitchMode(StitchMode.CSS)<br/>eyes.setHideScrollbars(true)<br/>eyes.setBatch(batchInfo);</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>It’s so important to set the Applitools API key at this stage. Otherwise, you won’t be able to run this test. The code above also directs the Applitools API logs to a File located at the root of the project under the name of <strong>eyes.log</strong>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Next, we define the <strong>device capabilities </strong>that we are going to send to Appium.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">const capabilities = {<br/>        platformName: "Android",<br/>        deviceName: "Android Emulator",<br/>        automationName: "UiAutomator2",<br/>        browserName: 'Chrome',<br/>        waitforTimeout: 30000,<br/>        commandTimeout: 30000,<br/>    };<br/>    if (process.env.APPIUM_ENV === "Local") {<br/>        capabilities["avd"] = 'Pixel_XL_API_29';<br/>    }</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>We are using an Android emulator to run our test script over a Chrome browser with the help of the <strong>UIAutomator 2</strong> library.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>We need to set the <strong>avd</strong> capability only when running this test script locally. For this property, grab the AVD ID of the Android Device Emulator we set above.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Now, we create and build a new <strong>WebDriver</strong> object by specifying the Appium Server local URL and the device capabilities as:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">const LOCAL_APPIUM = "http://127.0.0.1:4723/wd/hub";<br/>let driver = new webdriver<br/>        .Builder()<br/>        .usingServer(LOCAL_APPIUM)<br/>        .withCapabilities(capabilities)<br/>        .build();</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Appium is configured to listen on <strong>Port 4723</strong> under the path of <strong>/wd/hub</strong>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The rest of the script is usual Applitools business. In brief, the script:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Opens a new Applitools test session</li><li>Sends a command to navigate the browser to <a target="_blank" href="https://us.vuejs.org/" rel="noopener noreferrer">https://us.vuejs.org/</a></li><li>Grabs the page title and displays it on screen.</li><li>Clicks the Burger Button to expand the menu on a Mobile device.</li><li>Finds the <strong>Location</strong> section on the page.</li><li>Finally, it prints the <strong>H2</strong> text of the Location section.</li></ul><!-- /wp:list --><!-- wp:paragraph --><p>Notice that the script asserts two Eyes SDK Snapshots. The first captures the home page of the website, while the second captures the Location section.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Finally, some important cleanup is happening to close the WebDriver and Eyes SDK sessions.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Open the <strong>package.json</strong> file, and locate the two scripts there:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">"appium": "appium --chromedriver-executable /usr/local/bin/chromedriver --log ./appium.log",<br/>"test": "node appium.js"</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>The first runs and starts the Appium Server, and the second to run the test script.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Let’s first run the Appium server by issuing this command:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">npm run-script appium</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Then, once Appium is running, let’s run the test script by issuing this command:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">npm run-script test</pre>
<!-- /wp:preformatted -->

<!-- wp:heading {"level":3} -->
<h3>Verify Test Results on Applitools Test Manager</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Login to the Applitools Test Manager located at: <a target="_blank" href="https://applitools.com/users/login" rel="noopener noreferrer">https://applitools.com/users/login</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>You will see the following test results:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","width":773,"height":521} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh5.googleusercontent.com/-aaB0dRAPftq05axExS-YvwyJMThhloj5obfdt3PWVRAoVNi_7A-m8GfCtzkjHHBFK_8wWKjVoJ8aUt1ZqxtCDPEZC2UesUx_q-1p_3tEb7_m4H3PrGphQV0k65OKq4BbZrkA618" alt="" width="773" height="521"/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>The two snapshots have been recorded!</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>Run the Visual UI Test Script on AWS Device Farm</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Now that the test runs locally, let’s run it on AWS Device Farm. Start by creating a new account on Amazon Web Service website.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Login to your AWS account on this page: <a target="_blank" href="https://console.aws.amazon.com/devicefarm" rel="noopener noreferrer">https://console.aws.amazon.com/devicefarm</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Create a new project by following the steps below:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center"} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="https://lh4.googleusercontent.com/K5ch_ROMihJ_gwUxvXouY6qH1iaI72Xs0S2DhlYRBRWzkmbfB7m-fl8-jdXxgMWyGDGdUSh-u6zV-tSLuWsVFv5mNmOjQqV_WY10P0TbvQaBPowNiVZKRYPsnB0IRU4vYLZORnhG" alt=""/></figure></div>
<!-- /wp:image -->

<!-- wp:list -->
<ul><li>Select the <strong>Mobile Device Project</strong> and name your project <strong>Appium.</strong></li><li>Click the <strong>Create project</strong> button.</li></ul><!-- /wp:list --><!-- wp:image {"align":"center"} --><div class="wp-block-image"><figure class="aligncenter"><img src="https://lh3.googleusercontent.com/HP77sUw1BAvrBz2FxsbHlf0cTE1wVW59F3dJTWJB4IWyMNVaJK6pYBXUL105EXx0o0wajBfMZRpUwGbctqkhWrG6qf5Ihogs9MDMTRpj0Lwbj6XmXwsYcnXSO4RVxPSrT4bnzFOx" alt=""/></figure></div>
<!-- /wp:image -->

<!-- wp:list -->
<ul><li>Locate and click the <strong>+ Create a new run</strong> button.</li></ul><!-- /wp:list --><!-- wp:image {"align":"center","width":717,"height":483} --><div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh6.googleusercontent.com/WxtjESBUCALz_EA3xI9nlKQsyjJy0ecICmas2R65zoX9kkROkAeSdDMVffzf_6pGG293fHJxOEdW6U1qgy40pJh1xSzvTGi3FKL-MpzDncpG83WfcWDnZImfFYN1VWISCFceoFhu" alt="" width="717" height="483"/></figure></div>
<!-- /wp:image -->

<!-- wp:list -->
<ul><li>Select the <strong>HTML5</strong> option since we are testing a Web Page on a mobile device. </li><li>Assign your test run a name. </li><li>Click the <strong>Next step</strong> button.</li></ul><!-- /wp:list --><!-- wp:image {"align":"center","width":754,"height":508} --><div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh3.googleusercontent.com/MPHgQPUxGe-nLRS5pk2uIg9s-uA0yMNv4F7kpcsvcvrXigeNmQMUhuHq7JYP1ceJAP_YiLSuzlQwhd2uXVCyz667hGJlvekaqAPJcvmDl-x2JIisvGDSpsVPJl-szn3Iwdmm6hSW" alt="" width="754" height="508"/></figure></div>
<!-- /wp:image -->

<!-- wp:list -->
<ul><li>Select the <strong>Appium Node.js</strong> test runner</li><li>Upload your tests packaged in a zip file.</li></ul><!-- /wp:list --><!-- wp:paragraph --><p>Let’s package our app in a zip file in order to upload it at this step.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Switch back to the code editor, open a command window, and run the following:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">npm install</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>This command is essential to make sure all the NPM package dependencies for this app are installed.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">npm install -g npm-bundle</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>The command above installs the <a target="_blank" href="https://www.npmjs.com/package/npm-bundle" rel="noopener noreferrer">npm-bundle NPM package</a> globally on your machine.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Then, run the command to package and bundle your app:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">npm-bundle</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>The command bundles and packages your app files, and folders, including the <strong>node_modules</strong> folder.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The output of this step creates the file with the <strong>.tgz extension</strong>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The final step before uploading is to compress the file by running the command:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">zip -r appium-aws.zip *.tgz </pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Name the file whatever you wish.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Now you can upload the<strong> .zip </strong>file to AWS Device Farm.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Once the file uploads, scroll down the page to edit the <strong>.yaml</strong> file of this test run like so:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center","width":745,"height":502} -->
<div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh4.googleusercontent.com/BKBeid3y8vX-nR2bmnL3LZAc95c_sPm5qpLgLdq9WHpv3FkI7ryW_ieuzIwH31YhXg4tJ_dlRIaaSrehxaLC_Zh_7UFdNtSfBWD6vaO1PUDWoet7mTDhA4th8k5YFCvyy3eA2DRb" alt="" width="745" height="502"/></figure></div>
<!-- /wp:image -->

<!-- wp:list -->
<ul><li>Make sure you insert your Applitools API Key as shown in the diagram.</li><li>Add the <strong>node appium.js</strong> command to run your test script.</li><li>Click the <strong>Save Testspec</strong> file.</li></ul><!-- /wp:list --><!-- wp:image {"align":"center","width":765,"height":515} --><div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh3.googleusercontent.com/BLZFaFRtnQ2Cr0AdAsYIGP3Agjw2L5O0QLhVN-DI6xLvlVYJjUPwC0BggLmy8Q5GwVH0Su2wTu8V8k_W3sx2q6lwVXg1g24tP8ZlQ_fMRRIZK9OGHjA6nbd6yJVX9cTx0jTJhlzs" alt="" width="765" height="515"/></figure></div>
<!-- /wp:image -->

<!-- wp:list -->
<ul><li>You can name it anything you want.</li></ul><!-- /wp:list --><!-- wp:image {"align":"center","width":724,"height":488} --><div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh5.googleusercontent.com/Jm9EpP4RrLIQ_klZeQxJDOjDaet1w8whfvV1gHmt5ZOyC6mnSvfAb-s2CZOllA5AdZD_BMnRmFjAnf3hiOUwItWfMDUnilMyQ7rA0Af03keZUd_V2vwtzskAqweNN0DqPVBeOHBa" alt="" width="724" height="488"/></figure></div>
<!-- /wp:image -->

<!-- wp:list -->
<ul><li>It’s time to select the devices that you want to run the test script against. I will pick up a customized list of devices. Therefore, click the <strong>Create a new device pool</strong> button.</li></ul><!-- /wp:list --><!-- wp:image {"align":"center","width":748,"height":504} --><div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh3.googleusercontent.com/GVru0vbpwoDqQ_b2CgSOwMynzEHxzSaFQRDoMi34rsmZBkGW-GVqHrkhhA_GWpmNhKXaZtSOoH97AI_QhoFqGALjjBcroauUKBNifJ3A3z0A7-3pra4ymdl5WeBrna6oCyribBut" alt="" width="748" height="504"/></figure></div>
<!-- /wp:image -->

<!-- wp:list -->
<ul><li>Give this new pool a name.</li><li>Pick up the selected Android Devices. You may select others too.</li><li>Click the <strong>Save device pool</strong> button.</li></ul><!-- /wp:list --><!-- wp:image {"align":"center","width":740,"height":499} --><div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh3.googleusercontent.com/7MFCVOlx9oESfn8Apksbe9odAzk-hhe-kth2BQPT1_V32qCVekR8aW8r8xLBk6OgGdHtyhgZhIPh4aZVZKA79sFMtUYk_168i1GdbbaWgaODrPbJqJqVr7Tfnfh3DvfxEzWwAahk" alt="" width="740" height="499"/></figure></div>
<!-- /wp:image -->

<!-- wp:list -->
<ul><li>Now, you can see the new device pool selected with the devices listed. </li><li>Click the <strong>Next step</strong> button.</li></ul><!-- /wp:list --><!-- wp:image {"align":"center","width":725,"height":488} --><div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh4.googleusercontent.com/JhgX_C2uG-DwJLrflWanNbTaGHuBBHDcSCDBRLUGZ5TYxYIKOeLkN0FMlEUCbsZBYbPPtQcVR6entcgVrKP-fJvCUDlxqhUUEPscRSLRUEtsMOdxTKPNZTLC_1PUktzY7jTJEXj_" alt="" width="725" height="488"/></figure></div>
<!-- /wp:image -->

<!-- wp:list -->
<ul><li>Locate and click the <strong>Confirm and start run </strong>button.</li></ul><!-- /wp:list --><!-- wp:image {"align":"center","width":715,"height":482} --><div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh6.googleusercontent.com/oDgZc6C16rCvARzaPuQYw7dekgNbbFgPpymCX_RE6Pe7JuLDF04d0-4PT7wR3FvQqj8nP0w2t1UpGdUKYiaOpuw7efpk-46b7I12fBzEi5Jqm9CzqrbEW3VNAlDrBvHR_Jml-L_S" alt="" width="715" height="482"/></figure></div>
<!-- /wp:image -->

<!-- wp:list -->
<ul><li>The test run starts!</li><li>Select the test run listed.</li></ul><!-- /wp:list --><!-- wp:image {"align":"center","width":753,"height":507} --><div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh5.googleusercontent.com/LsEQ5J9z0KmP50G-M5ZR1hv5efT2gWsWCMZ9HYR9ayUO2u5WXsXZ2vt4Z15cxRggemNyDbxlc0cROgp2urazJXXKhJY2LjLkVcLzfGJa8kQoIQcji2X8vEYkTnN7W3gZEQ1GM9Go" alt="" width="753" height="507"/></figure></div>
<!-- /wp:image -->

<!-- wp:list -->
<ul><li>You can watch the progress on both devices as the test is running. Usually, this step takes a bit of time to run and complete.</li></ul><!-- /wp:list --><!-- wp:image {"align":"center","width":708,"height":477} --><div class="wp-block-image"><figure class="aligncenter is-resized"><img src="https://lh3.googleusercontent.com/TH5ef3h-NFTHAP9W7zPdCqSscmqrfxwT9gRkkt-0QQtltRIT7th0R-NGCJBuYXG8h_F7h-U0S4bqek92PwfEqX9o8PNL-D_1PPOv216bK_EZYLV-KSSEMlp4InyyTcRJGQNSqGBf" alt="" width="708" height="477"/></figure></div>
<!-- /wp:image -->

<!-- wp:list -->
<ul><li>Finally, the results are displayed clearly, and in our case, all the green indicates a pass.</li></ul><!-- /wp:list --><!-- wp:heading {"level":3} --><h3>Verify Test Results on Applitools Test Manager</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Switch back to the Applitools Test Manager, and verify the results of this second run via AWS Device Farm.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"align":"center"} -->
<div class="wp-block-image"><figure class="aligncenter"><img src="https://lh3.googleusercontent.com/-wMgStRutGevL9GU-5V8hXkAQjKc8SuvA2t9vKeeTZxBqiIgR4vNX7beXRlviPRPytDpC7ZHlroJE_QA1441k2yFFVQHB9IDT7Ev_Qb5FVUu18q8qri7SGpHvDkiaBsFRLolJD2z" alt=""/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>As expected, we get exactly the same results as running the test script locally.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Conclusion</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Given the massive integrations that Applitools offers with its rich SDKs, we saw how easily and quickly we can run our Visual UI tests in the cloud using the AWS Device Farm service. This service, and similar services, enrich the Visual regression testing ecosystem, and make perfect sense when performing them.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>For More Information</h2>
<!-- /wp:heading -->

<!-- wp:list -->
<!-- /wp:list --><!-- wp:paragraph -->
<!-- /wp:paragraph -->								
			</div>
<br>
<br><a href="https://applitools.com/blog/visual-testing-appium-amazon/">Source link </a>]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
