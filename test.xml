<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>QE Blog</title>
	<atom:link href="http://wp.qe-blog.10.50.222.172.xip.io/feed/" rel="self" type="application/rss+xml" />
	<link>http://wp.qe-blog.10.50.222.172.xip.io</link>
	<description>Where we share news, resources, and latest trends in testing</description>
	<lastBuildDate>Fri, 22 Jan 2021 21:57:10 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.6</generator>

<image>
	<url>http://wp.qe-blog.10.50.222.172.xip.io/wp-content/uploads/2020/03/cropped-Robot-icon-32x32.jpg</url>
	<title>QE Blog</title>
	<link>http://wp.qe-blog.10.50.222.172.xip.io</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Microsoft Edge, Google Chrome Roll Out Password Protection Tools</title>
		<link>http://wp.qe-blog.10.50.222.172.xip.io/microsoft-edge-google-chrome-roll-out-password-protection-tools/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 22 Jan 2021 21:57:10 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Chrome]]></category>
		<category><![CDATA[Edge]]></category>
		<category><![CDATA[Google]]></category>
		<category><![CDATA[Microsoft]]></category>
		<category><![CDATA[Password]]></category>
		<category><![CDATA[protection]]></category>
		<category><![CDATA[Roll]]></category>
		<category><![CDATA[Tools]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.172.xip.io/microsoft-edge-google-chrome-roll-out-password-protection-tools/</guid>

					<description><![CDATA[The new tools on Chrome and Edge will make it easier for browser users to discover &#8211; and change &#8211;]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />The new tools on Chrome and Edge will make it easier for browser users to discover &#8211; and change &#8211; compromised passwords.<br />
<br /><br />
<br /><a href="https://threatpost.com/microsoft-edge-google-chrome-roll-out-password-protection-tools/163272/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Amazon Kindle RCE Attack Starts with an Email</title>
		<link>http://wp.qe-blog.10.50.222.172.xip.io/amazon-kindle-rce-attack-starts-with-an-email/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 22 Jan 2021 21:55:34 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Amazon]]></category>
		<category><![CDATA[Attack]]></category>
		<category><![CDATA[Email]]></category>
		<category><![CDATA[Kindle]]></category>
		<category><![CDATA[RCE]]></category>
		<category><![CDATA[starts]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.172.xip.io/amazon-kindle-rce-attack-starts-with-an-email/</guid>

					<description><![CDATA[The &#8220;KindleDrip&#8221; attack would have allowed attackers to siphon money from unsuspecting victims. Source link]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />The &#8220;KindleDrip&#8221; attack would have allowed attackers to siphon money from unsuspecting victims.<br />
<br /><br />
<br /><a href="https://threatpost.com/amazon-kindle-attack-email/163282/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Fast, Efficient and Effective Cross Browser Testing</title>
		<link>http://wp.qe-blog.10.50.222.172.xip.io/fast-efficient-and-effective-cross-browser-testing/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 22 Jan 2021 19:36:30 +0000</pubDate>
				<category><![CDATA[Automation]]></category>
		<category><![CDATA[browser]]></category>
		<category><![CDATA[Cross]]></category>
		<category><![CDATA[Effective]]></category>
		<category><![CDATA[Efficient]]></category>
		<category><![CDATA[Fast]]></category>
		<category><![CDATA[testing]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.172.xip.io/fast-efficient-and-effective-cross-browser-testing/</guid>

					<description><![CDATA[What do you think about cross browser testing? Developers likely develop on only one browser – and maybe only one]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<p>What do you think about <a target="_blank" href="https://applitools.com/cross-browser-testing/" rel="noopener">cross browser testing</a>? </p>
<p>Developers likely develop on only one browser – and maybe only one operating system. How does an app maker ensure that defects on other browsers will not escape to their user base? In theory, cross browser testing can help companies catch product defects before products get released to customers. But the legacy approach – setting up a bunch of parallel devices and running tests across each – incurs significant engineering skill and resource cost.</p>
<h2 id="h-choose-your-cross-browser-testing-camp">Choose Your Cross Browser Testing Camp</h2>
<p>With this legacy infrastructure requirement, most engineering managers find themselves in one of two camps:</p>
<figure class="wp-block-table">
<table>
<tbody>
<tr>
<td class="has-text-align-center" data-align="center">
<p><strong>CAMP 1: </strong></p>
<p>CROSS BROWSER TESTING </p>
<p>NECESSARY IF INEFFICIENT</p>
</td>
<td class="has-text-align-center" data-align="center">
<p><strong>CAMP 2: </strong></p>
<p>CROSS-BROWSER TESTING </p>
<p>NOT WORTH THE EFFORT</p>
</td>
</tr>
</tbody>
</table>
</figure>
<p>Managers in Camp 1 run cross browser tests. These managers have been held accountable for missed bugs due to an untested platform in the past. They know that cross browser testing provides coverage, even though it requires resources for infrastructure deployment and test maintenance. </p>
<p>Managers in Camp 2 have not experienced significant field bugs that were caused by untested behavior in different browsers. Camp 2 managers have evaluated cross browser testing. They have concluded that cross browser testing has a low likelihood of exposing unique bugs. </p>
<p>So, yes, Camp 1 and Camp 2 share a common view of cross browser testing – slow, cumbersome to manage with limited effectiveness in catching defects. Camp 1 people have been burned by a bug they could have caught with cross browser testing. Members of Camp 2 have not.</p>
<h2 id="h-camp-3-use-modern-cross-browser-testing">Camp 3 – Use Modern Cross Browser Testing</h2>
<p>The first two camps get stifled by the legacy approach to cross browser testing. In the legacy approach, you take your existing test infrastructure and port it from your browser of choice (Chrome, Firefox, Edge, Safari) on your test operating system and check out combinations of browsers and operating systems. You might even check out different viewport sizes to validate responsive app behavior.</p>
<p>Camp 3 uses Modern Cross Browser Testing, made possible by <a target="_blank" href="https://applitools.com/applitools-ai-and-deep-learning/" rel="noopener">Applitools Visual AI</a> and <a target="_blank" href="https://applitools.com/product-ultrafast-test-cloud/" rel="noopener">Applitools Ultrafast Grid</a>. Applitools Visual AI provides highly accurate visual comparisons between a captured screen and a previous baseline. With Applitools Ultrafast Grid, the Visual AI screen capture also returns the DOM of the captured screen.  Then, Applitools Ultrafast Grid reruns the DOM against each target browser/operating system/viewport combination specified by the tester. For each target, Applitools captures the resulting screen and compares it against the relevant baseline.</p>
<p>Modern cross browser testing leverages key insights:</p>
<ul>
<li>The bulk of apps generate a single DOM response regardless of the target browser;</li>
<li>Cross browser tests expose visual defects, as functional defects get caught elsewhere;</li>
<li>Legacy test code, which inspects elements of the DOM, requires lots of code to capture and compare all the visual elements for an app response;</li>
<li>Visual AI makes cross browser test automation feasible and effective.</li>
</ul>
<p>At Applitools, we know that our Ultrafast Grid, combined with Visual AI, create a simple approach to cross browser testing. We overcome all the objections and complaints from both Camp 1 and Camp 2. And our approach contradicts the conventional wisdom of engineers who sit in Camp 1 and in Camp 2.</p>
<p>We found ourselves stuck with a question: </p>
<p><em>How do you get a group of really smart people who think one way to change their minds?</em></p>
<p>Evidence? Maybe. Let them try it for themselves? Possibly – but why would someone want to try something out? </p>
<p><em>What if you give them an incentive? Like a contest?</em></p>
<p>Applitools had a lot of experience from the <a target="_blank" href="https://applitools.com/2019-ultrafast-visual-ai-hackathon-winners/" rel="noopener">2019 Visual AI Rockstar Hackathon</a>. We knew we could get engineers to try their hand at using Visual AI. Perhaps, we could get a similar response with another hackathon pitting legacy cross browser testing against Visual AI plus Ultrafast Grid. </p>
<p>So, we ran the <a target="_blank" href="https://applitools.com/blog/ultrafast-cross-browser-hackathon/" rel="noopener">Applitools Cross Browser Testing Hackathon</a> in June 2020. My next few blog posts will go through the hackathon in detail and present you with some of the results and conclusions. They include:</p>
<ul>
<li>Ultrafast Grid provides faster test execution</li>
<li>You need fewer test runs with Ultrafast Grid</li>
<li>Your tests require less coding (and less time debugging test code)</li>
<li>Ultrafast grid needs no additional hardware (whether onsite or provided by a service)</li>
<li>Cross browser tests with Ultrafast Grid are easier to maintain</li>
<li>A large number of the participants who were not previously inclined towards cross browser testing would recommend Visual AI and Ultrafast Grid.</li>
</ul>
<p>You can skip the blog posts and <a target="_blank" href="https://applitools.com/modern-cross-browser-testing-report/" rel="noopener">read the full report</a> instead. </p>
<p>You can read <a target="_blank" href="https://www.linkedin.com/in/marie-drake/" rel="noopener">Marie Drake’s</a><a target="_blank" href="https://applitools.com/blog/can-automated-cross-browser-testing-be-ultrafast/" rel="noopener">summary of her experience as a Hackathon participant</a> and winner.</p>
<p>Or, you can wait for my next blog post.</p>
</p></div>
<p><br />
<br /><a href="https://applitools.com/blog/effective-cross-browser-testing/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>ADT Tech Hacks Home-Security Cameras to Spy on Women</title>
		<link>http://wp.qe-blog.10.50.222.172.xip.io/adt-tech-hacks-home-security-cameras-to-spy-on-women/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 22 Jan 2021 19:08:00 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[ADT]]></category>
		<category><![CDATA[Cameras]]></category>
		<category><![CDATA[Hacks]]></category>
		<category><![CDATA[HomeSecurity]]></category>
		<category><![CDATA[Spy]]></category>
		<category><![CDATA[Tech]]></category>
		<category><![CDATA[women]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.172.xip.io/adt-tech-hacks-home-security-cameras-to-spy-on-women/</guid>

					<description><![CDATA[A former ADT employee pleads guilty of accessing customers’ cameras so he could spy on them. Source link]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />A former ADT employee pleads guilty of accessing customers’ cameras so he could spy on them.<br />
<br /><br />
<br /><a href="https://threatpost.com/adt-hacks-home-security-cameras/163271/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Discord-Stealing Malware Invades npm Packages</title>
		<link>http://wp.qe-blog.10.50.222.172.xip.io/discord-stealing-malware-invades-npm-packages/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 22 Jan 2021 18:35:24 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[DiscordStealing]]></category>
		<category><![CDATA[Invades]]></category>
		<category><![CDATA[Malware]]></category>
		<category><![CDATA[npm]]></category>
		<category><![CDATA[Packages]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.172.xip.io/discord-stealing-malware-invades-npm-packages/</guid>

					<description><![CDATA[The CursedGrabber malware has infiltrated the open-source software code repository. Source link]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />The CursedGrabber malware has infiltrated the open-source software code repository.<br />
<br /><br />
<br /><a href="https://threatpost.com/discord-stealing-malware-npm-packages/163265/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Ransomware Attackers Publish 4K Private Scottish Gov Agency Files</title>
		<link>http://wp.qe-blog.10.50.222.172.xip.io/ransomware-attackers-publish-4k-private-scottish-gov-agency-files/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 22 Jan 2021 17:30:52 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Agency]]></category>
		<category><![CDATA[Attackers]]></category>
		<category><![CDATA[Files]]></category>
		<category><![CDATA[Gov]]></category>
		<category><![CDATA[Private]]></category>
		<category><![CDATA[Publish]]></category>
		<category><![CDATA[Ransomware]]></category>
		<category><![CDATA[Scottish]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.172.xip.io/ransomware-attackers-publish-4k-private-scottish-gov-agency-files/</guid>

					<description><![CDATA[Up to 4,000 stolen files have been released by hackers who launched a ransomware attack against the Scottish Environmental Protection]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />Up to 4,000 stolen files have been released by hackers who launched a ransomware attack against the Scottish Environmental Protection Agency on Christmas Eve.<br />
<br /><br />
<br /><a href="https://threatpost.com/attackers-publish-private-scottish-gov-files/163254/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>4 ways to translate software development into business value</title>
		<link>http://wp.qe-blog.10.50.222.172.xip.io/4-ways-to-translate-software-development-into-business-value/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 22 Jan 2021 16:00:00 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Business]]></category>
		<category><![CDATA[development]]></category>
		<category><![CDATA[software]]></category>
		<category><![CDATA[translate]]></category>
		<category><![CDATA[ways]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.172.xip.io/4-ways-to-translate-software-development-into-business-value/</guid>

					<description><![CDATA[Even in companies with good culture, there isn&#8217;t always a strong desire for business and engineering to understand each other.]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<p>Even in <a target="_blank" href="https://techbeacon.com/app-dev-testing/how-i-created-culture-quality" rel="noopener">companies with good culture</a>, there isn&#8217;t always a strong desire for business and engineering to understand each other. There&#8217;s a big gap between them in terms of frame of reference, language, and expectations.</p>
<p>One person, the vice president of engineering—part executive and part developer—uniquely lives in both worlds and therefore has an opportunity to translate between them. The best of them embrace that role as a core part of their day-to-day responsibilities and one of the best ways they can help their company succeed.</p>
<p>Being a great translator is more than knowing how to speak both languages. Here are four strategies that will help any software development leader become successful at <a target="_blank" href="https://techbeacon.com/devops/how-demonstrate-business-value-software" rel="noopener">translating development work into business value</a>.</p>
<h3>1. Connect development metrics with the overall goals of the business</h3>
<p>The vice president of marketing has dashboards that show the number of marketing qualified leads and sales qualified leads. The vice president of sales has reports showing how many deals are in each phase of the sales cycle. And the vice president of customer success has a tool to show customer engagement and renewal metrics.</p>
<p>Great vice presidents of engineering should have dashboards, too. The focus should be on leading indicators that monitor the quality of the process rather than focusing on outputs or trailing indicators such as how many lines of code the team wrote or even how many bugs were found.</p>
<p><em>Figure 1. Software development cycle time measures the amount of time from when work started to when the product was delivered. This metric, borrowed from lean manufacturing, is one of the most important for software development teams and affects most other business and engineering-related KPIs as well. Source: LinearB</em></p>
<p>With this data, you can draw a clear connection between development key performance indicators (KPIs) and the overall goals for the business. For example, if you want to predict how fast you&#8217;re shipping new value to customers, you show cycle time, and if you want to predict how satisfied customers are with the quality of the product, you need to show the quality of the process with pull request review coverage and review depth.</p>
<p>Bringing consistent metrics to your staff meeting each week will help elevate the development process from being an enigma to being a well-understood function in the business.</p>
<h3>2. Teach software development forecasting to your executive team</h3>
<p>The most common questions a vice president of engineering gets asked concern the timing of a new feature being shipped. This seems like a fair and obvious question to ask. But look more closely. After a while, the CEO stops asking the vice president of sales, &#8220;Hey, are we going to hit our number this quarter?&#8221; because the answer can be found by looking at the revenue dashboard and seeing:</p>
<ul>
<li>The number of days left in the quarter</li>
<li>The number of deals and amount of revenue already closed</li>
<li>The number of deals left open and the total contract value</li>
<li>The number of deals open across each phase of the sales process</li>
</ul>
<p>Then they can compare this data to previous quarters to see if they are on, ahead of, or behind schedule. For engineering vice presidents, part of the job is to teach the CEO and the other business leaders to look at their department in the same way.</p>
<p>And although forecasting is a tough task, if those leaders want to know whether feature XYZ is on time, they can look at a dashboard such as this:</p>
<p><em>Figure 2. Show business stakeholders what an iteration schedule looks like in dashboard form to better explain how time allotment is connected to work in progress (WIP) and work completed (branches). Source: LinearB</em></p>
<p>Over time, the CEO and the vice president&#8217;s peers will develop data-driven intuition (yes, this is a thing; just read Malcom Gladwell&#8217;s <em><a target="_blank" href="https://www.amazon.com/Blink-Power-Thinking-Without/dp/0316010669" rel="nofollow noopener">Blink: The Power of Thinking Without Thinking</a></em>). They will understand whether you are currently in a hitting, missing, or overachieving trajectory. So instead of asking, &#8220;Are we going to hit our date?&#8221; they&#8217;ll say, &#8220;It looks as if you are slightly behind schedule compared to last week/iteration. What can I do to help?&#8221;</p>
<p>Instead of saying, &#8220;Customer ABC really needs the new feature to work, so no bugs this time,&#8221; they can gain confidence that the vice president of engineering and the dev team leads will shift resources to control when there are too many high-risk items open that generate <a target="_blank" href="https://techbeacon.com/devops/drowning-technical-debt-worse-youre-trapped-ponzi-scheme" rel="noopener">more technical debt</a>.</p>
<p>That&#8217;s the goal: to help the CEO and other executives understand how they see their business so they can be a more active participant and so they can <a target="_blank" href="https://techbeacon.com/app-dev-testing/how-software-teams-can-measure-anything-qppe-metrics-model" rel="noopener">start measuring the process of software development</a>, not just the outcome.</p>
<h3>3. Build cross-team relationships and empathy through data</h3>
<p>It takes a long time to teach someone to speak a new language. Furthermore, if the language isn&#8217;t practiced in real life every day, people tend to lose the skill over time. The best vice presidents of engineering know they can&#8217;t let this happen. Building strong relationships with their peers is critical to creating rapport that constantly reinforces the message.</p>
<p>When stakeholders are only asking about metrics such as feature delivery deadlines or bugs, great engineering leaders teach them how to view software development differently. For example, they quantify for the business leaders what the impact of changing dev team priorities at the last minute can be and help them understand why developers don&#8217;t reply to email quickly. To be a great partner, the key is to understand what motivates teams and what KPIs they care about most.</p>
<p>One goal should be to start every morning by looking at data to determine the health of the business. Not just any data, though. The best vice presidents start with cycle time, which is the most accurate indicator of process efficiency, then look at the team WIP to validate that the team is not in overload.</p>
<p>They also look at other leading indicators such as pull request pickup time and pull request review time to detect bottlenecks that can affect the team&#8217;s current sprint and their performance over time.</p>
<p>By using consistent metrics to measure the dev team’s process, they are ensuring that the entire team speaks in a consistent language about what they do. This is the first step in being able to <a target="_blank" href="https://techbeacon.com/enterprise-it/why-you-should-drop-it-speak-measure-success-business-terms" rel="noopener">speak a common language</a> with the rest of the business. It is imperative engineering leaders translate business functions to their team.</p>
<p>Being able to see the customer perspective and the big picture is a critical skill for developers to acquire.</p>
<h3>4. Help teams gain skills with a shared lexicon, connect the dots between code and customers</h3>
<p>The best vice presidents of engineering help teams by creating a common vocabulary:</p>
<ul>
<li><strong>Sales cycle time </strong>is the length of time it takes a sales rep to close a deal on average.</li>
<li><strong>Engineering cycle time</strong> is the length of time it takes a dev to deliver a work item on average.</li>
<li><strong>High-risk deals </strong>are important deals to the company that may not close.</li>
<li><strong>High-risk branches</strong> are important work items to the company that may not get finished.</li>
</ul>
<p>A lot of this stuff is synonymous, and it helps developers to see that the rest of the business thinks about their day-to-day work in the same way they do.</p>
<p>Great engineering leaders also draw simple connections between code and customers. Developers should talk to customers directly. If that sounds scary to business leaders, think of how much scarier it is to rely on a developer to create a product for someone the developer doesn&#8217;t understand.</p>
<p>At the very least, great vice presidents of engineering can create opportunities for the team to visually see how customers use the product they are building.</p>
<h3>Bridge the divide</h3>
<p>When vice presidents of engineering master this translation, their teams deliver more value to customers and the whole company thinks differently. The executive team gains confidence that forecasting software development is possible, or at least can have the same accuracy as forecasting marketing leads or sales revenue.</p>
<p>The executive team shows interest in the software development process and metrics and understands the implications and trade-offs of their requests. Developers feel as if they work for someone who truly has their back. The business as a whole thinks, “Our engineering team really gets it.”</p>
<p>The starting point to <a target="_blank" href="https://techbeacon.com/app-dev-testing/how-monitor-business-goals-value-stream-management" rel="noopener">translating engineering to execs</a> is finding these key metrics and understanding how to demonstrate team, not individual, performance.</p>
<h4>Keep learning</h4>
</div>
<p><br />
<br /><a href="https://techbeacon.com/app-dev-testing/4-ways-translate-software-development-business-value">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Threat Actors Can Exploit Windows RDP Servers to Amplify DDoS Attacks</title>
		<link>http://wp.qe-blog.10.50.222.172.xip.io/threat-actors-can-exploit-windows-rdp-servers-to-amplify-ddos-attacks/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 22 Jan 2021 12:45:42 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Actors]]></category>
		<category><![CDATA[Amplify]]></category>
		<category><![CDATA[Attacks]]></category>
		<category><![CDATA[DDoS]]></category>
		<category><![CDATA[Exploit]]></category>
		<category><![CDATA[RDP]]></category>
		<category><![CDATA[Servers]]></category>
		<category><![CDATA[Threat]]></category>
		<category><![CDATA[Windows]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.172.xip.io/threat-actors-can-exploit-windows-rdp-servers-to-amplify-ddos-attacks/</guid>

					<description><![CDATA[Netscout researchers identify more than 14,000 existing servers that can be abused by ‘the general attack population’ to flood organizations’]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />Netscout researchers identify more than 14,000 existing servers that can be abused by ‘the general attack population’ to flood organizations’ networks with traffic.<br />
<br /><br />
<br /><a href="https://threatpost.com/threat-actors-can-exploit-windows-rdp-servers-to-amplify-ddos-attacks/163248/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Visual Assertions &#8211; Hype or Reality? &#8211; Automated Visual Testing</title>
		<link>http://wp.qe-blog.10.50.222.172.xip.io/visual-assertions-hype-or-reality-automated-visual-testing/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Thu, 21 Jan 2021 21:26:45 +0000</pubDate>
				<category><![CDATA[Automation]]></category>
		<category><![CDATA[Assertions]]></category>
		<category><![CDATA[automated]]></category>
		<category><![CDATA[Hype]]></category>
		<category><![CDATA[Reality]]></category>
		<category><![CDATA[testing]]></category>
		<category><![CDATA[Visual]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.172.xip.io/visual-assertions-hype-or-reality-automated-visual-testing/</guid>

					<description><![CDATA[There is a lot of buzz around Visual Testing these days. You might have read or heard stories about the]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<p>There is a lot of buzz around Visual Testing these days. You might have read or heard stories about the benefits of visual testing. You might have heard claims like, “more stable code,” “greater coverage,” “faster to code,” and “easier to maintain.” And, you might be wondering, is this a hype of a reality? </p>
<p>So I conducted an experiment to see how true this really is.</p>
<p>I used the instructions from <a target="_blank" href="https://applitools.com/hackathon-v20-3-instructions/" rel="noopener">this</a> recently concluded hackathon to conduct my experiment.</p>
<p>I was blown away by the results of this experiment. Feel free to try out my code, which I published on Github, for yourself. </p>
<p>Before I share the details of this experiment, here are the key takeaways I had from this exercise:</p>
<ol>
<li>Functional Automation is limiting. You only simulate known user behaviors, in predetermined conditions and in the process only validate &amp; verify conditions what you know about. There has to be a more optimized and value generating approach!</li>
<li>The Automation framework should have advanced capabilities like soft assertions and good reporting to allow quick RCA. </li>
<li>Save time by integrating Applitools’ Visual AI Testing with the Ultrafast Grid to increase your test coverage and scale your test executions.</li>
</ol>
<p>Let us now look at details of the experiment.</p>
<p>We need implement the following tests to check the functionality of <a target="_blank" href="https://demo.applitools.com/tlcHackathonMasterV1.html" rel="noopener">https://demo.applitools.com/tlcHackathonMasterV1.html</a></p>
<ol>
<li>Validate details on landing / home page <br />This should include checking headers / footers, filters, displayed items</li>
<li>Check if Filters are working correctly</li>
<li>Check product details for a specific product</li>
</ol>
<p>For this automation, I chose to use Selenium-Java for automation with Gradle as a build tool.</p>
<p>The code used for this exercise is available here: <a target="_blank" href="https://github.com/anandbagmar/visualAssertions" rel="noopener">https://github.com/anandbagmar/visualAssertions</a></p>
<p>Once I spent time in understanding the functionality of the application, I was quickly able to automate the above mentioned tests. </p>
<p>Here is some data from the same.</p>
<p>Refer to <a target="_blank" href="https://github.com/anandbagmar/visualAssertions/blob/main/src/test/java/com/eot/hackathon/HolidayShoppingWithSeTest.java" rel="noopener">HolidayShoppingWithSeTest.java</a></p>
<figure class="wp-block-table">
<table>
<tbody>
<tr>
<td>
<p>Activity</p>
</td>
<td>
<p>Data (Time / LOC / etc.)</p>
</td>
</tr>
<tr>
<td>
<p>Time taken to understand the application and expected tests</p>
</td>
<td>
<p>30 min</p>
</td>
</tr>
<tr>
<td>
<p>Time taken to implement the tests</p>
</td>
<td>
<p>90 min</p>
</td>
</tr>
<tr>
<td>
<p>Number of tests automated</p>
</td>
<td>
<p>3</p>
</td>
</tr>
<tr>
<td>
<p>Lines of code (actual Test method code)</p>
</td>
<td>
<p>65 lines</p>
</td>
</tr>
<tr>
<td>
<p>Number of locators used</p>
</td>
<td>
<p>23</p>
</td>
</tr>
<tr>
<td>
<p>Test execution time:</p>
<p>Part 1: Chrome browser</p>
</td>
<td>
<p>32 sec</p>
</td>
</tr>
<tr>
<td>
<p>Test execution time:</p>
<p>Part 2: Chrome browser</p>
</td>
<td>
<p>57 sec</p>
</td>
</tr>
<tr>
<td>
<p>Test execution time:</p>
<p>Part 3: Chrome: 29 sec</p>
</td>
<td>
<p>29 sec</p>
</td>
</tr>
<tr>
<td>
<p>Test execution time:</p>
<p>Part 3: Firefox: 65 sec</p>
</td>
<td>
<p>65 sec</p>
</td>
</tr>
<tr>
<td>
<p>Test execution time:</p>
<p>Part 3: Safari: 35 sec</p>
</td>
<td>
<p>35 sec</p>
</td>
</tr>
</tbody>
</table>
</figure>
<h2 id="h-observations">Observations</h2>
<p>A few interesting observations from this test execution:</p>
<ol>
<li>I added only superficial validations for each test.
<ul>
<li>I only added validations for the number of filters and items in each filter. But I have not added the validations for actual content of the filters. </li>
<li>To add actual validations for each aspect of the page will take 8-10x the time taken for my current implementation, and the number of locators and assertions would also probably increase by 4-6x of the current numbers. </li>
<li>Definitely does not seem worth the time and effort.</li>
</ul>
</li>
</ol>
<ol start="2">
<li>The tests would not capture all errors based on the assertions added, as the first assertion failure would cause the test to stop.</li>
<li>In order to check everything, instead of hard assertions, the framework would need to implement and support soft assertions</li>
<li>The test implementation is heavily dependent on the locators in the page. Any small change in the locators will cause the test to fail. Ex: In the Product Details page, the locator of the Footer is different from that of the home page</li>
<li>Scaling: I was limited by how many browsers / devices I could run my tests on. I needed to write additional code to manage browser drivers, and that too only for browsers that I had available on my laptop</li>
</ol>
<p>When I added Applitools Visual AI to the already created Functional Automation (in Step 1), the data was very interesting.</p>
<p>Refer to <a target="_blank" href="https://github.com/anandbagmar/visualAssertions/blob/main/src/test/java/com/eot/hackathon/HolidayShoppingWithEyesTest.java" rel="noopener">HolidayShoppingWithEyesTest.java</a></p>
<figure class="wp-block-table">
<table>
<tbody>
<tr>
<td>
<p>Activity</p>
</td>
<td>
<p>Data (Time / LOC / etc.)</p>
</td>
</tr>
<tr>
<td>
<p>Time taken to add Visual Assertions to existing Selenium tests</p>
</td>
<td>
<p>10 min</p>
</td>
</tr>
<tr>
<td>
<p>Number of tests automated</p>
</td>
<td>
<p>3</p>
</td>
</tr>
<tr>
<td>
<p>Lines of code (actual Test method code)</p>
</td>
<td>
<p>7 lines</p>
</td>
</tr>
<tr>
<td>
<p>Number of locators used</p>
</td>
<td>
<p>3</p>
</td>
</tr>
<tr>
<td>
<p>Test execution time:</p>
<p>Part 1: Chrome browser</p>
</td>
<td>
<p>81 sec (test execution time)</p>
<p>38 sec (Applitools processing time)</p>
</td>
</tr>
<tr>
<td>
<p>Test execution time:</p>
<p>Part 2: Chrome browser</p>
</td>
<td>
<p>92 sec (test execution time)</p>
<p>42 sec (Applitools processing time)</p>
</td>
</tr>
<tr>
<td>
<p>Test execution time: (using <a target="_blank" href="https://applitools.com/product-ultrafast-test-cloud/" rel="noopener">Applitools Ultrafast Test Cloud</a>)</p>
<p>Part 3: Chrome + Firefox + Safari + Edge + iPhone X</p>
</td>
<td>
<p>125 sec (test execution time)</p>
<p>65 sec (Applitools processing time)</p>
</td>
</tr>
</tbody>
</table>
</figure>
<h2 id="h-observations-1">Observations</h2>
<p>Here are the observations from this test execution:</p>
<ol>
<li>My test implementation got simplified
<ul>
<li>Less lines of code</li>
<li>Fewer locators and assertions</li>
<li>Test became easier to read and extend</li>
</ul>
</li>
</ol>
<ol start="2">
<li>Test became more stable
<ul>
<li>Fewer locators and assertions</li>
<li>It does not matter if the locators change for elements in the page as long as the user experience / look and feel remains as expected. (Of course, locators on which I need to do actions using Selenium need to be the same)</li>
</ul>
</li>
</ol>
<ol start="3">
<li>Comprehensive coverage of functionality and user experience
<ul>
<li>My test focuses on specific functional aspects – but with Visual Assertions, I was able to get validation of the functional change from the whole page, automatically</li>
</ul>
</li>
</ol>
<p>See these below examples of the nature of validations that were reported by Applitools:</p>
<p>Version Check – Test 1:</p>
<p></p>
<p>Filter Check – Test 2:</p>
<p><img src="https://applitools.com/wp-content/uploads/2021/01/VisualAssertions-2.png"/></p>
<p>Product Details – Test 3: </p>
<p><img src="https://applitools.com/wp-content/uploads/2021/01/VisualAssertions-3.png"/></p>
<ol start="4">
<li>Scaling test execution is seamless
<ul>
<li>I needed to run the tests only on any 1 browser which is available on my machine. I chose Chrome</li>
<li>With the Applitools Ultrafast Test Cloud, I was able to get results of the functional and visual validations across all supported platforms without any code change, and almost in the same time as a single browser execution. </li>
</ul>
</li>
</ol>
<p><img src="https://applitools.com/wp-content/uploads/2021/01/VisualAssertions-Scaling-4.jpg"/></p>
<p>Lastly, an activity I thoroughly enjoyed in Step 2 was the aspect of deleting code that now became irrelevant because of using Visual Assertions.</p>
<p>To conclude, the experiment made it clear – Visual Assertions are not a hype. The below table shows in summary the differences in the 2 approaches discussed earlier in the post.</p>
<figure class="wp-block-table">
<table>
<tbody>
<tr>
<td>
<p>Activity</p>
</td>
<td>
<p>Pure Functional Testing</p>
</td>
<td>
<p>Using Applitools Visual Assertions</p>
</td>
</tr>
<tr>
<td>
<p>Number of Tests automated</p>
</td>
<td>
<p>3</p>
</td>
<td>
<p>3</p>
</td>
</tr>
<tr>
<td>
<p>Time taken to implement tests</p>
</td>
<td>
<p>90 min (implement + add relevant assertions)</p>
</td>
<td>
<p>–</p>
</td>
</tr>
<tr>
<td>
<p>Time taken to add Visual Assertions to existing Selenium tests</p>
</td>
<td>
<p>–</p>
</td>
<td>
<p>10 min</p>
<p>Includes time taken to delete the assertions and locators that now became irrelevant</p>
</td>
</tr>
<tr>
<td>
<p>Lines of code (actual Test method code)</p>
</td>
<td>
<p>65 lines</p>
</td>
<td>
<p>7 lines</p>
</td>
</tr>
<tr>
<td>
<p>Number of locators used</p>
</td>
<td>
<p>23</p>
</td>
<td>
<p>3</p>
</td>
</tr>
<tr>
<td>
<p>Number of assertions in Test implementation</p>
</td>
<td>
<p>16</p>
<p>This approach validates only specific behavior based on the assertions.</p>
<p>The first failing assertion stops the test. Remaining assertions do not even get executed</p>
</td>
<td>
<p>3 (1 in for each test)</p>
<p>Validates the full screen, captures all regressions and new changes as well in 1 validation</p>
</td>
</tr>
<tr>
<td>
<p>Test execution time:</p>
<p>Chrome + Firefox + Safari browser</p>
</td>
<td>
<p>129 sec</p>
<p>(for 3 browsers)</p>
</td>
<td>
<p>–</p>
</td>
</tr>
<tr>
<td>
<p>Test execution time: (using <a target="_blank" href="https://applitools.com/product-ultrafast-test-cloud/" rel="noopener">Applitools Ultrafast Test Cloud</a>)</p>
<p>Part 3: Chrome + Firefox + Safari + Edge + iPhone X</p>
</td>
<td>
<p>–</p>
</td>
<td>
<p>125 sec (test execution time)</p>
<p>65 sec (Applitools processing time)</p>
<p>(for 4 browsers + 1 device)</p>
</td>
</tr>
</tbody>
</table>
</figure>
<p>Visual Assertions help in the following ways:</p>
<ul>
<li>Make your tests more stable</li>
<li>Lower maintenance as there are less locators to work with</li>
<li>Increase test coverage – you do not need to add assertions for each and every piece of functionality as part of your automation. With Visual Assertions, you will get the full – functional &amp; user experience validation by 1 call</li>
<li>Scaling is seamless – with the Ultrafast Test Cloud, you run your test just once, and get validation results across all supported browsers and devices</li>
</ul>
<p>You can get started with Visual Testing by registering for a free account <a target="_blank" href="https://auth.applitools.com/users/register" rel="noopener">here</a>. Also, you can take this course from the <a target="_blank" href="https://testautomationu.applitools.com/" rel="noopener">Test Automation University</a> on <a target="_blank" href="https://testautomationu.applitools.com/automated-visual-testing-a-fast-path-to-test-automation-success/" rel="noopener">“Automated Visual Testing: A Fast Path To Test Automation Success</a>”</p>
</p></div>
<p><br />
<br /><a href="https://applitools.com/blog/visual-ai-hype-or-reality/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>In the final post in his series on #Selenium4, @shs96c  reviews what&#8217;s new in the Selenium grid (turns out, a lot!). @SeleniumHQ &#8230;</title>
		<link>http://wp.qe-blog.10.50.222.172.xip.io/in-the-final-post-in-his-series-on-selenium4-shs96c-reviews-whats-new-in-the-selenium-grid-turns-out-a-lot-seleniumhq/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Thu, 21 Jan 2021 21:01:58 +0000</pubDate>
				<category><![CDATA[Updates]]></category>
		<category><![CDATA[selenium4]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.172.xip.io/in-the-final-post-in-his-series-on-selenium4-shs96c-reviews-whats-new-in-the-selenium-grid-turns-out-a-lot-seleniumhq/</guid>

					<description><![CDATA[In the final post in his series on #Selenium4, @shs96c reviews what&#8217;s new in the Selenium grid (turns out, a]]></description>
										<content:encoded><![CDATA[
<p>In the final post in his series on #Selenium4, @shs96c  reviews what&#8217;s new in the Selenium grid (turns out, a lot!). @SeleniumHQ <a target="_blank" href="https://t.co/EPdFwUqRqn" rel="noopener">https://t.co/EPdFwUqRqn</a><br />
<br />
<br /><a href="https://twitter.com/saucelabs/statuses/1352360813349232644">Source</a> by <a href="http://t.co/G5CIBvEDvA">Sauce Labs</a></p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
