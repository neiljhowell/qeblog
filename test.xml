<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>QE Blog</title>
	<atom:link href="http://wp.qe-blog.10.50.222.159.xip.io/feed/" rel="self" type="application/rss+xml" />
	<link>http://wp.qe-blog.10.50.222.159.xip.io</link>
	<description>Where we share news, resources, and latest trends in testing</description>
	<lastBuildDate>Tue, 16 Feb 2021 07:15:36 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.6.1</generator>

<image>
	<url>http://wp.qe-blog.10.50.222.159.xip.io/wp-content/uploads/2020/03/cropped-Robot-icon-32x32.jpg</url>
	<title>QE Blog</title>
	<link>http://wp.qe-blog.10.50.222.159.xip.io</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Thunderhead Speeds Quality Delivery with Applitools</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/thunderhead-speeds-quality-delivery-with-applitools/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Tue, 16 Feb 2021 07:15:36 +0000</pubDate>
				<category><![CDATA[Automation]]></category>
		<category><![CDATA[Applitools]]></category>
		<category><![CDATA[Delivery]]></category>
		<category><![CDATA[Quality]]></category>
		<category><![CDATA[Speeds]]></category>
		<category><![CDATA[Thunderhead]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/thunderhead-speeds-quality-delivery-with-applitools/</guid>

					<description><![CDATA[Thunderhead is the recognised global leader in the Customer Journey Orchestration and Analytics market. The ONE Engagement Hub helps global]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<p>Thunderhead is the recognised global leader in the Customer Journey Orchestration and Analytics market. The ONE Engagement Hub helps global brands build customer engagement in the era of digital transformation.  </p>
<p>Thunderhead provides its users with great insights into customer behavior. To continue to improve user experience with their highly-visual web application, Thunderhead develops continuously. How does Thunderhead keep this visual user experience working well? A key component is Applitools.</p>
<h2 id="h-before-using-traditional-output-locators">Before – Using Traditional Output Locators</h2>
<p>Prior to using Applitools, Thunderhead drove its UI-driven tests with Selenium for browser automation and Python as the primary test language. They used traditional web element locators both for setting test conditions and for measuring the page responses.</p>
<p>Element locators have been state-of-the-art for measuring page response because of precision. Locators get generated programmatically. Test developers can find any visual structure on the page as an element.</p>
<p>Depending on page complexity, a given page can have dozens, or even hundreds, of locators. Because test developers can inspect individual locators, they can choose which elements they want to check. But, locators limit inspection. If a change takes place outside the selected locators, the test cannot find the change.</p>
<p>These output locators must be maintained as the application changes. Unmaintained locators can cause test problems by reporting errors because the locator value has changed while the test has not. Locators may also remain the same but reflect a different behavior not caught by a test.</p>
<p>Thunderhead engineers knew about pixel diff tools for visual validation. They also had experience with those tools; they had concluded that pixel diff tools would be unusable for test automation because of the frequency of false positives.</p>
<p>When Thunderhead started looking to improve their test throughput, they came across Applitools. Thunderhead had not considered a visual validation tool, but Applitools made some interesting claims. The engineers thought that AI might be marketing buzz, but they were intrigued by a tool that could abstract pixels into visible elements.</p>
<p>As they began using Applitools, Thunderhead engineers realized that Applitools gave them the ability to inspect an entire page.  Not only that, Applitools would capture visual differences without yielding bogus errors. Soon they realized that Applitools offered more coverage than their existing web locator tests, with less overall maintenance because of reduced code.</p>
<p>The net benefits included:</p>
<ul>
<li>Coverage – Thunderhead could write tests for each visible on-page element on every page</li>
<li>Maintainability – By measuring the responses visually, Thunderhead did not have to maintain all the web element locator code for the responses – reducing the effort needed to maintain tests</li>
<li>Visual Validation – Applitools helped Thunderhead engineers see the visual differences between builds under test, highlighting problems and aiding problem-solving.</li>
<li>Faster operation – Visual validation analyzed more quickly than traditional web element locators.</li>
</ul>
<h2 id="h-moving-visual-testing-into-development">Moving Visual Testing Into Development</h2>
<p>After. using Applitools in end-to-end testing, Thunderhead realized that Applitools could help in several areas. </p>
<p>First, Applitools could help with development. Often, when developers made changes to the user interface, unintended consequences could show up at check-in time. However, by waiting for end-to-end tests to expose these issues, developers often had to stop existing work and shift context to repair older code. By moving visual validation to check-in, Thunderhead could make developers more effective.</p>
<p>Second, developers often waited to run their full suite of element locator tests until final build. These tests ran against multiple platforms, browsers, and viewports. The net test run would take several hours. The equivalent test. using Applitools took five minutes. So, Thunderhead could run these tests with every build. </p>
<p>For Thunderhead, the net result was both greater coverage with tests run at the right time for developer productivity.</p>
<h2 id="h-adding-visual-testing-to-component-tests">Adding Visual Testing to Component Tests</h2>
<p>Most recently, Thunderhead has seen the value of using a component library in their application development. By standardizing on the library, Thunderhead looks to improve development productivity over time. Components ensure that applications provide consistency across different development teams and use cases.</p>
<p>To ensure component behavior, Thunderhead uses Applitools to validate the individual components in the library. Thunderhead also tests the components in mocks that demonstrate the components in typical deployment uses cases.</p>
<p>By adding visual validation to components, Thunderhead expects to see visual consistency validated much earlier in the application development cycle.</p>
<p>Beyond the benefits listed above, Thunderhead has seen the virtual elimination of visual defects found through end-to-end testing. The check-in and build tests have exposed the vast majority of visual behavior issues during the development cycle. They have also made developers more productive by eliminating the context switches previously needed if bugs were discovered during end-to-end testing. As a result, Thunderhead has gained greater predictability in the development process.</p>
<p> In turn, Thunderhead engineers have gained greater agility. They can try new code and behaviors and know they will visually catch all unexpected behaviors. As a result, they are learning previously-unexplored dependencies in their code base. As they expose these dependencies, Thunderhead engineers gain greater control of their application delivery process.  </p>
<p>With predictability and control comes confidence. Using Applitools has given Thunderhead increased confidence in the effectiveness of their design processes and product delivery. With Applitools, Thunderhead knows how customers will experience the ONE platform and how that experience changes over time. </p>
<p><em>Featured photo by <a target="_blank" href="https://unsplash.com/@a_steger?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText" rel="noopener">Andreas Steger</a> on <a target="_blank" href="https://unsplash.com/s/photos/freeway?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText" rel="noopener">Unsplash</a></em></p>
</p></div>
<p><br />
<br /><a href="https://applitools.com/blog/thunderhead-speeds-quality-delivery-with-applitools/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Cybercrooks Rake in $304M in Romance Scams</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/cybercrooks-rake-in-304m-in-romance-scams/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Mon, 15 Feb 2021 20:50:58 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[304M]]></category>
		<category><![CDATA[Cybercrooks]]></category>
		<category><![CDATA[Rake]]></category>
		<category><![CDATA[Romance]]></category>
		<category><![CDATA[Scams]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/cybercrooks-rake-in-304m-in-romance-scams/</guid>

					<description><![CDATA[The number of people being targeted by fake relationship-seekers has spiked during the COVID-19 pandemic. Source link]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />The number of people being targeted by fake relationship-seekers has spiked during the COVID-19 pandemic.<br />
<br /><br />
<br /><a href="https://threatpost.com/cybercrooks-304m-romance-scams/163972/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>True Security Requires a Holistic Approach</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/true-security-requires-a-holistic-approach/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Mon, 15 Feb 2021 20:06:02 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[approach]]></category>
		<category><![CDATA[Holistic]]></category>
		<category><![CDATA[requires]]></category>
		<category><![CDATA[True]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/true-security-requires-a-holistic-approach/</guid>

					<description><![CDATA[True Security Requires a Holistic Approach The post True Security Requires a Holistic Approach appeared first on McAfee Blogs. Source]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<p><span style="font-family: WordVisi_MSFontService, 'Times New Roman', 'Times New Roman_EmbeddedFont', 'Times New Roman_MSFontService', serif;font-size: 16px;font-weight: bold">True Security Requires a Holistic Approach</span></p>
<p>The post <a target="_blank" rel="nofollow noopener" href="https://www.mcafee.com/blogs/consumer/true-security-requires-a-holistic-approach/">True Security Requires a Holistic Approach</a> appeared first on <a target="_blank" rel="nofollow noopener" href="https://www.mcafee.com/blogs">McAfee Blogs</a>.</p>
<p><br />
<br /><a href="https://www.mcafee.com/blogs/consumer/true-security-requires-a-holistic-approach/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>#Selenium JavaScript Bindings 4.0b1 are now up on @npmjs ! Please install the latest! They are a drop in replacement for previous versions! &#8230;</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/selenium-javascript-bindings-4-0b1-are-now-up-on-npmjs-please-install-the-latest-they-are-a-drop-in-replacement-for-previous-versions/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Mon, 15 Feb 2021 14:59:25 +0000</pubDate>
				<category><![CDATA[Updates]]></category>
		<category><![CDATA[Selenium]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/selenium-javascript-bindings-4-0b1-are-now-up-on-npmjs-please-install-the-latest-they-are-a-drop-in-replacement-for-previous-versions/</guid>

					<description><![CDATA[#Selenium JavaScript Bindings 4.0b1 are now up on @npmjs ! Please install the latest! They are a drop in replacement]]></description>
										<content:encoded><![CDATA[
<p>#Selenium JavaScript Bindings 4.0b1 are now up on @npmjs ! Please install the latest! They are a drop in replacement for previous versions! <a target="_blank" href="https://t.co/T7cMacaQrF" rel="noopener">https://t.co/T7cMacaQrF</a><br />
<br />
<br /><a href="https://twitter.com/AutomatedTester/statuses/1361329272120610818">Source</a> by <a href="https://t.co/Ji7sDrtaWI">David Burns</a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>The beta version of #Selenium 4 is released in #ruby! As is, it should provide a better experience than 3.142.7, so give `gem install seleni&#8230;</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/the-beta-version-of-selenium-4-is-released-in-ruby-as-is-it-should-provide-a-better-experience-than-3-142-7-so-give-gem-install-seleni/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Mon, 15 Feb 2021 14:14:40 +0000</pubDate>
				<category><![CDATA[Updates]]></category>
		<category><![CDATA[Ruby]]></category>
		<category><![CDATA[Selenium]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/the-beta-version-of-selenium-4-is-released-in-ruby-as-is-it-should-provide-a-better-experience-than-3-142-7-so-give-gem-install-seleni/</guid>

					<description><![CDATA[The beta version of #Selenium 4 is released in #ruby! As is, it should provide a better experience than 3.142.7,]]></description>
										<content:encoded><![CDATA[
<p>The beta version of #Selenium 4 is released in #ruby! As is, it should provide a better experience than 3.142.7, so give `gem install selenium-webdriver &#8211;pre` a shot and let us know what you think! <a target="_blank" href="https://t.co/rQrM3gh0zX" rel="noopener">https://t.co/rQrM3gh0zX</a><br />
<br />
<br /><a href="https://twitter.com/titusfortner/statuses/1361318010645065731">Source</a> by <a href="https://t.co/d3QdhF548u">Titus Fortner</a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>#Selenium Python Bindings 4.0.0.b1 has just been released! Go get it from  or install the latest with `pip install selenium &#8211;pre`&#8230;</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/selenium-python-bindings-4-0-0-b1-has-just-been-released-go-get-it-from-or-install-the-latest-with-pip-install-selenium-pre/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Mon, 15 Feb 2021 14:03:23 +0000</pubDate>
				<category><![CDATA[Updates]]></category>
		<category><![CDATA[Selenium]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/selenium-python-bindings-4-0-0-b1-has-just-been-released-go-get-it-from-or-install-the-latest-with-pip-install-selenium-pre/</guid>

					<description><![CDATA[#Selenium Python Bindings 4.0.0.b1 has just been released! Go get it from https://t.co/UTnrFoyjHe or install the latest with `pip install]]></description>
										<content:encoded><![CDATA[
<p>#Selenium Python Bindings 4.0.0.b1 has just been released! Go get it from <a target="_blank" href="https://t.co/UTnrFoyjHe" rel="noopener">https://t.co/UTnrFoyjHe</a> or install the latest with `pip install selenium &#8211;pre`<br />
<br />
<br /><a href="https://twitter.com/AutomatedTester/statuses/1361315171403194369">Source</a> by <a href="https://t.co/Ji7sDrtaWI">David Burns</a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Who hasn&#039;t dreamed of becoming a Performance Rock Star? This year, we want &#8230;</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/who-hasnt-dreamed-of-becoming-a-performance-rock-star-this-year-we-want/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Mon, 15 Feb 2021 09:07:51 +0000</pubDate>
				<category><![CDATA[Performance]]></category>
		<category><![CDATA[dreamed]]></category>
		<category><![CDATA[hasn039t]]></category>
		<category><![CDATA[loadtesting]]></category>
		<category><![CDATA[NeotysPAC]]></category>
		<category><![CDATA[perfmatters]]></category>
		<category><![CDATA[performancetesting]]></category>
		<category><![CDATA[rock]]></category>
		<category><![CDATA[Star]]></category>
		<category><![CDATA[Year]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/who-hasnt-dreamed-of-becoming-a-performance-rock-star-this-year-we-want/</guid>

					<description><![CDATA[Who hasn&#039;t dreamed of becoming a Performance Rock Star? This year, we want our Performance Advisory Council Experts to show]]></description>
										<content:encoded><![CDATA[
<p>Who hasn&#039;t dreamed of becoming a Performance Rock Star? This year, we want our Performance Advisory Council Experts to show everybody the ROCK STAR inside them on March 23-24. If you want to be part of our PAC Rock Festival, submit your paper here <span class="_5mfr"><span class="_6qdm" style="height: 16px; width: 16px; font-size: 16px; background-image: url(&quot;https://static.xx.fbcdn.net/images/emoji.php/v9/t51/1/16/1f449.png&quot;)"><img src="https://s.w.org/images/core/emoji/13.0.1/72x72/1f449.png" alt="👉" class="wp-smiley" style="height: 1em; max-height: 1em;" /></span></span> <a target="_blank" href="https://l.facebook.com/l.php?u=https%3A%2F%2Fbit.ly%2F3tQzQTv&#038;h=AT1VnsWOg-HFLpUF53o6-8WL6ZtDC5biBfzmI-qyQOQXymzrFi98m0pOl95QjAzLh0-oKf07qjrTbAeNIm3aPZmIos-1fCTMcHLQ8UiTnutW3KtAUzZHK5AeiwjSZm8sjuu2pNopCGUf-V6WzG0tDSilYdW5Sm_nb-VgWiG3R93brfBR1GiaqGi4oPmbpixCYEb2usf94w2GV9Vwf5jR_rLoVoyXrNP037yMToqf0MBxZujtlc7iuUfnlms-usH7zZ145sqC6YzwC7aNJKF-HIUIkgqEjKWqGsXOHCgX4zUxEyfEyZVyAatxrLoZR5l141Kg3A2qru9Unaenhnc465dUYzRd_TG3icFZdzURRigNWs1pKDxtKq5Ez5PBJF6IzkXWLExZLuwrxLzZ5fyGY6QHrvMWbYM6NPYMpVUOeZDRTPox9nr-881fNNIDEphp3FAVExlaEO6ZIayaHONa4krlFJJHHBU3UPgBWTTO_sEp2NnRwNZYIICoLS5XDThXM8HNw7GHkfz212mgzYDgMudnRdCE7qchbI4wNEVCI69RzErrHYHeDRMvkjT59lRaHcp1A_H5Gwn3yWS9B4Wgr9k-SIcc1YXDQz1MauQ0Gw" data-ft="&#123;&quot;tn&quot;:&quot;-U&quot;&#125;" rel="noopener nofollow" data-lynx-mode="async">https://bit.ly/3tQzQTv</a><br /> The submission deadline is February 28. Any submission after this date won&#039;t be selected. </p>
<p> <a target="_blank" class="_58cn" href="https://facebook.com/hashtag/perfmatters?__eep__=6&#038;source=feed_text&#038;epa=HASHTAG&#038;__xts__%5B0%5D=68.ARDoUHgOIYr31mZH6gzOOkbf0GRCmClD6ZHsdhikWTC9Z2v0tUOB6YxtQojGAwivQx-pO2ZJ90swsas6llDWxisK8QOmoWP38DAicqwrzLLZvr5C252nf9tffhECg43fl-jaxq9NnNW0gKO3tt8vIJcTYIHEWtbqyto5Gwhu9Xzk2b0LBkMrcN0oc5JsFFlqxoxneK3S3jtCm7K0LWHDD9ou6KEZg1-Geup1Y45VSD8ZfzeM4ROwfl-_oa9GB1TgroDhfaIAowqml7_9RNYg9TE-00Xi9cxa6SYK60qOQR2F-4zWV6pE1A&#038;__tn__=%2ANK-R" data-ft="&#123;&quot;type&quot;:104,&quot;tn&quot;:&quot;*N&quot;&#125;" rel="noopener"><span class="_5afx"><span aria-label="hashtag" class="_58cl _5afz">#perfmatters</span></span></a> <a target="_blank" class="_58cn" href="https://facebook.com/hashtag/performancetesting?__eep__=6&#038;source=feed_text&#038;epa=HASHTAG&#038;__xts__%5B0%5D=68.ARDoUHgOIYr31mZH6gzOOkbf0GRCmClD6ZHsdhikWTC9Z2v0tUOB6YxtQojGAwivQx-pO2ZJ90swsas6llDWxisK8QOmoWP38DAicqwrzLLZvr5C252nf9tffhECg43fl-jaxq9NnNW0gKO3tt8vIJcTYIHEWtbqyto5Gwhu9Xzk2b0LBkMrcN0oc5JsFFlqxoxneK3S3jtCm7K0LWHDD9ou6KEZg1-Geup1Y45VSD8ZfzeM4ROwfl-_oa9GB1TgroDhfaIAowqml7_9RNYg9TE-00Xi9cxa6SYK60qOQR2F-4zWV6pE1A&#038;__tn__=%2ANK-R" data-ft="&#123;&quot;type&quot;:104,&quot;tn&quot;:&quot;*N&quot;&#125;" rel="noopener"><span class="_5afx"><span aria-label="hashtag" class="_58cl _5afz">#performancetesting</span></span></a> <a target="_blank" class="_58cn" href="https://facebook.com/hashtag/loadtesting?__eep__=6&#038;source=feed_text&#038;epa=HASHTAG&#038;__xts__%5B0%5D=68.ARDoUHgOIYr31mZH6gzOOkbf0GRCmClD6ZHsdhikWTC9Z2v0tUOB6YxtQojGAwivQx-pO2ZJ90swsas6llDWxisK8QOmoWP38DAicqwrzLLZvr5C252nf9tffhECg43fl-jaxq9NnNW0gKO3tt8vIJcTYIHEWtbqyto5Gwhu9Xzk2b0LBkMrcN0oc5JsFFlqxoxneK3S3jtCm7K0LWHDD9ou6KEZg1-Geup1Y45VSD8ZfzeM4ROwfl-_oa9GB1TgroDhfaIAowqml7_9RNYg9TE-00Xi9cxa6SYK60qOQR2F-4zWV6pE1A&#038;__tn__=%2ANK-R" data-ft="&#123;&quot;type&quot;:104,&quot;tn&quot;:&quot;*N&quot;&#125;" rel="noopener"><span class="_5afx"><span aria-label="hashtag" class="_58cl _5afz">#loadtesting</span></span></a> <a target="_blank" class="_58cn" href="https://facebook.com/hashtag/neotyspac?__eep__=6&#038;source=feed_text&#038;epa=HASHTAG&#038;__xts__%5B0%5D=68.ARDoUHgOIYr31mZH6gzOOkbf0GRCmClD6ZHsdhikWTC9Z2v0tUOB6YxtQojGAwivQx-pO2ZJ90swsas6llDWxisK8QOmoWP38DAicqwrzLLZvr5C252nf9tffhECg43fl-jaxq9NnNW0gKO3tt8vIJcTYIHEWtbqyto5Gwhu9Xzk2b0LBkMrcN0oc5JsFFlqxoxneK3S3jtCm7K0LWHDD9ou6KEZg1-Geup1Y45VSD8ZfzeM4ROwfl-_oa9GB1TgroDhfaIAowqml7_9RNYg9TE-00Xi9cxa6SYK60qOQR2F-4zWV6pE1A&#038;__tn__=%2ANK-R" data-ft="&#123;&quot;type&quot;:104,&quot;tn&quot;:&quot;*N&quot;&#125;" rel="noopener"><span class="_5afx"><span aria-label="hashtag" class="_58cl _5afz">#NeotysPAC</span></span></a></p>
<p><a target="_blank" href="https://scontent-lga3-2.xx.fbcdn.net/v/t1.0-9/150878187_4107555552589210_7235439880587698434_o.png?_nc_cat=101&#038;ccb=3&#038;_nc_sid=8024bb&#038;_nc_ohc=0au-MpZwkvwAX-oI3-l&#038;_nc_ht=scontent-lga3-2.xx&#038;oh=b1bf2fc7bd449038ded95b3c1a9db8e2&#038;oe=604F59BA" rel="noopener"></a><br />
<br />
<br /><a href="https://www.facebook.com/163354693676002/posts/4107555682589197">Source</a>  </p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Buyer&#8217;s Guide to Performance Engineering Tools</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/buyers-guide-to-performance-engineering-tools/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Sun, 14 Feb 2021 16:00:00 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Buyers]]></category>
		<category><![CDATA[Engineering]]></category>
		<category><![CDATA[Guide]]></category>
		<category><![CDATA[Performance]]></category>
		<category><![CDATA[Tools]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/?p=9088</guid>

					<description><![CDATA[Overview Performance engineering is about far more than just performance testing. It&#8217;s about achieving consistent, predictable system performance under load, with]]></description>
										<content:encoded><![CDATA[<p> <br />
<br /></p>
<div>
<h3>Overview</h3>
<p>Performance engineering is about far more than just performance testing. It&#8217;s about achieving consistent, predictable system performance under load, with changing conditions, and even during a partial system failure.</p>
<p>To accomplish this, performance engineers engage in capacity planning, modeling and simulation, development, performance testing, platform engineering, and production monitoring.</p>
<p>The body of knowledge performance engineers need includes system administration, coding practices, networking, CPU and memory management, the theory of constraints, testing, and traditional debugging skills. More recently, cloud provisioning, DevOps skills, microservices, and non-relational databases have become relevant as well, said Vicky Giavelli, director of product management for performance engineering, Micro Focus</p>
<blockquote>
<p>&#8220;You&#8217;ll need a complete set of tools to engineer performance; the problem is just too broad.&#8221;<br />—<a target="_blank" href="https://twitter.com/Kwyjiba" rel="nofollow noopener">Vicky Giavelli</a></p>
</blockquote>
<p>In other words, any systems in the cloud or the data center could become part of a performance engineering effort.</p>
<h4>Why read this report?</h4>
<p>This guide covers the most important benefits of performance engineering, the key features and tools available, and how to select the right tools for the job.</p>
<p>The wrong tool can waste time and money, but the wrong selection process can waste twice as much of both. To help you buy the correct tool and use your time judiciously, this report defines the current state of the tools, including what they offer. You&#8217;ll also learn which criteria to consider for each tool category.</p>
<p>The RFP section covers the questions you should ask performance engineering tool vendors. These are not simple, cut-and-paste, hands-off questions. Instead, to get the most relevant answers, those making the technical selection should work closely with the engineering team and the vendor to select the right questions and provide the right background.</p>
<p>Performance engineering can be challenging, but it does not have to be overwhelming, nor does it need to break budgets or timelines. Understand the problem, model it, test it, evaluate it, improve it, and choose tools to monitor and improve production.</p>
<p>That&#8217;s how you take the guesswork out of performance engineering.</p>
<h3>The state of today&#8217;s performance engineering tools and techniques</h3>
<p>The performance engineering discipline is in transition from the old waterfall approach, where performance testing was done by a single expert (if at all), and production monitoring was handled by the IT operations group.</p>
<p>Now that&#8217;s in flux, with the work distributed within engineering teams. Thanks to DevOps, those same teams are adding production deploy and production support to their workloads.</p>
<h4>Performance engineering as a role has diminished</h4>
<p>On one hand, &#8220;everybody pays lip service to performance, and indeed the role of performance and efficiency grows,&#8221; said <a target="_blank" href="https://twitter.com/apodelko" rel="nofollow noopener">Alexander Podelko</a>, a consulting performance engineer at MongoDB. &#8220;We are spending more on it.&#8221;</p>
<p>But on the other hand, he added, &#8220;the number of people with &#8216;performance&#8217; or &#8216;capacity&#8217; in their titles is shrinking,&#8221; with <a target="_blank" href="https://techbeacon.com/app-dev-testing/performance-engineering-now-its-everyones-job" rel="noopener">the responsibility spread</a> between site reliability engineers (SREs), developers, software developers in test (SDET), and so on. &#8220;Yet no one has specific responsibility for the subject.&#8221; </p>
<p>This extra responsibility can lead to waste, with elements of the test picture falling through the cracks. Without anyone to coordinate the process of fixing problems, teams can develop gigabytes of data without any relevant insights, or insights without any actual corrective activity.</p>
<p>In the worst case, this can push teams backwards, from <a target="_blank" href="https://techbeacon.com/app-dev-testing/getting-performance-testing-performance-engineering" rel="noopener">performance testing</a> into production firefighting, also known as &#8220;code and fix&#8221; behavior.</p>
<h4>Current tools can be difficult to integrate</h4>
<p>Most performance tools were built for performance testers, to serve a single function. They may be difficult to integrate. And when they do work together, the architecture is frequently closed, encouraging a single-stack, instead of best-of-breed, approach.</p>
<p>Worse, because the responsibility is now distributed to other roles on the team, those people have to leave their work environment and set up an entirely new workspace to do performance. Developers who are offered tools that are not tied to the style or scope of their core work are likely to abandon those tools.</p>
<p>One result: Tools that report on performance are viewed in isolation. Test results are viewed by a &#8220;test group,&#8221; application performance monitoring (APM) data and logs are viewed by operations, and front-end performance, if it is measured at all, is measured by a design or front-end specialist.</p>
<p>There is no shared analysis, especially for complex systems developed by teams in different locations and time zones.</p>
<h4>Performance testing has a high startup cost</h4>
<p>An excellent load test will have multiple users performing somewhat random operations, perhaps from different locations. The test will need to include the accounts, the possible workflows, perhaps logic to track state, as well as meaningful measures on the test data.</p>
<p>That is, <a target="_blank" href="https://techbeacon.com/app-dev-testing/want-effective-test-automation-devops-manage-your-test-data" rel="noopener">you need all the test data</a>—the average (mean), typical experience (median) load speeds including the front end, as well as perhaps the experience for the slowest 10% or 25%.</p>
<p>Setting all of that up, including creating the test environments, takes a significant amount of time and money. But even more than the tool cost, the human time required to do the work invariably drains the entire delivery team, not just the tester. Physical hardware, which is more often the case than not, can be expensive, especially in large organizations with multiple teams that do not coordinate or reuse resources.</p>
<p><a target="_blank" href="https://www.linkedin.com/in/leandromelendez/" rel="nofollow noopener">Leandro Melendez</a>, a consulting performance tester at Qualitest, warns that he still sees many organizations with a physical test environment that&#8217;s a miniature version of production. This saves money but guarantees that the test environment is not a realistic model of production. Since most larger organizations have no way to share performance test resources, teams have to reinvent the wheel, creating more cost and delays.</p>
<h4>Performance testing alone remains a bottleneck</h4>
<p>Given that the setup of performance testing is expensive and slow, it will inevitably push out the schedule. Vicky Giavelli, director of product management for performance engineering at Micro Focus, said that leads to either a delayed release, or, more likely, to an attitude of &#8220;catching it in the next release&#8221; or &#8220;we&#8217;ll test it later.&#8221; This, in turn, inevitably leads to &#8220;testing never&#8221; and firefighting in production.</p>
<h4>Key takeaways</h4>
<p>Large organizations have DevOps teams that tend to focus on infrastructure and setup, leaving testing behind. Without infrastructure, testing falls even further behind. That bottleneck could eventually lead teams to ignore performance testing itself, resulting in production problems that could cost customers, sales, and the expense of fixing the problem.</p>
<p>But the news is not entirely bad. Pushing for teams that &#8220;own&#8221; large parts of the process, from product design to support, creates an opportunity to extend performance engineering <a target="_blank" href="https://techbeacon.com/app-dev-testing/software-testing-devops-how-one-qa-team-sets-pace" rel="noopener">throughout all of the delivery lifecycle</a>, from concept to cash.</p>
<p>Centers of excellence and communities of practice can push down information to the team about how to test. As tools evolve to <a target="_blank" href="https://techbeacon.com/app-dev-testing/9-top-open-source-testing-automation-frameworks-how-choose" rel="noopener">become more open</a> and better integrated, to support the cloud, and to work for different specialties within software development, performance engineering has a chance to become a team sport, with a lighter burden on each person.</p>
<h3>What to look for when building a performance engineering toolbox</h3>
<p>The simplest performance testing toolbox includes a load test generator, hardware to generate that load, and some way to monitor performance. Those tools tell the tester how the system is performing, but they don&#8217;t help fix it. They also don&#8217;t focus on general performance metrics that are unrelated to load, such as unitary, single user, web performance, and so on. </p>
<p>Performance engineering requires a broader approach and perspective. It includes prevention, modeling, analysis, and repair.</p>
<p><em>Figure 1. Performance testing is the least-implemented type of testing within a continuous delivery pipeline, likely due to a lack of proper tools to perform the work. Source: <a target="_blank" href="https://www.capgemini.com/de-de/wp-content/uploads/sites/5/2020/03/Report_Continous_Testing_2020_Sogeti_Capgemini.pdf" rel="nofollow noopener">CapGemini&#8217;s 2020 Continuous Testing report</a></em></p>
<p>Here are the types of tools to use for performance engineering.</p>
<h4>Monitoring</h4>
<p>This isn&#8217;t really a testing tool, but all the load and simulations in the world don&#8217;t mean anything <a target="_blank" href="https://techbeacon.com/app-dev-testing/3-highly-effective-strategies-managing-test-data" rel="noopener">without data</a> on system performance. Sometimes called application performance monitoring (APM), these tools should provide drill-down dashboards along with mean, medium, top 25%, bottom 25%, and other metrics on any operation.</p>
<p>A good data dashboard can receive information from anywhere, making it possible to report synthetic transaction results, and logs for delays for every subsystem, along with cloud usage and CPU, memory, and disk use statistics.</p>
<p>This combination for test and production makes finding problems, developing hypotheses, and conducting experiments an engineering exercise, instead of guesswork.</p>
<p>For the purposes of this report, a monitoring tool stores the data, reports on it, and either gathers it or has &#8220;listeners&#8221; that forward the information to it. <a target="_blank" href="https://techbeacon.com/app-dev-testing/how-apm-tools-can-help-predict-prepare-traffic-spikes" rel="noopener">An APM tool</a> will have additional API hooks into the systems themselves to trigger tasks in the system, perform synthetic transactions, or sometimes inject an audit trail into the code itself.</p>
<h4>Load generation tools</h4>
<p>A performance test tool usually means <a target="_blank" href="https://techbeacon.com/app-dev-testing/when-should-i-start-load-testing" rel="noopener">a load simulator</a>, scripts and data to send to the load simulator, and a view of results. These tools predate the web and used to run through the user interface. As mobile and microservices have become more popular and software has become incremental, the ability to record production queries and replay them is increasingly popular.</p>
<h4>Front-end performance tools</h4>
<p>These tools analyze what is downloaded, how long it takes, how large the download is, and how that impacts page load. A simple load fix might be to swap out a high-resolution image for a medium-resolution one, or one with better compression. Note that many vendors include front-end performance and load generation in a single tool.</p>
<h4>Service virtualization/mocking</h4>
<p>Some teams directly support only one subset of the system, or a handful of microservices, and those services may be dependent on a wider part of the system. By recording how the other systems interact and then playing it back, it is possible to test just the subsystems a team builds in isolation.</p>
<p>That can lead to faster testing and easier debugging. The term for these lightweight, pre-programmed services with a limited number of requests/responses is &#8220;<a target="_blank" href="https://techbeacon.com/app-dev-testing/service-virtualization-how-misunderstood-tech-could-save-you-millions" rel="noopener">service virtualization</a>.&#8221;</p>
<h4>Network virtualization</h4>
<p>In many cases, the delay is in the network infrastructure outside of the data center. Network virtualization allows a test to simulate a 3G/4G/5G connection, perhaps to a different continent, without the expense of having to fly someone to Europe to use an older phone model. Armed with this data, programmers can reduce the size and complexity of downloads, improving performance.</p>
<h4>Static code analyzers</h4>
<p>While these aren’t typically included in a list of performance engineering tools, they&#8217;re good for finding memory leaks. If your software has memory leaks, which cause delays or errors, a code analyzer could prevent them from getting into your code in the first place.</p>
<h4>Code profiling tools</h4>
<p>A different approach to performance is looking at how long each line of code takes to execute, and how many times it is executed.</p>
<p>Code profiling tools show where the code is spending its time, providing opportunities for improvement. (Of course, it is possible that the network is slow.) This is essentially a dynamic version of code analysis, or analysis as the code runs.</p>
<h4>Query and database optimizers</h4>
<p>A single line of code that takes too long might be calling out to a database. Query optimizers change the way a query or command is structured to make it run faster. Database performance tuning is an entire discipline, but it certainly fits within performance engineering.</p>
<h4>Build and provisioning tools</h4>
<p>These tools allow self-service and the creation of test environments on demand. For a deeper understanding of why these tools are important, read how <a target="_blank" href="https://twitter.com/bernieberger" rel="nofollow noopener">Bernie Berger</a>, an IT and quality coach at EPAM Solutions, described the absence of build tools and test environments in his &#8220;<a target="_blank" href="https://www.softwaretestpro.com/a-day-in-the-life-of-a-software-tester/" rel="nofollow noopener">Day in the Life of a Software Tester</a>&#8221; series of articles.</p>
<p>In Berger&#8217;s examples, the tester might spend four days on setup and configuration to perform a one-hour test. Provisioning tools create a data environment, and possibly seed a test database, so that performance tests can be executed quickly.</p>
<h4>Chaos engineering</h4>
<p>These tools work to pull down subsystems intentionally to see if the architecture has the necessary redundancy to survive failure. Chaos tools plan for failure, simulate it (often in production), and require layers of redundancy to create highly available, resilient architectures.</p>
<h4>Now pull it all together</h4>
<p>There are quite a few types of tools to consider. Fortunately, you probably only need a subset of these tools, and you might want to implement them in a specific order. Given this information, most technical groups should be able to explain what is missing from their current tool lineup, and how any new tools will fit with existing systems to create a performance engineering culture.</p>
<p>The challenge will be deciding who will do the work, how they will find the time to do the work, and the right tool to do the work.</p>
<p>Once you’ve completed these steps you&#8217;re ready to create an RFP and move forward with a proof of concept to help narrow down your tool choices.</p>
<h3>How to create an RFP for performance engineering tools</h3>
<p>Once you understand the landscape of tools, the challenges in your organization, and the relevant features, it is time to get down to tool selection. Part of that process might be creating a request for proposal, or RFP.</p>
<p>The RFP can be an important part of the process of limiting a large group of tools to the select few. That said, Qualitest&#8217;s Melendez warns that the process can remove all context from the conversation. Leaving aside the vendor, making assumptions about what terms such as &#8220;build provisioning&#8221; mean for this particular client or other missteps can lead to the wrong decisions.</p>
<p><em>Figure 2: Accurate performance insights of real users are the top challenge for continuous testing. Source: <a target="_blank" href="https://www.capgemini.com/de-de/wp-content/uploads/sites/5/2020/03/Report_Continous_Testing_2020_Sogeti_Capgemini.pdf" rel="nofollow noopener">Capgemini&#8217;s Continuous Testing Survey 2020</a></em></p>
<p>The RFP process should look more like a conversation, with bidirectional feedback and explanations.</p>
<h4>Describing your company and performance-engineering problems</h4>
<p>Most performance engineering tools solve a specific problem, address a specific need, and work in a single area of performance engineering. Even companies that offer an entire integrated suite of tools, designed to address multiple problems within performance engineering, present those as a suite, not a single tool.</p>
<p>Think of them like puzzle pieces that fit together to craft a solution.</p>
<p>You want to know how the pieces will fit. By describing your organization, the existing performance culture and approach, the desired state, and the gaps you&#8217;re trying to address, you allow the vendor to answer questions about how its piece will help solve the puzzle. The vendor can also suggest anything else that may be needed, based on its experiences with other customers.</p>
<p>This section consists of three components: goals and objectives, resources, and infrastructure.</p>
<blockquote>
<p>&#8220;The tool may meet all the requirements, and actually be able to solve our problems. But do our people have the skills and capability to use it as intended? Moreover, will they?&#8221;<br />—<a target="_blank" href="https://twitter.com/perfpulley" rel="nofollow noopener">James Pulley</a>, test practice manager at TEKSystems</p>
</blockquote>
<p>The outline below is a guide; you&#8217;ll want to tweak it to fit your group and the type of solution you&#8217;re seeking. Monitoring tools should have a very different set of questions than performance testing tools.</p>
<p><strong>Statement of goals and objectives</strong></p>
<p>Start with the current state of performance engineering. The temptation here is to overestimate the existing state, to talk about the way things should be. Have a technical person, who can set aside bias, write about the true state of what is really happening.</p>
<p>Follow with the end-state goal for performance engineering, any gaps that exist, ideal timelines, and how success will be measured. If you can, include information about budget, existing slow performance, and the effect that improved performance could have on the business.</p>
<p><strong>Statement of resources</strong></p>
<p>This is about who will be doing the performance engineering work—whether it will be an additional duty, whether you will create a specific role or use consultants, the number of people who will be involved, their skill sets, and what group they will report to.</p>
<p>You may also include a high-level description of the IT department, along with more detail on the system administration, database administrators, programmers, team composition, development model, continuous integration approach, DevOps, and other areas that part of performance engineering.</p>
<p><strong>Infrastructure</strong></p>
<p>This section describes the hardware and software elements of your IT environment relevant to performance. That includes the operating system, hardware and database, and the public or private cloud infrastructure and chipset. An all-Microsoft environment and a Linux-heavy environment may lead to very different solutions, as might a Java-, .NET-, or Kubernetes/Docker-heavy group or a particular brand of enterprise service bus.</p>
<p>Include any security issues or relevant regulations. For example, specify if all the software needs to run inside the data center, or if the system needs to be compliant with Sarbanes-Oxley, Dodd Frank, HIPAA, PCI, FDA, or other regulations.</p>
<h4>Soliciting vendor information</h4>
<p>Once you&#8217;ve created the infrastructure section of your RFP, it&#8217;s time to learn about the vendor and its tools. Consider asking the questions below in the vendor information section of your RFP.</p>
<ul>
<li>Describe your company, history, and solution focus.</li>
<li>What is your financial situation? Provide at least two years of financial data.</li>
<li>Who is the primary contact for sales?</li>
<li>Who is the primary contact for technical questions and support during a trial period?</li>
<li>Do you have a list of reference customers we can speak to? If so, please list them along with contact information. Links to case studies are not a replacement, but can be listed here if available.</li>
</ul>
<p><strong>Products and capabilities</strong></p>
<p>This section allows the vendor to explain its product, approach, and any competitive advantage it has. Ideally these answers demonstrate that the vendor&#8217;s representatives actually read the previous section and understand how their products will fit into your IT picture.</p>
<ul>
<li>List your product or products and the primary category each falls into: capacity planning, modeling and simulation, development and DevOps, performance testing (include web performance and front-end performance), platform engineering, production monitoring.</li>
<li>What technologies and API protocols do you support?</li>
<li>What cloud and virtualization technologies do you support?</li>
<li>What skills are required to use this tool?</li>
<li>How much time and additional training will we need to be effective?</li>
<li>What devices and platforms does the tool support?</li>
<li>Do you provide extensions to support performance engineering for commercial products (ERP, CRM, HR systems, and so on)?</li>
<li>How does your product work with other products—via APIs, or other means? What other products does your software typically interact with? What open-source products?</li>
<li>What continuous integration or continuous delivery tools do you support/integrate with?</li>
<li>Describe how to customize or extend your product.</li>
<li>What types of reporting and analytics does your product provide? </li>
<li>What unique features or innovations does your product suite have compared to the competition? Whom do you consider to be your competition?</li>
<li>Does your product, or product suite, work better as a suite, or as part of a particular stack of technologies?</li>
</ul>
<p><strong>Deployment and support protocols</strong></p>
<ul>
<li>Is your product or service on premises, a cloud service, or part of a hybrid solution?</li>
<li>Does a typical installation involve consulting or training? Is it via a third party, or do you provide it?</li>
<li>How often are new versions released, and how does that impact the licensing model?</li>
<li>Do you offer support? What are the terms of your support contracts? (It might be helpful to ask for support during the process and see how that goes.)</li>
<li>What training options do you offer, and at what prices?</li>
</ul>
<p>Describe the licensing and pricing model in a separate document. This should include fees for virtual users (for load testing), real users, if the license can float between computers, cloud hosting costs, and so on.</p>
<h4>Once the RFP is drafted</h4>
<p>Pulley, the test practice manager at TEKSystems, provides these examples of problems the RFP should help answer:</p>
<p>(1) Does the tool in question have the ability to interrogate all my systems to understand how resources are being used? (These include operating systems, guest operating systems, and services web server, app server, database server, and so on.)</p>
<p>(2) Does it work in my environment? Does it run on Macs or Linux or Windows or that embedded thing that Bob has running a robot? If not, then it may be a perfectly capable tool but it can&#8217;t be used in my environment.</p>
<p>(3) Can this tool be used successfully by the intended users of the tool? The scripting language is Erlang. No one knows Erlang. Heck, the group is full of manual testers, and almost no one in the group has programming as a background. All performance testing tools assume a robust level of architectural knowledge and programming acumen. You cannot diagnose issues in code and architecture without a foundational command of the same.</p>
<p>Once you get responses to the RFP, take a hard look to see if the vendor really answered your questions or engaged in marketing-speak, and if it seems like it will really work to resolve the performance engineering issues you require.</p>
<p>After the RFP has passed muster with you and your team, send it out for review to any others who will be using the tool. Then it may be time to create your short list and start talking to vendors. Good luck!</p>
<h4>Keep learning</h4>
</div>
<p><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script><br />
<br /><br />
<br /><a href="https://techbeacon.com/app-dev-testing/special-report-buyers-guide-performance-engineering-tools">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>mHealth Apps Expose Millions to Cyberattacks</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/mhealth-apps-expose-millions-to-cyberattacks/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 12 Feb 2021 21:01:25 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Apps]]></category>
		<category><![CDATA[Cyberattacks]]></category>
		<category><![CDATA[Expose]]></category>
		<category><![CDATA[mHealth]]></category>
		<category><![CDATA[Millions]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/mhealth-apps-expose-millions-to-cyberattacks/</guid>

					<description><![CDATA[Researcher testing of 30 mobile health apps for clinicians found that all of them had vulnerable APIs. Source link]]></description>
										<content:encoded><![CDATA[<p> <br />
<br />Researcher testing of 30 mobile health apps for clinicians found that all of them had vulnerable APIs.<br />
<br /><br />
<br /><a href="https://threatpost.com/mhealth-apps-millions-cyberattacks/163966/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Yandex Data Breach Exposes 4K+ Email Accounts</title>
		<link>http://wp.qe-blog.10.50.222.159.xip.io/yandex-data-breach-exposes-4k-email-accounts/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 12 Feb 2021 20:17:10 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Accounts]]></category>
		<category><![CDATA[Breach]]></category>
		<category><![CDATA[Data]]></category>
		<category><![CDATA[Email]]></category>
		<category><![CDATA[Exposes]]></category>
		<category><![CDATA[Yandex]]></category>
		<guid isPermaLink="false">http://wp.qe-blog.10.50.222.159.xip.io/yandex-data-breach-exposes-4k-email-accounts/</guid>

					<description><![CDATA[The administrator of your personal data will be Threatpost, Inc., 500 Unicorn Park, Woburn, MA 01801. Detailed information on the]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<div class="c-note c-note--dash u-hidden u-block@md">
<p>The administrator of your personal data will be Threatpost, Inc., 500 Unicorn Park, Woburn, MA 01801. Detailed information on the processing of personal data can be found in the <a target="_blank" href="https://threatpost.com/web-privacy-policy/" rel="noopener">privacy policy</a>. In addition, you will find them in the message confirming the subscription to the newsletter.</p>
</div>
</div>
<p><br />
<br /><a href="https://threatpost.com/yandex-data-breach-email-accounts/163960/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
