<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>QE Blog</title>
	<atom:link href="http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/feed/" rel="self" type="application/rss+xml" />
	<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io</link>
	<description>Where we share news, resources, and latest trends in testing</description>
	<lastBuildDate>Tue, 13 Oct 2020 05:17:06 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.5.1</generator>

<image>
	<url>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/wp-content/uploads/2020/03/cropped-Robot-icon-32x32.jpg</url>
	<title>QE Blog</title>
	<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Shadow DOM Elements and Using TestProject&#8217;s OpenSDK {Part 2}</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/shadow-dom-elements-and-using-testprojects-opensdk-part-2/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Tue, 13 Oct 2020 05:17:06 +0000</pubDate>
				<category><![CDATA[Automation]]></category>
		<category><![CDATA[DOM]]></category>
		<category><![CDATA[Elements]]></category>
		<category><![CDATA[OpenSDK]]></category>
		<category><![CDATA[Part]]></category>
		<category><![CDATA[Shadow]]></category>
		<category><![CDATA[TestProjects]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/shadow-dom-elements-and-using-testprojects-opensdk-part-2/</guid>

					<description><![CDATA[At the end of our 1st Part of this Shadow DOM series, we were left with so many questions in]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<p><span style="font-weight: 400;">At the end of our </span><a target="_blank" href="https://blog.testproject.io/2020/09/29/the-rise-of-shadow-dom-core-technical-aspects/" rel="noopener noreferrer"><span style="font-weight: 400;">1st Part of this Shadow DOM</span></a><span style="font-weight: 400;"> series, we were left with so many questions in our mind. So let’s catch-up one-by-one and solve that conundrum. I hope you will <img src="https://s.w.org/images/core/emoji/13.0.0/72x72/1f497.png" alt="💗" class="wp-smiley" style="height: 1em; max-height: 1em;" /> it!</span></p>
<p><span style="color: #000080;"><b>Q: Can a QA Automation engineer interact with custom elements WITHOUT appending Shadow DOM?<br /></b></span><span style="font-weight: 400;">So let’s try legacy selectors {CSS &#038; XPath} as well as document.querySelector method to find the elements when Shadow DOM is NOT appended.</span></p>
<p><span style="font-weight: 400; color: #000080;">Custom Element Code Snippet WITHOUT Shadow DOM ></span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="js"><script>
  	class MyElement extends HTMLElement {
    	connectedCallback() {
      	const button = document.createElement("button");
      	button.onclick = () => alert("Button clicked");
      	button.innerText = "Button in Custom Element";
      	this.append(button);
    		}
  	}
  	customElements.define("my-element", MyElement);
</script>

<div><my-element></my-element></div></pre>
<p><span style="font-weight: 400; color: #000080;">Custom Element Code rendered on Browser ></span></p>
<p></p>
<p><noscript><img loading="lazy" class="alignnone wp-image-14257 size-full" title="Custom Element Code rendered on Browser" src="https://blog.testproject.io/wp-content/uploads/2020/10/1st.png" alt="Custom Element Code rendered on Browser" width="992" height="144" srcset="https://blog.testproject.io/wp-content/uploads/2020/10/1st.png 992w, https://blog.testproject.io/wp-content/uploads/2020/10/1st-512x74.png 512w, https://blog.testproject.io/wp-content/uploads/2020/10/1st-768x111.png 768w" sizes="(max-width: 992px) 100vw, 992px"/></noscript></p>
<p><span style="color: #333399;"><span style="font-weight: 400;">Let’s try to find Custom Element through </span><b><i>CSS, XPath, and document interface</i></b><span style="font-weight: 400;"> ></span></span></p>
<p><img loading="lazy" class="alignnone wp-image-14258 size-full" title="Custom Element through CSS, XPath, and document interface" alt="Custom Element through CSS, XPath, and document interface" width="512" height="126" src="https://blog.testproject.io/wp-content/uploads/2020/10/2nd.png"/></p>
<p><noscript><img loading="lazy" class="alignnone wp-image-14258 size-full" title="Custom Element through CSS, XPath, and document interface" src="https://blog.testproject.io/wp-content/uploads/2020/10/2nd.png" alt="Custom Element through CSS, XPath, and document interface" width="512" height="126"/></noscript></p>
<p><span style="font-weight: 400;">Aha! Custom elements are visible on the console after using all the above findElement methods one by one. Even <em>ALL LEGACY SELECTORS ARE WORKING</em>! <img src="https://s.w.org/images/core/emoji/13.0.0/72x72/1f389.png" alt="🎉" class="wp-smiley" style="height: 1em; max-height: 1em;" /></span></p>
<p><span style="color: #333399;"><b><span style="color: #000080;">Q: </span>Can a QA Automation engineer interact with custom elements AFTER appending Shadow DOM?</b></span><span style="font-weight: 400;"><br /></span><span style="font-weight: 400;">In our <a target="_blank" href="https://blog.testproject.io/2020/09/29/the-rise-of-shadow-dom-core-technical-aspects/" rel="noopener noreferrer">first part</a>, we have discussed that </span><i><span style="font-weight: 400;">shadowRoot interface </span></i><span style="font-weight: 400;">is the entry point to reach out to Shadow DOM elements i.e. by using </span><i><span style="font-weight: 400;">shadowRoot.querySelector</span></i><span style="font-weight: 400;"> method. So let’s try legacy selectors {CSS &#038; XPath}, document.querySelector method and also shadowRoot.querySelector method to find the custom elements when Shadow DOM is appended with </span><i><span style="font-weight: 400;">OPEN mode</span></i><span style="font-weight: 400;">. </span></p>
<p><span style="color: #333399;"><span style="font-weight: 400;">Custom Element Code Snippet WITH appended Shadow DOM {</span><b>OPEN Mode</b><span style="font-weight: 400;">} ></span></span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="js"><script>
   	class MyElement extends HTMLElement {
     	connectedCallback() {
       	const shadow = this.attachShadow({ mode: "open" });
       	const button = document.createElement("button");
       	button.onclick = () => alert("Button clicked");
       	button.innerText = "Shadow DOM Button";
       	shadow.append(button);
     	      }
   	}
   	customElements.define("my-element", MyElement);
</script>
<div><my-element></my-element></div>
</pre>
<p><span style="font-weight: 400; color: #333399;">Custom Element Code appended with Shadow DOM rendered on Browser ></span></p>
<p><img loading="lazy" class="alignnone wp-image-14259 size-full" title="Custom Element Code appended with Shadow DOM rendered on Browser" alt="Custom Element Code appended with Shadow DOM rendered on Browser" width="900" height="188" srcset="https://blog.testproject.io/wp-content/uploads/2020/10/3rd.png 900w, https://blog.testproject.io/wp-content/uploads/2020/10/3rd-512x107.png 512w, https://blog.testproject.io/wp-content/uploads/2020/10/3rd-768x160.png 768w" data-lazy-sizes="(max-width: 900px) 100vw, 900px" src="https://blog.testproject.io/wp-content/uploads/2020/10/3rd.png"/></p>
<p><noscript><img loading="lazy" class="alignnone wp-image-14259 size-full" title="Custom Element Code appended with Shadow DOM rendered on Browser" src="https://blog.testproject.io/wp-content/uploads/2020/10/3rd.png" alt="Custom Element Code appended with Shadow DOM rendered on Browser" width="900" height="188" srcset="https://blog.testproject.io/wp-content/uploads/2020/10/3rd.png 900w, https://blog.testproject.io/wp-content/uploads/2020/10/3rd-512x107.png 512w, https://blog.testproject.io/wp-content/uploads/2020/10/3rd-768x160.png 768w" sizes="(max-width: 900px) 100vw, 900px"/></noscript></p>
<p><span style="color: #333399;"><span style="font-weight: 400;">Let’s try to find Custom Element appended with Shadow DOM through </span><b><i>CSS, XPath,  document interface, and shadowRoot interface</i></b><span style="font-weight: 400;"> ></span></span></p>
<p><img loading="lazy" class="alignnone wp-image-14260 size-full" title="Custom Element appended with Shadow DOM through CSS, XPath,  document interface, and shadowRoot interface" alt="Custom Element appended with Shadow DOM through CSS, XPath,  document interface, and shadowRoot interface" width="512" height="161" src="https://blog.testproject.io/wp-content/uploads/2020/10/4th.png"/></p>
<p><noscript><img loading="lazy" class="alignnone wp-image-14260 size-full" title="Custom Element appended with Shadow DOM through CSS, XPath,  document interface, and shadowRoot interface" src="https://blog.testproject.io/wp-content/uploads/2020/10/4th.png" alt="Custom Element appended with Shadow DOM through CSS, XPath,  document interface, and shadowRoot interface" width="512" height="161"/></noscript></p>
<p><span style="font-weight: 400;">Wow! <em>EXCEPT FOR THE SHADOWROOT INTERFACE, NOTHING WORKS</em>. That’s why we call the shadowRoot interface as an entry point to the Shadow DOM tree.</span></p>
<p><span style="color: #333399;"><span style="font-weight: 400;">Custom Element Code Snippet WITH appended Shadow DOM {</span><b>CLOSED Mode</b><span style="font-weight: 400;">} ></span></span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="js"><script>
   	class MyElement extends HTMLElement {
     	connectedCallback() {
       	const shadow = this.attachShadow({ mode: "open" });
       	const button = document.createElement("button");
       	button.onclick = () => alert("Button clicked");
       	button.innerText = "Shadow DOM Button";
       	shadow.append(button);
     	        }
   	}
   	customElements.define("my-element", MyElement);
</script>
<div><my-element></my-element></div>
</pre>
<p><span style="font-weight: 400; color: #333399;">Custom Element Code appended with Shadow DOM rendered on Browser ></span></p>
<p><img loading="lazy" class="alignnone wp-image-14261 size-full" title="Custom Element Code appended with Shadow DOM rendered on Browser" alt="Custom Element Code appended with Shadow DOM rendered on Browser" width="512" height="108" src="https://blog.testproject.io/wp-content/uploads/2020/10/5th.png"/></p>
<p><noscript><img loading="lazy" class="alignnone wp-image-14261 size-full" title="Custom Element Code appended with Shadow DOM rendered on Browser" src="https://blog.testproject.io/wp-content/uploads/2020/10/5th.png" alt="Custom Element Code appended with Shadow DOM rendered on Browser" width="512" height="108"/></noscript></p>
<p><span style="color: #333399;"><span style="font-weight: 400;">Let’s try to find Custom Element appended with Shadow DOM through </span><b><i>CSS, XPath,  document interface, and shadowRoot interface</i></b><span style="font-weight: 400;"> ></span></span></p>
<p><img loading="lazy" class="alignnone wp-image-14262 size-full" title="Custom Element appended with Shadow DOM through CSS, XPath,  document interface, and shadowRoot interface" alt="Custom Element appended with Shadow DOM through CSS, XPath,  document interface, and shadowRoot interface" width="512" height="173" src="https://blog.testproject.io/wp-content/uploads/2020/10/6th.png"/></p>
<p><noscript><img loading="lazy" class="alignnone wp-image-14262 size-full" title="Custom Element appended with Shadow DOM through CSS, XPath,  document interface, and shadowRoot interface" src="https://blog.testproject.io/wp-content/uploads/2020/10/6th.png" alt="Custom Element appended with Shadow DOM through CSS, XPath,  document interface, and shadowRoot interface" width="512" height="173"/></noscript></p>
<p><span style="font-weight: 400;">Oops! <em>NOTHING WORKS</em> even the shadowRoot interface failed.</span></p>
<p><span style="color: #333399;"><b><span style="color: #000080;">Q: </span>Do regular selectors {Xpath, CSS} work with Shadow DOM elements?</b></span><b><br /></b><span style="font-weight: 400;">As we have seen above, legacy selectors including document interface do not work with Shadow DOM elements.</span></p>
<p><span style="color: #333399;"><b><span style="color: #000080;">Q: </span>What is the role of the Open/Closed mode of Shadow Root, while finding the elements?</b></span><span style="font-weight: 400;"><br /></span><span style="font-weight: 400;">The Shadow Root has two different modes – </span><b>Open mode </b><span style="font-weight: 400;">allows the shadow root to be accessible from JavaScript outside the shadow root but </span><b>Closed mode</b><span style="font-weight: 400;"> does not. As we have seen above, shadowRoot interface is the only entry point to the Shadow DOM tree when the mode is OPEN. In the case of CLOSED mode, we can not access any Shadow DOM tree elements. In simple terms we can say – we can not automate CLOSED mode Shadow DOM tree elements.</span></p>
<ul>
<li><i><span style="font-weight: 400;">If the CLOSED mode Shadow DOM tree is business-critical to automate, then we can ask our developers to keep the mode OPEN on the test environment sandbox, so that we can automate/run it. Developers still can keep CLOSED mode on the production environment.<br /></span></i><i><span style="font-weight: 400;">                                                                                  OR </span></i></li>
<li><i><span style="font-weight: 400;">The developers can make OPEN/CLOSED mode as configurable for automation engineers. </span></i></li>
</ul>
<p><b><span style="color: #333399;"><span style="color: #000080;">Q: </span>How to interact with multi-level Shadow Root elements?</span></b><b><br /></b><span style="font-weight: 400;">To see the multilevel Shadow DOM tree elements on your machine, get the source code from my </span><span style="font-weight: 400;"><a target="_blank" href="https://github.com/VirenderPannu/polymer3-letsplanapp" rel="noopener noreferrer">GitHub repo</a>,</span><span style="font-weight: 400;"> and execute locally. Whenever you run the code locally, it will open up a web application {implemented with Google’s Polymer library} on the browser and then you can see a multi-level Shadow DOM tree through the browser console.  </span></p>
<p><img loading="lazy" class="alignnone wp-image-14263 size-full" title="multi-level Shadow Root elements" alt="multi-level Shadow Root elements" width="1462" height="632" srcset="https://blog.testproject.io/wp-content/uploads/2020/10/7th.png 1462w, https://blog.testproject.io/wp-content/uploads/2020/10/7th-512x221.png 512w, https://blog.testproject.io/wp-content/uploads/2020/10/7th-768x332.png 768w, https://blog.testproject.io/wp-content/uploads/2020/10/7th-1024x443.png 1024w" data-lazy-sizes="(max-width: 1462px) 100vw, 1462px" src="https://blog.testproject.io/wp-content/uploads/2020/10/7th.png"/></p>
<p><noscript><img loading="lazy" class="alignnone wp-image-14263 size-full" title="multi-level Shadow Root elements" src="https://blog.testproject.io/wp-content/uploads/2020/10/7th.png" alt="multi-level Shadow Root elements" width="1462" height="632" srcset="https://blog.testproject.io/wp-content/uploads/2020/10/7th.png 1462w, https://blog.testproject.io/wp-content/uploads/2020/10/7th-512x221.png 512w, https://blog.testproject.io/wp-content/uploads/2020/10/7th-768x332.png 768w, https://blog.testproject.io/wp-content/uploads/2020/10/7th-1024x443.png 1024w" sizes="(max-width: 1462px) 100vw, 1462px"/></noscript></p>
<p><span style="color: #333399;"><span style="font-weight: 400;">Let’s try to find multi-level Custom Elements appended with Shadow DOM through </span><b><i>shadowRoot interface</i></b><span style="font-weight: 400;"> ></span></span></p>
<p><img loading="lazy" class="alignnone wp-image-14264 size-full" title="multi-level Custom Elements appended with Shadow DOM through shadowRoot interface" alt="multi-level Custom Elements appended with Shadow DOM through shadowRoot interface" width="1600" height="80" srcset="https://blog.testproject.io/wp-content/uploads/2020/10/8th.png 1600w, https://blog.testproject.io/wp-content/uploads/2020/10/8th-512x26.png 512w, https://blog.testproject.io/wp-content/uploads/2020/10/8th-768x38.png 768w, https://blog.testproject.io/wp-content/uploads/2020/10/8th-1024x51.png 1024w" data-lazy-sizes="(max-width: 1600px) 100vw, 1600px" src="https://blog.testproject.io/wp-content/uploads/2020/10/8th.png"/></p>
<p><noscript><img loading="lazy" class="alignnone wp-image-14264 size-full" title="multi-level Custom Elements appended with Shadow DOM through shadowRoot interface" src="https://blog.testproject.io/wp-content/uploads/2020/10/8th.png" alt="multi-level Custom Elements appended with Shadow DOM through shadowRoot interface" width="1600" height="80" srcset="https://blog.testproject.io/wp-content/uploads/2020/10/8th.png 1600w, https://blog.testproject.io/wp-content/uploads/2020/10/8th-512x26.png 512w, https://blog.testproject.io/wp-content/uploads/2020/10/8th-768x38.png 768w, https://blog.testproject.io/wp-content/uploads/2020/10/8th-1024x51.png 1024w" sizes="(max-width: 1600px) 100vw, 1600px"/></noscript></p>
<p><span style="font-weight: 400;">Here we have used the shadowRoot interface twice – one inside another and finally we succeeded to find multi-level elements.</span></p>
<p><span style="color: #000080;"><b>Q: Does TestProject</b></span> <span style="text-decoration: underline;"><a target="_blank" href="https://blog.testproject.io/2020/07/14/announcing-testproject-new-opensdk/" rel="noopener noreferrer"><b>OpenSDK</b></a></span> <span style="color: #000080;"><b>support Shadow DOM tree elements?</b></span><b><br /></b><span style="font-weight: 400;">Undoubtedly YES! To interact with Shadow DOM tree elements, you have to set up </span><a target="_blank" href="https://github.com/testproject-io/java-sdk" rel="noopener noreferrer"><span style="font-weight: 400;">TestProject’s OpenSDK</span></a><span style="font-weight: 400;"> on your local machine. Then create a Maven Java project and add the following dependency {Here, we are using the </span><span style="color: #00ccff;"><a target="_blank" style="color: #00ccff;" href="https://docs.testproject.io/testproject-sdk/opensdk-v2/java-sdk" rel="noopener noreferrer"><span style="font-weight: 400;">Java</span></a></span><span style="font-weight: 400;"> binding}:</span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="xml"><dependency>
  <groupId>io.testproject</groupId>
  <artifactId>java-sdk</artifactId>
  <version>0.64.0-RELEASE</version>
</dependency></pre>
<p><span style="font-weight: 400;"><img src="https://s.w.org/images/core/emoji/13.0.0/72x72/1f4cd.png" alt="📍" class="wp-smiley" style="height: 1em; max-height: 1em;" /> <em>The</em> </span><i><span style="font-weight: 400;">OpenSDK also provides bindings with </span></i><a target="_blank" href="https://docs.testproject.io/testproject-sdk/opensdk-v2/python-sdk" rel="noopener noreferrer"><i><span style="font-weight: 400;">Python</span></i></a><i><span style="font-weight: 400;"> and </span></i><a target="_blank" href="https://docs.testproject.io/testproject-sdk/opensdk-v2/csharp-sdk" rel="noopener noreferrer"><i><span style="font-weight: 400;">C#</span></i></a><i><span style="font-weight: 400;">.</span></i><span style="font-weight: 400;"><br /></span><span style="font-weight: 400;"><img src="https://s.w.org/images/core/emoji/13.0.0/72x72/1f4cd.png" alt="📍" class="wp-smiley" style="height: 1em; max-height: 1em;" /> </span><i><span style="font-weight: 400;">More on the TestProject’s SDK and OpenSDK can be found here: </span></i><a target="_blank" href="https://blog.testproject.io/2020/10/05/testproject-sdk-v1-vs-opensdk-v2/" rel="noopener noreferrer"><i><span style="font-weight: 400;">TestProject SDK vs Open SDK?</span></i></a></p>
<p><span style="font-weight: 400;">After setting up Maven dependency, install &#038; start TestProject Agent (it’s completely free, simply <a target="_blank" href="https://app.testproject.io/signup/" rel="noopener noreferrer">sign up here</a> <img src="https://s.w.org/images/core/emoji/13.0.0/72x72/1f609.png" alt="😉" class="wp-smiley" style="height: 1em; max-height: 1em;" />) on your local machine and also get a token from your TestProject’s account. Now all prerequisites are done and you are ready to run the following automation script on your maven project by using TestProject’s OpenSDK.</span></p>
<p><span style="font-weight: 400; color: #000080;">Multi-level Shadow DOM tree automation code with TestProject’s OpenSDK ></span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="java">import io.testproject.sdk.drivers.web.ChromeDriver;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeOptions;

public class ShadowElementTests {
  static ChromeDriver driver;
    public static void main(final String[] args) throws Exception {
      driver = new ChromeDriver("YourTokenNumber", new ChromeOptions());        
      driver.navigate().to("http://localhost:3000/");
          
      WebElement todayShadow = expandRootElement(driver.findElement(By.tagName("todo-app")));
      WebElement todayAddItem = expandRootElement(todayShadow.findElement(By.tagName("add-item")));
      todayAddItem.findElement(By.tagName("textarea")).sendKeys("Add OpenSDK");
      todayAddItem.findElement(By.tagName("textarea")).sendKeys(Keys.ENTER);
      todayAddItem.findElement(By.tagName("textarea")).clear();
      todayAddItem.findElement(By.tagName("textarea")).sendKeys("Add TestProject SDK");
      todayAddItem.findElement(By.tagName("textarea")).sendKeys(Keys.ENTER);

      driver.quit();
    }
    
    public static WebElement expandRootElement(WebElement element) {
      WebElement ele = (WebElement) ((JavascriptExecutor) driver)
          .executeScript("return arguments[0].shadowRoot",element);
      return ele;
    }
}
</pre>
<p><span style="font-weight: 400;">After execution, we get automatic <a target="_blank" href="https://testproject.io/executive-test-reports/" rel="noopener noreferrer">test reports</a> directly on the </span><a target="_blank" href="https://app.testproject.io/#/reports" rel="noopener noreferrer"><span style="font-weight: 400;">TestProject Automation Portal</span></a><span style="font-weight: 400;">:</span></p>
<p><img loading="lazy" class="alignnone wp-image-14265 size-full" title="Shadow DOM with TestProject - Execution reports" alt="Shadow DOM with TestProject - Execution reports" width="1600" height="749" srcset="https://blog.testproject.io/wp-content/uploads/2020/10/9th.png 1600w, https://blog.testproject.io/wp-content/uploads/2020/10/9th-512x240.png 512w, https://blog.testproject.io/wp-content/uploads/2020/10/9th-768x360.png 768w, https://blog.testproject.io/wp-content/uploads/2020/10/9th-1024x479.png 1024w" data-lazy-sizes="(max-width: 1600px) 100vw, 1600px" src="https://blog.testproject.io/wp-content/uploads/2020/10/9th.png"/></p>
<p><noscript><img loading="lazy" class="alignnone wp-image-14265 size-full" title="Shadow DOM with TestProject - Execution reports" src="https://blog.testproject.io/wp-content/uploads/2020/10/9th.png" alt="Shadow DOM with TestProject - Execution reports" width="1600" height="749" srcset="https://blog.testproject.io/wp-content/uploads/2020/10/9th.png 1600w, https://blog.testproject.io/wp-content/uploads/2020/10/9th-512x240.png 512w, https://blog.testproject.io/wp-content/uploads/2020/10/9th-768x360.png 768w, https://blog.testproject.io/wp-content/uploads/2020/10/9th-1024x479.png 1024w" sizes="(max-width: 1600px) 100vw, 1600px"/></noscript></p>
<p><span style="font-weight: 400;">The above code snippet only contains ChromeDriver, but it supports all W3C webdrivers – FirefoxDriver, EdgeDriver, and SafariDriver. <a target="_blank" href="https://testproject.io/" rel="noopener noreferrer">Try yourself</a> at your end <img src="https://s.w.org/images/core/emoji/13.0.0/72x72/270c.png" alt="✌" class="wp-smiley" style="height: 1em; max-height: 1em;" /></span></p>
<p><span style="color: #000080;"><i><span style="font-weight: 400;">FirefoxDriver ></span></i></span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="java">FirefoxDriver driver = new FirefoxDriver("YourTokenNumber", new FirefoxOptions());</pre>
<p><span style="color: #000080;"><i><span style="font-weight: 400;">EdgeDriver ></span></i></span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="java">EdgeDriver driver = new EdgeDriver("YourTokenNumber", new EdgeOptions());</pre>
<p><span style="color: #000080;"><i><span style="font-weight: 400;">SafariDriver ></span></i></span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="java">SafariDriver driver = new EdgeDriver("YourTokenNumber", new SafariOptions());</pre>
<p><i><span style="font-weight: 400;">And don’t forget to add your TestProject Token in your code snippet, otherwise, it will not interact with TestProject Agent and nothing will happen.</span></i></p>
<p><span style="font-weight: 400;"><img src="https://s.w.org/images/core/emoji/13.0.0/72x72/1f4cd.png" alt="📍" class="wp-smiley" style="height: 1em; max-height: 1em;" />The application</span><i><span style="font-weight: 400;"> that we have above for automation, can be found at – </span></i><a target="_blank" href="https://github.com/VirenderPannu/polymer3-letsplanapp" rel="noopener noreferrer"><i><span style="font-weight: 400;">GitHub repo</span></i></a><i><span style="font-weight: 400;">. This application is implemented by using Google’s Polymer library with NodeJS. So install those first before running this application locally.</span></i></p>
<h2><strong>Key Takeaways</strong></h2>
<ul>
<li><span style="font-weight: 400;">Understood how QA Automation folks can interact with custom elements WITH / WITHOUT appending Shadow DOM.</span></li>
<li><span style="font-weight: 400;">We got familiar with the role of the Open/Closed mode of Shadow Root, while finding the elements.</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">Got to know the limitations of regular selectors {Xpath, CSS} with Shadow DOM.</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">Understood how to interact with multi-level Shadow Root elements.</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">Clear thought on how TestProject’s OpenSDK supports Shadow DOM elements.</span></li>
</ul>
<p><span style="font-weight: 400;">Now we are pretty familiar with the Shadow DOM tree and its interaction with TestProject’s OpenSDK. But still, we have a few open questions:</span></p>
<ul>
<li><span style="font-weight: 400;">Does TestProject <a target="_blank" href="https://testproject.io/easy-test-automation/" rel="noopener noreferrer">record/playback</a> support Shadow DOM elements?</span></li>
<li><span style="font-weight: 400;">Few more interesting aspects of the Shadow DOM tree?</span></li>
</ul>
<p><b><i>Stay tuned and wait for the last part, very soon it will be on your plate </i><img src="https://s.w.org/images/core/emoji/13.0.0/72x72/1f609.png" alt="😉" class="wp-smiley" style="height: 1em; max-height: 1em;" /><img src="https://s.w.org/images/core/emoji/13.0.0/72x72/1f44d.png" alt="👍" class="wp-smiley" style="height: 1em; max-height: 1em;" /><img src="https://s.w.org/images/core/emoji/13.0.0/72x72/1f60a.png" alt="😊" class="wp-smiley" style="height: 1em; max-height: 1em;" /><img src="https://s.w.org/images/core/emoji/13.0.0/72x72/1f44d.png" alt="👍" class="wp-smiley" style="height: 1em; max-height: 1em;" /></b></p>
</div>
<p><br />
<br /><a href="https://blog.testproject.io/2020/10/13/shadow-dom-elements-and-using-the-testproject-opensdk-part-2/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Neotys Announces NeoLoad 7.6 &#8211; Neotys</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/neotys-announces-neoload-7-6-neotys/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Mon, 12 Oct 2020 13:58:09 +0000</pubDate>
				<category><![CDATA[Performance]]></category>
		<category><![CDATA[Announces]]></category>
		<category><![CDATA[NeoLoad]]></category>
		<category><![CDATA[Neotys]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/neotys-announces-neoload-7-6-neotys/</guid>

					<description><![CDATA[NeoLoad 7.6 introduces new dashboard features, advanced updates to APIs and as-code capabilities, and enhanced search functionality. Here are the]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div id="post-105337"> <!-- .et_post_meta_wrapper --></p>
<div class="entry-content">
<p><a target="_blank" href="https://www.neotys.com/neoload/whats-new" rel="noopener noreferrer"><span style="font-weight: 400;">NeoLoad 7.6</span></a><span style="font-weight: 400;"> introduces new dashboard features, advanced updates to APIs and as-code capabilities, and enhanced search functionality.</span></p>
<p><span style="font-weight: 400;">Here are the highlights: We’ve made NeoLoad dashboards more powerful and flexible. Our APIs are now more extensible so you can integrate chaos testing campaigns, export raw data to a third-party system, manage your workspaces more systematically and stop a test from within a virtual user path. As-code validation capabilities have been enhanced, and we’ve introduced advanced settings for as-code scenarios. We added more search functionality so you can get to test results faster. And more.</span></p>
<p><span style="font-weight: 400;"> </span></p>
<h2>What’s New in This Release?</h2>
<ul>
<li style="font-weight: 400;"><b>Dashboard</b><span style="font-weight: 400;"> – New analysis and graph capabilities have been added to the dashboard. You are now able to analyze and share tables and text-editable comment fields, as well as export graphs in PNG format.</span></li>
<li style="font-weight: 400;"><b>APIs</b><span style="font-weight: 400;"> – The NeoLoad REST and JavaScript APIs have several new capabilities.  You can now declare external events that will appear in Neoload Web test results values; extract raw data from Neoload Web; programmatically create, update and delete workspaces; and use the JavaScript API to stop a test if a virtual user experiences an issue during the test.</span></li>
<li style="font-weight: 400;"><b>As Code</b><span style="font-weight: 400;"> – Test as code now includes additional advanced features like assertions and custom load policy, and new capabilities to guarantee that the test is running as expected.</span></li>
<li style="font-weight: 400;"><b>Test Search</b><span style="font-weight: 400;"> – Tests can be searched by name in the advanced search window on the dashboard. Access to test results is now even faster.</span></li>
<li style="font-weight: 400;"><b>Feature enhancements</b><span style="font-weight: 400;"> are also included in this release.</span></li>
</ul>
<h2>Want to learn more?</h2>
<p><span style="font-weight: 400;">Discover all of NeoLoad 7.6’s enhancements on our</span><a target="_blank" href="https://www.neotys.com/neoload/whats-new" rel="noopener noreferrer"> <span style="font-weight: 400;">What’s New page</span></a><span style="font-weight: 400;"> or</span> <a target="_blank" href="https://www.neotys.com/support/download-center" rel="noopener noreferrer"><span style="font-weight: 400;">download the latest version</span></a><span style="font-weight: 400;"> and start testing today.</span></p>
</p></div>
<p> <!-- .entry-content --><br />
					 <!-- .et_post_meta_wrapper -->
				</div>
<p><br />
<br /><a href="https://www.neotys.com/news/neotys-announces-neoload-7-6">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>#BeCyberSmart: Equipping Kids to Stay Safe on New Video Apps</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/becybersmart-equipping-kids-to-stay-safe-on-new-video-apps/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 09 Oct 2020 22:56:20 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Apps]]></category>
		<category><![CDATA[BeCyberSmart]]></category>
		<category><![CDATA[Equipping]]></category>
		<category><![CDATA[Kids]]></category>
		<category><![CDATA[Safe]]></category>
		<category><![CDATA[Stay]]></category>
		<category><![CDATA[video]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/becybersmart-equipping-kids-to-stay-safe-on-new-video-apps/</guid>

					<description><![CDATA[These days, spending time with friends face-to-face still isn’t always an option for teens. So, finding a fun, new app]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<div class="author-block padding-bottom-xs">
                
            </div>
<p>These days, spending time with friends face-to-face still isn’t always an option for teens. So, finding a fun, new app can be a little like discovering your own private beach where you can chill out, connect with friends, and be thoroughly entertained. Keeping them safe on that digital beach? That’s where parents can make a difference.</p>
<p>With all the popular, increasingly sophisticated video apps available, it’s easy to understand why safety ends up being the <em>last</em> thing on our kids’ minds. I get it. My daughter and I recently sat for hours watching Tik Tok videos and laughing until we cried.</p>
<p>However, October is National Cybersecurity Month and the perfect time to hit pause and talk about how to stay safe on all the apps vying for our attention.</p>
<p><strong>Popular Apps to Monitor</strong></p>
<p><strong>Triller.</strong> The Triller app is a video-based platform, much like Tik Tok, that has been around since 2015. Triller has a variety of filters, and music kids can use with the videos they create.</p>
<p><em>What to monitor: </em>Triller’s content may not always be appropriate, and because viewers can leave comments on videos, there’s a risk of cyberbullying. Also, Triller has some privacy loopholes such as data collection, location tracking, and a public account default — all of which can be modified in Settings.</p>
<p><strong>HouseParty</strong> is a group video chat platform nicknamed the “Quarantine App” since its popularity increased by an additional 10 million users during the COVID lockdown. Houseparty allows users to invite friends and “friends of friends” into group video-chat sessions — much like a party. The app displays up to eight live streams on the screen at a time, creating an instant sense of community.</p>
<p><em>What to monitor.</em> Because the app allows “friends of friends” to livestream in a group, that unknown element opens the door to a number of safety issues. Encourage kids to deny join requests from unknown people. While some users leave rooms unlocked while live streaming their party, encourage your child to use the padlock function to limit conversations to people who know each other.</p>
<p><strong>Yubo.</strong> The Yubo app (formerly Yellow) is also called the “Tinder for Teens.” Kids can connect and live stream with people they know — and easily connect with people they don’t. If two users swipe right, Yubo will match them, and they can share Snapchat or Instagram names. Another app very similar to Yubo is the Hoop app.</p>
<p><em>What to monitor.</em> Content on Yubo can be explicit and cyberbullying can arise more often since fake accounts are common. Yubo’s swipe format promotes a appearance driven match standard may not be healthy for some teens.</p>
<p><strong>Byte.</strong> Another app similar to Tik Tok, Byte, features short-form videos. Byte, created by the Founders of the now defunct Vine app, lacks the filters and music of other video apps, but that’s okay; the simplicity is a plus for Byte fans.</p>
<p><em>What to monitor:</em> Be aware of inappropriate content, cyberbullying in comments, and unknown “friends” who may be part of your child’s Byte community. Online predators have been known to reach out to kids on this app. While unwanted followers can be blocked, surprisingly, Byte doesn’t give you the ability to make your account private.</p>
<p><strong>App Safety Basics</strong></p>
<p><strong>Practice personal responsibility.</strong> The theme for Cybersecurity Month 2020 is <em>Do Your Part #BeCyberSmart</em>. With this in mind, discuss the responsibility that comes with owning technology, be it a smartphone, a game system, a smartwatch, or any other connected device. The goal, says <a target="_blank" href="https://staysafeonline.org/cybersecurity-awareness-month/" rel="noopener noreferrer">The National Cyber Security Alliance</a>,</p>
<p>“If you connect it, protect it.”</p>
<p><strong>Privacy settings.</strong> To protect privacy and keep unknown people from connecting with minors, maximize privacy Settings on each new app.</p>
<p><strong>Increase safeguards.</strong> Apps can be addictive and siphon family time, study time, and sleep. A <a target="_blank" href="https://www.mcafee.com/en-us/parental-controls/mcafee-safe-family.html" rel="noopener noreferrer">comprehensive security solution</a> can help parents limit device time, monitor activity, and block risky content and apps.</p>
<p><strong>Share wisely.</strong> Even a 15-second video shared with “close friends only” can end up in the public stream. Advise your child to only share videos or photos they’d feel good sharing with the world.</p>
<p><strong>Protect personal information.</strong> Remind your child not to share private details about themselves or their family members with anyone online. This includes emails, full names, phone numbers, pet names, school names, or location.</p>
<p><strong>Block and report.</strong> Talk with your child about what you consider appropriate versus inappropriate content, how to block strangers, and how to report cyberbullying and scams.</p>
<p>Finally, keep talking with your kids — about everything. Ultimately, it will be your consistency in having honest, ongoing dialogue with your child that will be your most valuable tool in keeping them safe online.</p>
<p> </p>
</p></div>
<p><script>
  !function(f,b,e,v,n,t,s)
  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  s.parentNode.insertBefore(t,s)}(window, document,'script',
  'https://connect.facebook.net/en_US/fbevents.js');
  fbq('init', '187610925152304');
  fbq('track', 'PageView');
</script><script>
// load Facebook
!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;
t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,
document,'script','https://connect.facebook.net/en_US/fbevents.js');
fbq('init', '766537420057144');
fbq('track', "PageView");</p>
<p>//document.write('x3Cnoscript>x3Cimg height="1" width="1" style="display:none" src="https://www.facebook.com/tr?id=766537420057144&ev=PageView&noscript=1" />x3C/noscript>');
</script><br />
<br /><br />
<br /><a href="https://www.mcafee.com/blogs/consumer/family-safety/becybersmart-equipping-kids-to-stay-safe-on-new-video-apps/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Fitbit Spyware Steals Personal Data via Watch Face</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/fitbit-spyware-steals-personal-data-via-watch-face/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 09 Oct 2020 18:58:00 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Data]]></category>
		<category><![CDATA[Face]]></category>
		<category><![CDATA[Fitbit]]></category>
		<category><![CDATA[Personal]]></category>
		<category><![CDATA[Spyware]]></category>
		<category><![CDATA[steals]]></category>
		<category><![CDATA[Watch]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/fitbit-spyware-steals-personal-data-via-watch-face/</guid>

					<description><![CDATA[The administrator of your personal data will be Threatpost, Inc., 500 Unicorn Park, Woburn, MA 01801. Detailed information on the]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<div class="c-note c-note--dash u-hidden u-block@md">
<p>The administrator of your personal data will be Threatpost, Inc., 500 Unicorn Park, Woburn, MA 01801. Detailed information on the processing of personal data can be found in the <a target="_blank" href="https://threatpost.com/web-privacy-policy/" rel="noopener noreferrer">privacy policy</a>. In addition, you will find them in the message confirming the subscription to the newsletter.</p>
</div>
</div>
<p><br />
<br /><a href="https://threatpost.com/fitbit-personal-data-watch-face/160003/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>How to empower elite DevSecOps performers</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/how-to-empower-elite-devsecops-performers/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 09 Oct 2020 15:00:00 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[DevSecOps]]></category>
		<category><![CDATA[elite]]></category>
		<category><![CDATA[Empower]]></category>
		<category><![CDATA[performers]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/how-to-empower-elite-devsecops-performers/</guid>

					<description><![CDATA[The most recent Accelerate: State of DevOps Report describes what elite-performing DevOps engineers look like. The key differentiator for those DevOps-focused software]]></description>
										<content:encoded><![CDATA[<p> <br />
<br /></p>
<div>
<p>The <a target="_blank" href="https://techbeacon.com/devops/2019-accelerate-state-devops-report-how-elites-drive-high-performance" rel="noopener noreferrer">most recent Accelerate: State of DevOps Report</a> describes what elite-performing DevOps engineers look like. The key differentiator for those DevOps-focused software engineers is velocity. They iterate fast from commit to deployment, they deploy frequently, and they recover quickly.</p>
<p>Velocity via automation is fundamental to DevOps and CI/CD culture. Building the right pipes and process helps <a target="_blank" href="https://techbeacon.com/devops/how-descartes-labs-achieved-safe-mission-critical-continuous-delivery" rel="noopener noreferrer">create an elastic, scalable, and secured</a> infrastructure and applications.</p>
<p>Here&#8217;s how you can use cloud and DevOps principles to leverage and automate security.</p>
<h3>On-demand and self-service</h3>
<p>As a DevOps engineer you can help your clients provision any resource they want, without human interaction. How? Through preparation and templates.</p>
<p>Yes, it&#8217;s a lot of work. And yes, you can integrate security into those templates. That way, developers don&#8217;t have to worry about misconfiguring the infrastructure. (For the most part, even when they worry, they still misconfigure it. They might as well use your template.)</p>
<h3>Provide secured, and broad, network access</h3>
<p>Working from home has become much more prevalent in the last six months or so, and it looks as if it&#8217;s here to stay. You need to allow your organization to provide secured access to any resource your developers need, from anywhere they want. This includes laptops, mobile devices, workstations, etc.</p>
<p>Since many of us share our at-home bandwidth with family members (and unintentionally our neighbors, too), you should <a target="_blank" href="https://techbeacon.com/security/zero-trust-security-how-get-started" rel="noopener noreferrer">incorporate a zero-trust mechanism</a> in your networks and access points.</p>
<h3>Allow for rapid elasticity and resource pooling</h3>
<p>Provision and assign resources dynamically and at scale, as much as needed. A growing startup, for example, should design its infrastructure while thinking about the future. Someday it might have to support a hundred times, or even a thousand times, more users than it currently does.</p>
<p>Your design right now should support this growth automatically. There are many use cases where scaling down will also be necessary, so think about triggers for that as well.</p>
<h3>Measure your services</h3>
<p>One of the great powers of the cloud is that <a target="_blank" href="https://techbeacon.com/enterprise-it/why-cloud-based-apps-are-so-hard-manage" rel="noopener noreferrer">everything can be monitored</a>. The logs and metadata are there; you just have to activate them and stream them to your favorite log analysis software. It&#8217;s going to help you both for ops and security purposes.</p>
<p>You can control, detect, respond, and optimize. If you haven&#8217;t done it by now, enable your flow logs and choose &#8220;all&#8221; actions. (The default is to log accepted traffic, even though what&#8217;s rejected has much to tell you.)</p>
<h3>CI/CD is also all about automation</h3>
<p><a target="_blank" href="https://techbeacon.com/app-dev-testing/seven-key-enablers-continuous-testing" rel="noopener noreferrer">Add automated testing</a> to your CI process, so that any broken code will be detected quickly and the relevant developer will be notified and get a chance to push corrections fast as well. Code should be clean of operation bugs, but also of security bugs and issues, and there&#8217;s no reason not to test them together. This will give developers a lot of confidence in their code and in your pipe.</p>
<p>The CD process should allow teams a lot of independence; you should minimize the dependence on other teams for support or resource approval. As stated before, <a target="_blank" href="https://techbeacon.com/devops/how-keybank-achieved-continuous-integration-delivery" rel="noopener noreferrer">build the pipeline</a> to be as self-service as possible; this will save you and your team time from repeating the same tasks, and specifically the security-related tasks that no one likes to do.</p>
<h3>Put these principles into action</h3>
<p>How exactly are you going to implement all of these principles and be awesome DevOps or DevSecOps engineers? With the right tools. You know a tool is right when it integrates well with your current pipe and processes.</p>
<p>Even if setup takes a little time, it&#8217;s going to save you a lot of time down the line. Elite performers automate any process they can and free up their time to do the things they have passion for.</p>
<p>Here are a few open-source tools that I find useful and that help me automate security along the CI/CD pipeline.</p>
<ul>
<li><strong>Pre-commit:</strong> <a target="_blank" href="https://github.com/thoughtworks/talisman" rel="nofollow noopener noreferrer">Talisman</a> helps make sure your developers are not committing credentials and tokens.</li>
<li><strong>Secrets management:</strong> <a target="_blank" href="https://aws.amazon.com/secrets-manager/" rel="nofollow noopener noreferrer">AWS secrets manager</a> addresses the common bad practice of storing credentials in configuration files. Using a secrets manager can mitigate the risk of losing credentials.</li>
<li><strong>Software dependencies check:</strong> Everyone uses open-source and third-party code and packages, which often contain vulnerabilities. <a target="_blank" href="https://www.owasp.org/index.php/OWASP_Dependency_Check" rel="nofollow noopener noreferrer">OWASP Dependency Check</a> helps check that problem on a regular basis.</li>
<li><strong>DAST:</strong> <a target="_blank" href="https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project" rel="nofollow noopener noreferrer">OWASP ZAP</a> scans your web applications.</li>
<li><strong>SAST:</strong> Check out <a target="_blank" href="https://owasp.org/www-community/Source_Code_Analysis_Tools" rel="nofollow noopener noreferrer">OWASP</a>&#8216;s analysis on different tools for this, based on the relevant coding languages they support.</li>
</ul>
<p>Now you&#8217;ve got what it takes to be an elite DevSecOps performer.</p>
<h4>Keep learning</h4>
</div>
<p><br />
<br /><a href="https://techbeacon.com/security/how-empower-elite-devsecops-performers">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>How to Optimize a Test and Make It 560% Faster</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/how-to-optimize-a-test-and-make-it-560-faster/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Thu, 08 Oct 2020 08:00:00 +0000</pubDate>
				<category><![CDATA[Automation]]></category>
		<category><![CDATA[Faster]]></category>
		<category><![CDATA[Optimize]]></category>
		<category><![CDATA[Test]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/how-to-optimize-a-test-and-make-it-560-faster/</guid>

					<description><![CDATA[Before optimizations Too many Selenium commands in a test can lead to tests that are dramatically slower and less reliable.]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<h2>Before optimizations</h2>
<p>Too many Selenium commands in a test can lead to tests that are dramatically slower and less reliable. Every Selenium command carries the potential for an invalid element locator or a synchronization issue. </p>
<p>Below we have a table that shows an automated test that was designed to click two radio buttons. V1 test is making 157 Selenium commands and takes 95 seconds to execute. After optimizations, the same exact test executes 9 Selenium commands and runs in 17 seconds (5X faster).</p>
<p></p>
<p><img src="https://images.ctfassets.net/czwjnyf8a9ri/4qf88G5OmFvicYOD8342m0/67f9c3e26399b89c679678ea4090531f/Nikolay_Selenium_2.png?fm=webp" alt="Nikolay Selenium 2" title="Nikolay Selenium 2"/></p>
<p>Total test run time V1</p>
<p><img src="https://images.ctfassets.net/czwjnyf8a9ri/2PdwvxH2wjJbPCjMAFSU7W/8ef2197447101b4addcbc3dc46411a61/Nikolay_Selenium_3.png?fm=webp" alt="Nikolay Selenium 3" title="Nikolay Selenium 3"/></p>
<p>Number of web requests before optimizations (V1)</p>
<h3>What was the purpose of this test?</h3>
<p>The purpose of this test was to simply click two radio buttons on this <a target="_blank" href="https://www.techlistic.com/p/selenium-practice-form.html" rel="noopener noreferrer">URL</a>. </p>
<p><img src="https://images.ctfassets.net/czwjnyf8a9ri/7Bh8BzL1b9d42fxMrbWRYY/df78d7258b02482a163040078508fbc9/Nikolay_Selenium_4.png?fm=webp" alt="Nikolay Selenium 4" title="Nikolay Selenium 4"/></p>
<h2>Identifying the inefficiencies</h2>
<p>The major contributor to the slow test time of such a simple test was the large number of unnecessary web requests.</p>
<h3>Attempting to click first radio button</h3>
<p>After loading the URL, the test takes ~60 seconds searching for random elements without taking a single action.</p>
<p><img src="https://images.ctfassets.net/czwjnyf8a9ri/2sAAdrMFkSsG0rkxBucoGH/255c39548667b5ea8cd2a6b64a60c950/Nikolay_Selenium_5.png?fm=webp" alt="Nikolay Selenium 5" title="Nikolay Selenium 5"/></p>
<p>Unnecessary commands start at the 15-second mark and continue until 1:19, at which point the element is finally located and clicked.</p>
<p><img src="https://images.ctfassets.net/czwjnyf8a9ri/60QX6hnkDKYK8OVIcfTuCa/455edc504b820a07c1ecd498d5fb71cc/Nikolay_selenium_6.png?fm=webp" alt="Nikolay selenium 6" title="Nikolay selenium 6"/></p>
<p><b>Potential Waste</b>: 60 seconds on 1 element</p>
<h3>Attempting to click second radio button</h3>
<p>At 1:23, the test starts looking for the Female radio button.</p>
<p><img src="https://images.ctfassets.net/czwjnyf8a9ri/29crys9WCabuTnlavyEyRV/e70cb38772ab429cfdc3a926a5e649c5/Nikolay_Selenium_7.png?fm=webp" alt="Nikolay Selenium 7" title="Nikolay Selenium 7"/></p>
<p>And finally clicks it at 1:28:</p>
<p><img src="https://images.ctfassets.net/czwjnyf8a9ri/7hcpyvYRp5SkzAwEWD926F/74d35dbb1a4d6773035a5310e76dbcfc/Nikolay_Selenium_8.png?fm=webp" alt="Nikolay Selenium 8" title="Nikolay Selenium 8"/></p>
<p>&#8230;but not before making 16 more Selenium commands to check whether the element is displayed or selected.</p>
<p><img src="https://images.ctfassets.net/czwjnyf8a9ri/1CfqaMx9uCWgjZzInBE1BZ/001d99f1d52c948bf4efc138c0a47339/Nikolay_Selenium_9.png?fm=webp" alt="Nikolay Selenium 9" title="Nikolay Selenium 9"/></p>
<p><b>Potential waste</b>: 3 seconds for every element.click()</p>
<h3>Post-click() Selenium commands</h3>
<p>Finally, there is an interesting pattern of wasted web requests that happens after every element click(). We can see that below:</p>
<p><img src="https://images.ctfassets.net/czwjnyf8a9ri/zFlYW74bOxtCWb3hcrenK/3986d1d533461a4cf8406681c58d1288/Nikolay_Selenium_10.png?fm=webp" alt="Nikolay Selenium 10" title="Nikolay Selenium 10"/></p>
<p>It’s understandable that these are being performed to validate that the element is in the correct state after the execution of a click(). However, these actions are wasteful because Selenium would throw an error if the action wasn’t successful. Furthermore, the next action would fail with an exception if it depended on the state of the previous element.</p>
<p><b>Potential waste</b>: 2 seconds per element.click()</p>
<h2>The refactor using cleaner practices</h2>
<p>The refactoring of this test was extremely simple and required only a few minutes after understanding the root cause of the problem. Furthermore, we saw that the final outcome of the refactoring created a test that was 560% faster and drastically more stable because it had fewer Selenium commands.</p>
<p>Here’s the code after we finished refactoring:</p>
<p><img src="https://images.ctfassets.net/czwjnyf8a9ri/1qGim9lteXAjj7FvuX3MxF/b0f50e2458f4a1d2197a4bd6a44bcc6c/Nikolay_Selenium_11.png?fm=webp" alt="Nikolay Selenium 11" title="Nikolay Selenium 11"/></p>
<p>This is the <a target="_blank" href="https://app.saucelabs.com/tests/d853239cec5041f3a6f6ec85342e3be5" rel="noopener noreferrer">test execution result</a> and below is the screenshot.</p>
<p><img src="https://images.ctfassets.net/czwjnyf8a9ri/3Ruv9nbEkTFYxvfaJmXVtn/2f96e47612918802ae021907d5362f8b/Nikolay_Selenium_12.png?fm=webp" alt="Nikolay Selenium 12" title="Nikolay Selenium 12"/></p>
<h2>Lessons learned</h2>
<p>Bloated tests in the industry are infamously common and it’s something that I tackle on a weekly basis. They typically come with a framework that we use for our automation. I’ve seen this with both OSS frameworks and especially homegrown ones. The key is to consider the impact of extra Selenium commands on the overall automation program. In this use case, the test suite execution time will be five times longer for the entire organization. This obviously decreases the feedback cycle time and also <a target="_blank" href="https://saucelabs.com/blog/using-the-continuous-testing-benchmark-to-build-digital-confidence" rel="noopener noreferrer">makes the automation less reliable</a>.</p>
<p> </p>
</div>
<p><br />
<br /><a href="https://saucelabs.com/blog/how-to-optimize-a-test-and-make-it-560-percent-faster">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>5 Common Mistakes in Test Automation</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/5-common-mistakes-in-test-automation/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Tue, 06 Oct 2020 05:11:47 +0000</pubDate>
				<category><![CDATA[Automation]]></category>
		<category><![CDATA[Common]]></category>
		<category><![CDATA[Mistakes]]></category>
		<category><![CDATA[Test]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/5-common-mistakes-in-test-automation/</guid>

					<description><![CDATA[Quite recently, I gave a talk at Selenium Conference 2020 Virtual on How to build an automation framework with Selenium:]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<p>Quite recently, I gave a talk at <a target="_blank" href="https://2020.seleniumconf.in/" rel="noopener noreferrer">Selenium Conference 2020</a> Virtual on <a target="_blank" href="https://confengine.com/selenium-conf-2020/proposal/13303/how-to-build-an-automation-framework-with-selenium-patterns-and-practices" rel="noopener noreferrer"><b>How to build an automation framework with Selenium: Patterns and practices</b></a>. In this session, I talked about what are some of the basic building blocks of a good test automation framework implementation and some good <a target="_blank" href="https://blog.testproject.io/2020/06/29/design-patterns-in-test-automation/" rel="noopener noreferrer">design patterns</a> to follow and anti-patterns to avoid.</p>
<p>If interested, You can see all the slides for this on <a target="_blank" href="http://automationhacks.io/slides/docs/ui_automation_framework/index.html" rel="noopener noreferrer">my blog site</a> and the video once ConfEngine releases it on their <a target="_blank" href="https://www.youtube.com/c/ConfEngine/videos" rel="noopener noreferrer">YouTube channel</a>.</p>
<p>After this talk, it led me to think more deeply in terms of what are the mistakes that we as testers/automation engineers make in our test automation, and could we rather avoid these in the first place and, well, not <b>do it</b> in the first place <img src="https://s.w.org/images/core/emoji/13.0.0/72x72/1f914.png" alt="🤔" class="wp-smiley" style="height: 1em; max-height: 1em;" />?</p>
<p>I’ve been personally burnt due to some of these mistakes in my career and so I wanted to take some time out and write this post, in order to shed some more light on these mistakes and how you can avoid making them in your test automation code.</p>
<p>We will discuss these in the UI automation context but some of these are general test automation anti-patterns to avoid.</p>
<p>Let’s get started, shall we?</p>
<h2><strong>Writing Assertions Inside The Page Objects</strong></h2>
<p>When we write <a target="_blank" href="https://testproject.io/" rel="noopener noreferrer">UI automation</a> using the page object pattern, initially it could be quite tempting to even put assertions inside the page object classes, I’ve personally been guilty of this. However, doing so leads to unnecessary complexity in the page objects wherein you might end up writing multiple methods to satisfy both positive and negative scenarios on a given page.</p>
<p>However, if your assertions are kept outside the page objects and mostly in your Test files or Test helpers, then you can treat the page object as just an abstraction for a given <b>Page or Component</b> and reuse the same method to verify different outcomes.</p>
<p>Writing assertions in tests is a very natural readable thing to do as your colleagues don’t have to dig into a long page object to figure out what the test is trying to assert. Angie Jones also alludes to this in her very insightful post on <a target="_blank" href="https://angiejones.tech/page-object-model/" rel="noopener noreferrer">Tips for healthy page objects</a>.</p>
<p>Naturally, you can adopt the same philosophy even when writing Functional API automation. Keeping assertions in test files instead of deeply nested layers of abstraction ensures you follow the <a target="_blank" href="https://en.wikipedia.org/wiki/KISS_principle" rel="noopener noreferrer">KISS (Keep it simple, stupid)</a> principle while resulting in <a target="_blank" href="https://en.wikipedia.org/wiki/Separation_of_concerns#:~:text=In%20computer%20science%2C%20separation%20of,code%20of%20a%20computer%20program." rel="noopener noreferrer">good separation of concerns</a>.</p>
<h2><strong>Writing WebDriver API Methods in Tests/Page Objects</strong></h2>
<p>While creating a UI automation framework, it is quite easy to fall in the trap of writing <a target="_blank" href="https://blog.testproject.io/2020/06/30/selenium-4-new-window-tab-screenshots/" rel="noopener noreferrer">Selenium WebDriver</a>/<a target="_blank" href="https://blog.testproject.io/category/appium/" rel="noopener noreferrer">Appium</a> Driver methods (driver.sendKeys(), driver.click()) directly in your page objects, or even in tests.</p>
<p>The main problem with such an approach is that you are mixing different responsibilities into page objects and test classes. Your test classes should be all about performing a single atomic action and verifying its outcome using meaningful well-written assertions.</p>
<p>Having WebDriver methods in tests is a really bad idea since if there are any changes in Selenium WebDrivers API or different versions of the library, then you would have to make these changes in all your test files/page objects.</p>
<p>It’s always a good idea to wrap third-party libraries into your own abstractions since this prevents these dependencies leaking throughout your framework and is a way to write clean code (You can read more about clean code <a target="_blank" href="https://automationhacks.io/2018/11/25/basics-of-writing-clean-code/" rel="noopener noreferrer">in my article</a> or in this great <a target="_blank" href="https://blog.testproject.io/2020/04/22/clean-code-in-tests-what-why-and-how/" rel="noopener noreferrer">Clean Code</a> article by Corina Pip).</p>
<p>Instead, It is much better to write wrapper functions over WebDriver methods in a <b>BasePage</b> class and either inherit or compose this in all your page objects. This way, if anything changes, you have to make these changes in a single place instead of fixing these in multiple places. This very nicely adheres to the <a target="_blank" href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself" rel="noopener noreferrer">DRY (Don’t repeat yourself)  principle</a> which is considered a very good programming practice:</p>
<blockquote>
<p>If you have WebDriver APIs in your test methods, You’re Doing It Wrong.</p>
<p>– Simon Stewart</p>
</blockquote>
<h2><strong>Writing Long E2E Tests with Multiple Actions and Assertions</strong></h2>
<p>When writing <a target="_blank" href="https://testproject.io/" rel="noopener noreferrer">test automation</a>, it is often quite convenient to model entire user journeys as long winding E2E tests with multiple intermediate assertions. You can even argue that it leads to writing less code. However, these tests in the long run turn out to be a nightmare because of multiple reasons:</p>
<ul>
<li>They execute very slowly since most of these are from the Web/Mobile level which inherently has multiple factors leading to slow speed.</li>
<li>If one earlier assertion fails, none of the succeeding assertions are executed, leading to a lack of coverage.</li>
<li>These tests are quite flaky and non-deterministic, when they fail it’s often due to multiple different reasons, leading to great difficulty in debugging and maintaining these.</li>
</ul>
<p>Above are some of the reasons why this is a bad idea. So what can we do?</p>
<p>Instead, prefer to write shorter, more targeted <a target="_blank" href="https://blog.testproject.io/2020/03/12/creating-ui-automation-that-is-focused-reliable-and-fast/" rel="noopener noreferrer">atomic tests</a> that verify a single aspect of your system under test functionality.</p>
<p>It’s quite useful to refer to the <a target="_blank" href="https://automationintesting.com/2019/08/trims-automation-in-testing-strategy.html" rel="noopener noreferrer">TRIMS</a> heuristic coined by Richard Bradshaw of <a target="_blank" href="https://www.ministryoftesting.com/" rel="noopener noreferrer">MOT (Ministry of testing</a>/<a target="_blank" href="https://automationintesting.com/" rel="noopener noreferrer">Automation In testing</a> fame).</p>
<p>The most obvious benefit that you get by writing atomic tests is that they are very easy to parallelize and deterministic in nature. When they fail, it usually is for a single reason and hence it’s quite easy to debug and maintain them.</p>
<h2><strong>Treating UI Automation as The One and Only Hammer for Every Nail</strong></h2>
<p>UI automation that works is quite wonderful to watch. Quite often one common mistake made by new budding automation engineers (after learning the WebDriver API) is obviously to try and use it for every use case that they can think of.</p>
<p>What could very well have been a medium-sized test suite to verify essential functionality (that could only be verified on the UI), turns into a gigantic suite of UI automation that tests every possible functionality from the UI <img src="https://s.w.org/images/core/emoji/13.0.0/72x72/1f92f.png" alt="🤯" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>Such a huge suite is a debugging and maintenance nightmare and very quickly turns into a <a target="_blank" href="https://en.wikipedia.org/wiki/Diminishing_returns" rel="noopener noreferrer">point of diminishing return</a> wherein you spend more time maintaining these flaky tests than spend time improving the quality of the product by the numerous other activities that you could have done.</p>
<p>I know, it’s not easy to let go of the temptation. But trust me, this is a hard choice that should be made sooner than later.</p>
<p>So what could we do?</p>
<p>Be more intentional and mindful of your automation. Treat UI automation as a part of your automation stack, but <b>not the only part</b>. You could instead test more functionality via the API or push some of these tests into Component Level tests instead of E2E tests.</p>
<h2><strong>Test Automation can Replace Exploratory Testing</strong></h2>
<p>One common mistake that a lot of organizations make is to think that <a target="_blank" href="https://blog.testproject.io/2020/03/26/automation-testing-for-beginners-ultimate-guide/" rel="noopener noreferrer">automated testing</a> is the only flavor of testing that’s needed to handle the scale of the organizations.</p>
<p>You would hear crazy claims/call to actions to automate 100% of the manual test cases as if that’s going to magically get translated into a high-quality product (valuable to the customer).</p>
<p>Test automation, while being a very powerful tool in the tool belt of a skilled tester, is not the only weapon and is quite inefficient in creatively exploring the product and thinking of its different flaws all the while exploring it. It is often inflexible in that it cannot change on the fly to different demands that your product might have, however, exploratory testing can.</p>
<p>Thus, instead of one being the replacement of others, think of them as two amigos and two sides of the same coin: with test automation as a way to get rid of the boring repeatable steps and to take care of giving the fast feedback that the team needs, whereas exploratory testing as a way to find the different areas of the system that are not yet explored and can feed into future automation projects or find really hard to detect bugs.</p>
<h2><strong>Conclusion</strong></h2>
<p>Are these the only mistakes that an automation engineer can make? Heck no, I’m sure you would have made some yourself. Why not share your experience around it with the community so that we can all learn from them and maybe not make them in the first place</p>
<p>If you found this post useful, do share it with a friend or colleague. Until next time, Happy Testing/Coding <img src="https://s.w.org/images/core/emoji/13.0.0/72x72/262e.png" alt="☮" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
</div>
<p><br />
<br /><a href="https://blog.testproject.io/2020/10/06/common-mistakes-in-test-automation/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Selenium 4 &#8211; New Features of Selenium WebDriver (Part 1) &#8211; Automated Visual Testing</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/selenium-4-new-features-of-selenium-webdriver-part-1-automated-visual-testing/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Mon, 05 Oct 2020 22:31:36 +0000</pubDate>
				<category><![CDATA[Automation]]></category>
		<category><![CDATA[automated]]></category>
		<category><![CDATA[Features]]></category>
		<category><![CDATA[Part]]></category>
		<category><![CDATA[Selenium]]></category>
		<category><![CDATA[testing]]></category>
		<category><![CDATA[Visual]]></category>
		<category><![CDATA[WebDriver]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/selenium-4-new-features-of-selenium-webdriver-part-1-automated-visual-testing/</guid>

					<description><![CDATA[Manoj Kumar published a teaser on Selenium 4, listing the new features expected and important deprecations across the Selenium Suite(]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<p>Manoj Kumar published a <a target="_blank" href="https://applitools.com/blog/selenium-4/" rel="noopener noreferrer">teaser on Selenium 4</a>, listing the new features expected and important deprecations across the Selenium Suite( Selenium IDE, Selenium WebDriver, and Grid). </p>
<p>This has already caused a buzz in the industry for not only testers but for the Ops and Dev communities as well. And why wouldn’t it?</p>
<p>Features such as the integration of DevTools APIs with Selenium Webdriver and Observability add a lot of value and expand Selenium’s reach.</p>
<p>Many requests were made by the community, asking for details on each of the features. Hence we started this series of posts addressing the features of Selenium 4.</p>
<p>In the first <a target="_blank" href="https://applitools.com/blog/selenium-4-migration/" rel="noopener noreferrer">blog post</a> of the Selenium 4 series, we discussed the deprecated components and their replacements.</p>
<p>In this blog post, as well as the next one, we will focus on some of the new features offered in Selenium 4, including:</p>
<ul>
<li>Relative Locators</li>
<li>Window and Tab Management</li>
<li>Chrome DevTools Protocol (next post)</li>
<li>Observability (next post)</li>
<li>Enhanced Exceptions (next post)</li>
</ul>
<p>Make sure you <a target="_blank" href="https://applitools.com/blog/how-to-install-selenium-4/" rel="noopener noreferrer">install Selenium 4</a> to be able to try the features we’ll discuss.</p>
<div class="small-cta">
<h2 class="heading-secondary">Webinar: Test Driving Selenium 4 with Angie Jones</h2>
<p>    <a target="_blank" href="https://go.applitools.com/201015-Angie-Jones-Selenium-4-webinar.html" class="btn arrow-right" rel="noopener noreferrer">Register Now</a>
</div>
<h2 id="h.eqka15d8494y">Relative Locators in Selenium 4</h2>
<p>All the engineers working on building web-based test automation scripts spend quite a bit of time writing and maintaining locators across the builds. It can be challenging to locate a few of them, especially the grids. </p>
<p>Tools such as Sahi and Taiko already have features to locate nearby elements by specifying the directions, however to accomplish this in Selenium requires complicated Xpath or CSS selectors to navigate to a “direction” around the hierarchical tree nodes in the DOM. This limitation often leads to inefficient locators, which make the tests brittle.</p>
<p>Relative Locators have come to the rescue by helping us locate elements based on their position with respect to other elements.</p>
<p><a target="_blank" href="https://angiejones.tech/selenium-4-relative-locators/" rel="noopener noreferrer">Relative locators</a> provide a newly added locator strategy to the existing eight (id, name, XPath, cssSelector, linkText, partialLinkText, className, and tagName) locator strategies. Relative locators locate the elements with respect to nearby specified elements.</p>
<p>A new method withTagName() is added, which returns an instance of RelativeLocator.RelativeBy class, a child class of By and offers methods to specify the direction of an element to be located.</p>
<pre id="h.hd241mdm7m8c" class="wp-block-preformatted">above()</pre>
<p>Used to locate an element just above the specified element</p>
<pre id="h.tzw7s8ffabyr" class="wp-block-preformatted">below()</pre>
<p>Used to locate the an element just below the specified element</p>
<pre id="h.tm1xnun7njcd" class="wp-block-preformatted">toLeftOf()</pre>
<p>Used to locate the an element located on the left of a specified element</p>
<pre id="h.ub47tke6i305" class="wp-block-preformatted">toRightOf()</pre>
<p>Used to locate the an element located on the right of a specified element</p>
<pre id="h.ytfqi6p52lfq" class="wp-block-preformatted">near()</pre>
<p>By default, it is used to locate an element at 50 pixels distant from a specified element. The distance can be passed as an argument to an overloaded method.</p>
<p>Let’s learn to use them with an example. We will use <a target="_blank" href="https://applitools.com/blog/category/advanced-topics/" rel="noopener noreferrer">Advanced Blogs on Applitools</a> webpage for this exercise.</p>
<figure class="wp-block-image"></figure>
<p>On the Landing page we could see 12 blogs with titles and links to the blogs listed in four rows and three columns each. Inspecting the page, we see each of the elements are listed using the ‘article’ tag and an id attribute.</p>
<p>For instance, I need to locate the Blog ”How to Visually Test React Components Using Our Storybook SDK,” which is visually located just below the first blog, “Migrating to Selenium 4: Here’s What Has Changed”.</p>
<p>Inspecting the DOM, I learned that all blogs have the <a target="_blank" href="https://www.javatpoint.com/html-tags" rel="noopener noreferrer">html tag</a> “article” and the blog “Migrating to Selenium 4: Here’s What Has Changed” has an attribute id as “post-22539”.</p>
<figure class="wp-block-image"><img loading="lazy" width="1600" height="394" src="https://applitools.com/wp-content/uploads/2020/10/pasted-image-0.png" alt="pasted image 0" class="wp-image-23761" srcset="https://applitools.com/wp-content/uploads/2020/10/pasted-image-0.png 1600w, https://applitools.com/wp-content/uploads/2020/10/pasted-image-0-300x74.png 300w, https://applitools.com/wp-content/uploads/2020/10/pasted-image-0-1024x252.png 1024w, https://applitools.com/wp-content/uploads/2020/10/pasted-image-0-768x189.png 768w, https://applitools.com/wp-content/uploads/2020/10/pasted-image-0-1536x378.png 1536w" sizes="(max-width: 1600px) 100vw, 1600px"/></figure>
<p>I could now locate “How to Visually Test React Components Using Our Storybook SDK” specifying its html tag “article” using withTagName(“article”) method and locating the “How to Visually Test React Components Using Our Storybook SDK” element with below() method as demonstrated on line 18.</p>
<p>First the “Migrating to Selenium 4: Here’s What Has Changed” blog is located using the id attribute and then below() method is used as direction to locate the “How to Visually Test React Components Using Our Storybook SDK” blog element.</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/ShamaUgale/b5e81d28bb9e32f9b2ecec4b5b8c647b.js</p>
</div>
<p>Similarly, refer to the sample code for the usage for above(), toRightOf() and toLeftOf() methods.</p>
<p>For more information on Relative Locators, <a target="_blank" href="https://angiejones.tech/selenium-4-relative-locators/" rel="noopener noreferrer">see this article by Angie Jones</a>.</p>
<h2 id="h.rvklczo2ffy2">Multiple Windows and Tabs</h2>
<p>Need to work with multiple windows or applications in a single test flow?  This is now possible!</p>
<p>We can create and open a brand new or tabbed window in the same session without having to create a new driver object to manage multiple applications in the same test.</p>
<p>This can be done with the newWindow() method.</p>
<p>On line 23 of the following code snippet, we create a brand new window by passing WindowType.WINDOW to newWindow() method. This will create a new window with the same driver reference.</p>
<p>On line 25 we open <a target="_blank" href="http://www.youtube.com" rel="noopener noreferrer">YouTube</a> in this window by using navigate().to() method or get() method.</p>
<p>Similarly, we could create a new tabbed window by passing WindowType.TAB as a parameter to newWindow() as shown on line 39.</p>
<div class="gist-wrapper">
<p>Embedding: https://gist.github.com/ShamaUgale/827a77b279322dcdd6c6395605aabcb0.js</p>
</div>
<p>To switch between these windows, you need to fetch the window IDs just like in the above example from line no 27-36, as we have been doing it in the previous versions of Selenium WebDriver.</p>
<h2 id="h.pl203j8ozjgb">W3C Standardization</h2>
<p>Selenium is a <a target="_blank" href="https://applitools.com/blog/2020-front-end-automation-testing/" rel="noopener noreferrer">widely used tool</a> for end users as well as vendors. Other popular automation tools such as Appium and Protractor are built on top of Selenium APIs.</p>
<p>With this, the tools that integrate with Selenium 4 now need to follow the W3C standard protocol.</p>
<p>In previous versions of Selenium Webdriver, JSON wire protocol was used to communicate between the Selenium Webdriver APIs and the browser native APIs. Every request and response communicated across the protocol was encoded and decoded. With W3C compliance, the communication between WebDriver and the browsers happens directly without any encoding and decoding required.</p>
<p>This means any software following W3C standard protocol can be integrated with Selenium with no compatibility issues. All the major browsers such as Chrome, IE and Safari are already W3C standard compliant.</p>
<h2 id="h.3bst29ontuje">Summary</h2>
<p>We went through a few of the new methods and features implemented in Selenium 4 and have provided ready-to-use code snippets for working with new and tabbed windows, installing and uninstalling the addons for Firefox and taking element level screenshots.</p>
<p>We learned how to use a brand new locator strategy, the Relative Locators, introduced in Selenium 4. We also discussed the importance of W3C standardization for tool vendors and products built on top of Selenium.</p>
<p>In the next post of this series, we will explore more brand new features in Selenium 4 such as Chrome DevTools Protocol, and Observability, and Enhanced Exceptions.</p>
</p></div>
<p><br />
<br /><a href="https://applitools.com/blog/new-features-selenium4/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Egregor Ransomware Threatens &#8216;Mass-Media&#8217; Release of Corporate Data</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/egregor-ransomware-threatens-mass-media-release-of-corporate-data/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 02 Oct 2020 21:31:53 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Corporate]]></category>
		<category><![CDATA[Data]]></category>
		<category><![CDATA[Egregor]]></category>
		<category><![CDATA[MassMedia]]></category>
		<category><![CDATA[Ransomware]]></category>
		<category><![CDATA[release]]></category>
		<category><![CDATA[Threatens]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/egregor-ransomware-threatens-mass-media-release-of-corporate-data/</guid>

					<description><![CDATA[The administrator of your personal data will be Threatpost, Inc., 500 Unicorn Park, Woburn, MA 01801. Detailed information on the]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<div class="c-note c-note--dash u-hidden u-block@md">
<p>The administrator of your personal data will be Threatpost, Inc., 500 Unicorn Park, Woburn, MA 01801. Detailed information on the processing of personal data can be found in the <a target="_blank" href="https://threatpost.com/web-privacy-policy/" rel="noopener noreferrer">privacy policy</a>. In addition, you will find them in the message confirming the subscription to the newsletter.</p>
</div>
</div>
<p><br />
<br /><a href="https://threatpost.com/egregor-ransomware-mass-media-corporate-data/159816/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Convenience vs. Online Security: Have Your Cake and Eat It Too</title>
		<link>http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/convenience-vs-online-security-have-your-cake-and-eat-it-too/</link>
		
		<dc:creator><![CDATA[svcselenium]]></dc:creator>
		<pubDate>Fri, 02 Oct 2020 15:23:32 +0000</pubDate>
				<category><![CDATA[Security]]></category>
		<category><![CDATA[Cake]]></category>
		<category><![CDATA[Convenience]]></category>
		<category><![CDATA[Eat]]></category>
		<category><![CDATA[Online]]></category>
		<guid isPermaLink="false">http://qe-blog-wordpress.qe-blog.10.50.222.172.xip.io/convenience-vs-online-security-have-your-cake-and-eat-it-too/</guid>

					<description><![CDATA[Convenience vs. Online Security: Have Your Cake and Eat It Too We live in a world where convenience is king.]]></description>
										<content:encoded><![CDATA[<p> <br />
</p>
<div>
<div class="author-block padding-bottom-xs">
                
            </div>
<h2><strong>Convenience vs. Online Security: Have Your Cake and Eat It Too</strong></h2>
<p>We live in a world where convenience is king. Personally, I don’t know what I would do without my calendar alerts popping up on my smartphone, ensuring that I don’t miss any important meetings (or birthdays).  I can also use a variety of apps to make appointments with my family’s doctor and check up on my kids’ educational progress while they are at home distance learning. While this technology is great and convenient, it has led to increased connectivity which tends to cause security implications. At what point do we draw the line between convenience and online security, and is there a way to ultimately have both? Let’s take a look.</p>
<h3><strong>Are Consumers Confident in Their Online Safety</strong><strong>? </strong></h3>
<p>Consumers want to live their lives fast. They are constantly on the go, prioritizing speedy technology and convenience – sometimes more than safety. As a result, basic security hygiene, like updating passwords, has fallen by the wayside. In fact, a <a target="_blank" href="https://securitybrief.co.nz/story/consumers-putting-convenience-over-security-due-to-covid-19-restrictions" rel="noopener noreferrer">recent survey conducted by YouGov</a> in April of 2020 revealed that consumers are overconfident in the level of protection that their credentials provide. 77% believe that their <a target="_blank" href="https://www.mcafee.com/blogs/consumer/online-banking-simple-steps-to-protect-yourself-from-bank-fraud/" rel="noopener noreferrer">banking credentials</a> are the most secure, followed by <a target="_blank" href="https://www.mcafee.com/blogs/consumer/online-shopping-scams-7-ways-to-fight-them/" rel="noopener noreferrer">online shopping</a> (74%), and work network logins (71%). Due to consumers’ overconfidence in the strength of their credentials, over half of online shoppers admitted that they have no plans to update their login details – and even more admitted to not updating bank and work passwords. As someone who just recently wrote a blog on common <a target="_blank" href="https://www.mcafee.com/blogs/consumer/what-does-your-password-say-about-your-preferences/" rel="noopener noreferrer">password habits</a> and how they can affect our online safety,</p>
<h3><strong>Finding a Balance Between Convenience and Security </strong></h3>
<p>As today’s users are trying to grasp what the “new normal” means for them and how they live their lives, many are branching out from the typical ways they used to order food, take workout classes, and more. Consumers are using food delivery sites that they’ve never used before and signing up for online fitness classes on new platforms to  stay healthy while social distancing. But by using these unfamiliar websites to establish a sense of normalcy, users might forget to take basic security precautions like making sure these websites have the standard <a target="_blank" href="https://" rel="noopener noreferrer">https://</a> security clearance or using a VPN. Paying attention to these security measures while exploring new platforms will allow users to enjoy the convenience of these tools without putting their online safety at risk.</p>
<p>According to <a target="_blank" href="https://www.mcafee.com/enterprise/en-us/lp/covid-19-dashboard.html;" rel="noopener noreferrer">McAfee Labs</a>, more than 113,000 websites have been published that used COVID-19 to lure internet users into giving up their personal details. But despite the risks associated with poor security hygiene, consumers appear to be pretty indifferent. When asked if <a target="_blank" href="https://www.mcafee.com/enterprise/en-us/assets/reports/rp-quarterly-threats-july-2020.pdf" rel="noopener noreferrer">COVID-19 and increased fraud</a> influenced them to use alternative banking or shopping apps/websites with more secure options, <a target="_blank" href="https://securitybrief.co.nz/story/consumers-putting-convenience-over-security-due-to-covid-19-restrictions" rel="noopener noreferrer">over three-quarters of U.S. consumers</a> stated no, or that they didn’t know. At the onset of the pandemic when consumers were under pressure to buy scarce, staple items, <a target="_blank" href="https://securitybrief.co.nz/story/consumers-putting-convenience-over-security-due-to-covid-19-restrictions" rel="noopener noreferrer">26% of consumers</a> in the U.S. admitted to overlooking online security concerns by using third-party merchants to buy things like toilet paper and disinfecting products.</p>
<p>Today’s users already have so much to worry about – I can’t blame them if their online security is falling by the wayside to allow physical health and wellness to take precedent. It’s times like these when people need to prioritize their health and basic survival above all else that consumers benefit most from intrinsic security that is constantly working in the background, so they can have peace of mind.</p>
<h3><strong>Let Them Have Security (and Convenience!)</strong></h3>
<p>The good news: convenience and security don’t have to be mutually exclusive. I can still use my healthcare provider’s app to schedule appointments and check in on my kids as they distance learn without risking our family’s privacy. When it comes to balancing convenience and online security, you and your family should use trusted solutions that will allow you to enjoy <a target="_blank" href="https://www.mcafee.com/blogs/consumer/securing-digital-frontiers/" rel="noopener noreferrer">all that the internet has to offer</a>  by providing security that is easy, convenient, and empowers you to enjoy a safe and private digital live.</p>
<p>Users can enjoy a comprehensive, yet holistic approach to protection by employing the help of a security solution like <a target="_blank" href="https://www.mcafee.com/en-us/antivirus/mcafee-total-protection.html" rel="noopener noreferrer">McAfee® Total Protection</a>. Consumers are safeguarded from malware  so they can continue to use their devices and web browsing to stream live workout classes, catch up with family over video conference, and more. The software’s detection capabilities are constantly being updated and enhanced <a target="_blank" href="https://www.mcafee.com/blogs/consumer/security-software-and-device-performance/" rel="noopener noreferrer">without compromising users’ device performance</a>.</p>
<p>McAfee Total Protection also includes <a target="_blank" href="https://www.mcafee.com/en-us/safe-browser/mcafee-webadvisor.html" rel="noopener noreferrer">McAfee® WebAdvisor</a> – web protection that enables users to sidestep attacks before they happen with clear warnings of risky websites, links, and files. McAfee WebAdvisor allows consumers to online shop or order food from their favorite restaurant while giving them the peace of mind that they’re on a safe website.</p>
<p>McAfee Total Protection also includes our secure VPN to ensure your family is prepared for potential threats that could be lurking around the corner. By enabling a VPN on your device, you can feel confident that the next time you bank or pay bills online, your connection is secure. With solutions like McAfee Total Protection and McAfee WebAdvisor in place, consumers can strike a balance between convenience and security, without sacrificing either.</p>
<h3><strong>Stay Updated</strong></h3>
<p>To stay updated on all things <a target="_blank" href="https://www.mcafee.com/en-us/index.html" rel="noopener noreferrer">McAfee</a> and on top of the latest consumer and mobile security threats, follow <a target="_blank" href="https://twitter.com/McAfee_Home" rel="noopener noreferrer">@McAfee_Home</a> on Twitter, listen to our podcast <a target="_blank" href="https://geo.itunes.apple.com/podcast/us/id1257232208?mt=2&#038;at=1010lbVy&#038;ct=mcafeehackable_GaryBlog_EndBlurb" rel="noopener noreferrer">Hackable?</a>, and ‘Like’ us on <a target="_blank" href="https://www.facebook.com/McAfee" rel="noopener noreferrer">Facebook</a>.</p>
<p> </p>
</p></div>
<p><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script><script>
  !function(f,b,e,v,n,t,s)
  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  s.parentNode.insertBefore(t,s)}(window, document,'script',
  'https://connect.facebook.net/en_US/fbevents.js');
  fbq('init', '187610925152304');
  fbq('track', 'PageView');
</script><script>
// load Facebook
!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;
t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,
document,'script','https://connect.facebook.net/en_US/fbevents.js');
fbq('init', '766537420057144');
fbq('track', "PageView");</p>
<p>//document.write('x3Cnoscript>x3Cimg height="1" width="1" style="display:none" src="https://www.facebook.com/tr?id=766537420057144&ev=PageView&noscript=1" />x3C/noscript>');
</script><br />
<br /><br />
<br /><a href="https://www.mcafee.com/blogs/consumer/convenience-vs-online-security-have-your-cake-and-eat-it-too/">Source link </a></p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>

<!--
Performance optimized by W3 Total Cache. Learn more: https://www.boldgrid.com/w3-total-cache/

Page Caching using disk: enhanced (Page is feed) 

Served from: qe-blog-wordpress.qe-blog.10.50.222.172.xip.io @ 2020-10-15 05:38:08 by W3 Total Cache
-->